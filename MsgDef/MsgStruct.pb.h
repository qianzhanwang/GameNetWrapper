// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MsgStruct.proto

#ifndef PROTOBUF_MsgStruct_2eproto__INCLUDED
#define PROTOBUF_MsgStruct_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace MsgProto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MsgStruct_2eproto();
void protobuf_AssignDesc_MsgStruct_2eproto();
void protobuf_ShutdownFile_MsgStruct_2eproto();

class Suint32Pair;
class SKeyValuePair;
class RoleData;
class TimeInfo;
class WorldPos;
class WorldView;
class WorldNodeHandler;
class WorldNodeVector;
class WorldArmy;
class WorldMine;
class WorldNpc;
class WorldCity;
class WorldTower;
class WorldBoss;
class RoleSoldier;
class RoleArmy;
class RoleBuild;
class RoleCity;
class RoleCityVector;
class RoleFightTitle;
class ResPlunder;
class SoldierOverView;
class SoldierDetail;
class ArmyFightDetail;
class FightReport;
class ResReport;
class FightReportMini;
class InvestReportMini;
class ArmyInvestReport;
class ResInvestReport;
class InvestigationReport;
class ReportDB;

enum WorldArmy_EState {
  WorldArmy_EState_E_MoveTo = 0,
  WorldArmy_EState_E_BackCity = 1,
  WorldArmy_EState_E_GetMine = 2,
  WorldArmy_EState_E_Fight = 3,
  WorldArmy_EState_E_Hold = 4,
  WorldArmy_EState_E_HoldNpc = 5,
  WorldArmy_EState_E_ArriveHome = 6,
  WorldArmy_EState_E_HoldTower = 7
};
bool WorldArmy_EState_IsValid(int value);
const WorldArmy_EState WorldArmy_EState_EState_MIN = WorldArmy_EState_E_MoveTo;
const WorldArmy_EState WorldArmy_EState_EState_MAX = WorldArmy_EState_E_HoldTower;
const int WorldArmy_EState_EState_ARRAYSIZE = WorldArmy_EState_EState_MAX + 1;

const ::google::protobuf::EnumDescriptor* WorldArmy_EState_descriptor();
inline const ::std::string& WorldArmy_EState_Name(WorldArmy_EState value) {
  return ::google::protobuf::internal::NameOfEnum(
    WorldArmy_EState_descriptor(), value);
}
inline bool WorldArmy_EState_Parse(
    const ::std::string& name, WorldArmy_EState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WorldArmy_EState>(
    WorldArmy_EState_descriptor(), name, value);
}
enum WorldArmy_MoveType {
  WorldArmy_MoveType_mt_fight = 0,
  WorldArmy_MoveType_mt_get = 1,
  WorldArmy_MoveType_mt_touch = 2
};
bool WorldArmy_MoveType_IsValid(int value);
const WorldArmy_MoveType WorldArmy_MoveType_MoveType_MIN = WorldArmy_MoveType_mt_fight;
const WorldArmy_MoveType WorldArmy_MoveType_MoveType_MAX = WorldArmy_MoveType_mt_touch;
const int WorldArmy_MoveType_MoveType_ARRAYSIZE = WorldArmy_MoveType_MoveType_MAX + 1;

const ::google::protobuf::EnumDescriptor* WorldArmy_MoveType_descriptor();
inline const ::std::string& WorldArmy_MoveType_Name(WorldArmy_MoveType value) {
  return ::google::protobuf::internal::NameOfEnum(
    WorldArmy_MoveType_descriptor(), value);
}
inline bool WorldArmy_MoveType_Parse(
    const ::std::string& name, WorldArmy_MoveType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WorldArmy_MoveType>(
    WorldArmy_MoveType_descriptor(), name, value);
}
enum WorldMine_EState {
  WorldMine_EState_E_Free = 0,
  WorldMine_EState_E_Holde = 1
};
bool WorldMine_EState_IsValid(int value);
const WorldMine_EState WorldMine_EState_EState_MIN = WorldMine_EState_E_Free;
const WorldMine_EState WorldMine_EState_EState_MAX = WorldMine_EState_E_Holde;
const int WorldMine_EState_EState_ARRAYSIZE = WorldMine_EState_EState_MAX + 1;

const ::google::protobuf::EnumDescriptor* WorldMine_EState_descriptor();
inline const ::std::string& WorldMine_EState_Name(WorldMine_EState value) {
  return ::google::protobuf::internal::NameOfEnum(
    WorldMine_EState_descriptor(), value);
}
inline bool WorldMine_EState_Parse(
    const ::std::string& name, WorldMine_EState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WorldMine_EState>(
    WorldMine_EState_descriptor(), name, value);
}
enum FightReport_EResult {
  FightReport_EResult_city_attack_win = 1,
  FightReport_EResult_city_attack_lose = 2,
  FightReport_EResult_city_def_win = 3,
  FightReport_EResult_city_def_lose = 4
};
bool FightReport_EResult_IsValid(int value);
const FightReport_EResult FightReport_EResult_EResult_MIN = FightReport_EResult_city_attack_win;
const FightReport_EResult FightReport_EResult_EResult_MAX = FightReport_EResult_city_def_lose;
const int FightReport_EResult_EResult_ARRAYSIZE = FightReport_EResult_EResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* FightReport_EResult_descriptor();
inline const ::std::string& FightReport_EResult_Name(FightReport_EResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    FightReport_EResult_descriptor(), value);
}
inline bool FightReport_EResult_Parse(
    const ::std::string& name, FightReport_EResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FightReport_EResult>(
    FightReport_EResult_descriptor(), name, value);
}
enum FightReport_EFightType {
  FightReport_EFightType_eft_tcity = 1,
  FightReport_EFightType_eft_wild = 2,
  FightReport_EFightType_eft_boss = 3
};
bool FightReport_EFightType_IsValid(int value);
const FightReport_EFightType FightReport_EFightType_EFightType_MIN = FightReport_EFightType_eft_tcity;
const FightReport_EFightType FightReport_EFightType_EFightType_MAX = FightReport_EFightType_eft_boss;
const int FightReport_EFightType_EFightType_ARRAYSIZE = FightReport_EFightType_EFightType_MAX + 1;

const ::google::protobuf::EnumDescriptor* FightReport_EFightType_descriptor();
inline const ::std::string& FightReport_EFightType_Name(FightReport_EFightType value) {
  return ::google::protobuf::internal::NameOfEnum(
    FightReport_EFightType_descriptor(), value);
}
inline bool FightReport_EFightType_Parse(
    const ::std::string& name, FightReport_EFightType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FightReport_EFightType>(
    FightReport_EFightType_descriptor(), name, value);
}
enum FightReportMini_EResult {
  FightReportMini_EResult_fight_ini = 0,
  FightReportMini_EResult_fight_win = 1,
  FightReportMini_EResult_fight_lose = 2
};
bool FightReportMini_EResult_IsValid(int value);
const FightReportMini_EResult FightReportMini_EResult_EResult_MIN = FightReportMini_EResult_fight_ini;
const FightReportMini_EResult FightReportMini_EResult_EResult_MAX = FightReportMini_EResult_fight_lose;
const int FightReportMini_EResult_EResult_ARRAYSIZE = FightReportMini_EResult_EResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* FightReportMini_EResult_descriptor();
inline const ::std::string& FightReportMini_EResult_Name(FightReportMini_EResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    FightReportMini_EResult_descriptor(), value);
}
inline bool FightReportMini_EResult_Parse(
    const ::std::string& name, FightReportMini_EResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FightReportMini_EResult>(
    FightReportMini_EResult_descriptor(), name, value);
}
enum EProtoVersion {
  EPV_CurVersion = 2
};
bool EProtoVersion_IsValid(int value);
const EProtoVersion EProtoVersion_MIN = EPV_CurVersion;
const EProtoVersion EProtoVersion_MAX = EPV_CurVersion;
const int EProtoVersion_ARRAYSIZE = EProtoVersion_MAX + 1;

const ::google::protobuf::EnumDescriptor* EProtoVersion_descriptor();
inline const ::std::string& EProtoVersion_Name(EProtoVersion value) {
  return ::google::protobuf::internal::NameOfEnum(
    EProtoVersion_descriptor(), value);
}
inline bool EProtoVersion_Parse(
    const ::std::string& name, EProtoVersion* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EProtoVersion>(
    EProtoVersion_descriptor(), name, value);
}
enum EItemType {
  E_null = 0,
  E_food = 1,
  E_iron = 2,
  E_crystal = 3
};
bool EItemType_IsValid(int value);
const EItemType EItemType_MIN = E_null;
const EItemType EItemType_MAX = E_crystal;
const int EItemType_ARRAYSIZE = EItemType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EItemType_descriptor();
inline const ::std::string& EItemType_Name(EItemType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EItemType_descriptor(), value);
}
inline bool EItemType_Parse(
    const ::std::string& name, EItemType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EItemType>(
    EItemType_descriptor(), name, value);
}
enum EAttrTypeDef {
  get_food_perh = 101,
  get_iron_perh = 102,
  get_crystal_perh = 103,
  product_food_perh = 104,
  product_iron_perh = 105,
  product_crystal_perh = 106,
  storage_food_max = 107,
  storage_iron_max = 108,
  storage_crystal_max = 109,
  protect_food_max = 110,
  protect_iron_max = 111,
  protect_crystal_max = 112
};
bool EAttrTypeDef_IsValid(int value);
const EAttrTypeDef EAttrTypeDef_MIN = get_food_perh;
const EAttrTypeDef EAttrTypeDef_MAX = protect_crystal_max;
const int EAttrTypeDef_ARRAYSIZE = EAttrTypeDef_MAX + 1;

const ::google::protobuf::EnumDescriptor* EAttrTypeDef_descriptor();
inline const ::std::string& EAttrTypeDef_Name(EAttrTypeDef value) {
  return ::google::protobuf::internal::NameOfEnum(
    EAttrTypeDef_descriptor(), value);
}
inline bool EAttrTypeDef_Parse(
    const ::std::string& name, EAttrTypeDef* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EAttrTypeDef>(
    EAttrTypeDef_descriptor(), name, value);
}
enum EKeyType {
  EKT_Base = 0
};
bool EKeyType_IsValid(int value);
const EKeyType EKeyType_MIN = EKT_Base;
const EKeyType EKeyType_MAX = EKT_Base;
const int EKeyType_ARRAYSIZE = EKeyType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EKeyType_descriptor();
inline const ::std::string& EKeyType_Name(EKeyType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EKeyType_descriptor(), value);
}
inline bool EKeyType_Parse(
    const ::std::string& name, EKeyType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EKeyType>(
    EKeyType_descriptor(), name, value);
}
enum EObjectType {
  E_army = 1,
  E_build = 2,
  E_mine = 3,
  E_npc = 4,
  E_boss = 5,
  E_tower = 6
};
bool EObjectType_IsValid(int value);
const EObjectType EObjectType_MIN = E_army;
const EObjectType EObjectType_MAX = E_tower;
const int EObjectType_ARRAYSIZE = EObjectType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EObjectType_descriptor();
inline const ::std::string& EObjectType_Name(EObjectType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EObjectType_descriptor(), value);
}
inline bool EObjectType_Parse(
    const ::std::string& name, EObjectType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EObjectType>(
    EObjectType_descriptor(), name, value);
}
enum EResOwner {
  E_None = 0,
  E_self = 1,
  E_friend = 2,
  E_enermy = 3
};
bool EResOwner_IsValid(int value);
const EResOwner EResOwner_MIN = E_None;
const EResOwner EResOwner_MAX = E_enermy;
const int EResOwner_ARRAYSIZE = EResOwner_MAX + 1;

const ::google::protobuf::EnumDescriptor* EResOwner_descriptor();
inline const ::std::string& EResOwner_Name(EResOwner value) {
  return ::google::protobuf::internal::NameOfEnum(
    EResOwner_descriptor(), value);
}
inline bool EResOwner_Parse(
    const ::std::string& name, EResOwner* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EResOwner>(
    EResOwner_descriptor(), name, value);
}
// ===================================================================

class Suint32Pair : public ::google::protobuf::Message {
 public:
  Suint32Pair();
  virtual ~Suint32Pair();

  Suint32Pair(const Suint32Pair& from);

  inline Suint32Pair& operator=(const Suint32Pair& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Suint32Pair& default_instance();

  void Swap(Suint32Pair* other);

  // implements Message ----------------------------------------------

  Suint32Pair* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Suint32Pair& from);
  void MergeFrom(const Suint32Pair& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgProto.EKeyType m_eType = 1 [default = EKT_Base];
  inline bool has_m_etype() const;
  inline void clear_m_etype();
  static const int kMETypeFieldNumber = 1;
  inline ::MsgProto::EKeyType m_etype() const;
  inline void set_m_etype(::MsgProto::EKeyType value);

  // optional uint32 m_uValue = 2 [default = 0];
  inline bool has_m_uvalue() const;
  inline void clear_m_uvalue();
  static const int kMUValueFieldNumber = 2;
  inline ::google::protobuf::uint32 m_uvalue() const;
  inline void set_m_uvalue(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MsgProto.Suint32Pair)
 private:
  inline void set_has_m_etype();
  inline void clear_has_m_etype();
  inline void set_has_m_uvalue();
  inline void clear_has_m_uvalue();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int m_etype_;
  ::google::protobuf::uint32 m_uvalue_;
  friend void  protobuf_AddDesc_MsgStruct_2eproto();
  friend void protobuf_AssignDesc_MsgStruct_2eproto();
  friend void protobuf_ShutdownFile_MsgStruct_2eproto();

  void InitAsDefaultInstance();
  static Suint32Pair* default_instance_;
};
// -------------------------------------------------------------------

class SKeyValuePair : public ::google::protobuf::Message {
 public:
  SKeyValuePair();
  virtual ~SKeyValuePair();

  SKeyValuePair(const SKeyValuePair& from);

  inline SKeyValuePair& operator=(const SKeyValuePair& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SKeyValuePair& default_instance();

  void Swap(SKeyValuePair* other);

  // implements Message ----------------------------------------------

  SKeyValuePair* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SKeyValuePair& from);
  void MergeFrom(const SKeyValuePair& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 m_uKey = 1 [default = 0];
  inline bool has_m_ukey() const;
  inline void clear_m_ukey();
  static const int kMUKeyFieldNumber = 1;
  inline ::google::protobuf::uint32 m_ukey() const;
  inline void set_m_ukey(::google::protobuf::uint32 value);

  // optional uint32 m_uValue = 2 [default = 0];
  inline bool has_m_uvalue() const;
  inline void clear_m_uvalue();
  static const int kMUValueFieldNumber = 2;
  inline ::google::protobuf::uint32 m_uvalue() const;
  inline void set_m_uvalue(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MsgProto.SKeyValuePair)
 private:
  inline void set_has_m_ukey();
  inline void clear_has_m_ukey();
  inline void set_has_m_uvalue();
  inline void clear_has_m_uvalue();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 m_ukey_;
  ::google::protobuf::uint32 m_uvalue_;
  friend void  protobuf_AddDesc_MsgStruct_2eproto();
  friend void protobuf_AssignDesc_MsgStruct_2eproto();
  friend void protobuf_ShutdownFile_MsgStruct_2eproto();

  void InitAsDefaultInstance();
  static SKeyValuePair* default_instance_;
};
// -------------------------------------------------------------------

class RoleData : public ::google::protobuf::Message {
 public:
  RoleData();
  virtual ~RoleData();

  RoleData(const RoleData& from);

  inline RoleData& operator=(const RoleData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleData& default_instance();

  void Swap(RoleData* other);

  // implements Message ----------------------------------------------

  RoleData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleData& from);
  void MergeFrom(const RoleData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 m_uID = 1 [default = 0];
  inline bool has_m_uid() const;
  inline void clear_m_uid();
  static const int kMUIDFieldNumber = 1;
  inline ::google::protobuf::uint32 m_uid() const;
  inline void set_m_uid(::google::protobuf::uint32 value);

  // optional uint32 m_uLastLoing = 2 [default = 0];
  inline bool has_m_ulastloing() const;
  inline void clear_m_ulastloing();
  static const int kMULastLoingFieldNumber = 2;
  inline ::google::protobuf::uint32 m_ulastloing() const;
  inline void set_m_ulastloing(::google::protobuf::uint32 value);

  // optional bytes m_strName = 3;
  inline bool has_m_strname() const;
  inline void clear_m_strname();
  static const int kMStrNameFieldNumber = 3;
  inline const ::std::string& m_strname() const;
  inline void set_m_strname(const ::std::string& value);
  inline void set_m_strname(const char* value);
  inline void set_m_strname(const void* value, size_t size);
  inline ::std::string* mutable_m_strname();
  inline ::std::string* release_m_strname();
  inline void set_allocated_m_strname(::std::string* m_strname);

  // optional uint32 m_cityid = 4 [default = 0];
  inline bool has_m_cityid() const;
  inline void clear_m_cityid();
  static const int kMCityidFieldNumber = 4;
  inline ::google::protobuf::uint32 m_cityid() const;
  inline void set_m_cityid(::google::protobuf::uint32 value);

  // optional uint32 m_gold = 8 [default = 0];
  inline bool has_m_gold() const;
  inline void clear_m_gold();
  static const int kMGoldFieldNumber = 8;
  inline ::google::protobuf::uint32 m_gold() const;
  inline void set_m_gold(::google::protobuf::uint32 value);

  // optional uint32 m_attackpower = 9 [default = 0];
  inline bool has_m_attackpower() const;
  inline void clear_m_attackpower();
  static const int kMAttackpowerFieldNumber = 9;
  inline ::google::protobuf::uint32 m_attackpower() const;
  inline void set_m_attackpower(::google::protobuf::uint32 value);

  // optional uint32 m_sex = 10 [default = 0];
  inline bool has_m_sex() const;
  inline void clear_m_sex();
  static const int kMSexFieldNumber = 10;
  inline ::google::protobuf::uint32 m_sex() const;
  inline void set_m_sex(::google::protobuf::uint32 value);

  // optional uint32 m_photoid = 11 [default = 0];
  inline bool has_m_photoid() const;
  inline void clear_m_photoid();
  static const int kMPhotoidFieldNumber = 11;
  inline ::google::protobuf::uint32 m_photoid() const;
  inline void set_m_photoid(::google::protobuf::uint32 value);

  // optional uint32 m_level = 12 [default = 0];
  inline bool has_m_level() const;
  inline void clear_m_level();
  static const int kMLevelFieldNumber = 12;
  inline ::google::protobuf::uint32 m_level() const;
  inline void set_m_level(::google::protobuf::uint32 value);

  // optional uint32 m_vip = 13 [default = 0];
  inline bool has_m_vip() const;
  inline void clear_m_vip();
  static const int kMVipFieldNumber = 13;
  inline ::google::protobuf::uint32 m_vip() const;
  inline void set_m_vip(::google::protobuf::uint32 value);

  // optional uint32 m_exp_level = 14 [default = 0];
  inline bool has_m_exp_level() const;
  inline void clear_m_exp_level();
  static const int kMExpLevelFieldNumber = 14;
  inline ::google::protobuf::uint32 m_exp_level() const;
  inline void set_m_exp_level(::google::protobuf::uint32 value);

  // optional uint32 m_exp_vip = 15 [default = 0];
  inline bool has_m_exp_vip() const;
  inline void clear_m_exp_vip();
  static const int kMExpVipFieldNumber = 15;
  inline ::google::protobuf::uint32 m_exp_vip() const;
  inline void set_m_exp_vip(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MsgProto.RoleData)
 private:
  inline void set_has_m_uid();
  inline void clear_has_m_uid();
  inline void set_has_m_ulastloing();
  inline void clear_has_m_ulastloing();
  inline void set_has_m_strname();
  inline void clear_has_m_strname();
  inline void set_has_m_cityid();
  inline void clear_has_m_cityid();
  inline void set_has_m_gold();
  inline void clear_has_m_gold();
  inline void set_has_m_attackpower();
  inline void clear_has_m_attackpower();
  inline void set_has_m_sex();
  inline void clear_has_m_sex();
  inline void set_has_m_photoid();
  inline void clear_has_m_photoid();
  inline void set_has_m_level();
  inline void clear_has_m_level();
  inline void set_has_m_vip();
  inline void clear_has_m_vip();
  inline void set_has_m_exp_level();
  inline void clear_has_m_exp_level();
  inline void set_has_m_exp_vip();
  inline void clear_has_m_exp_vip();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 m_uid_;
  ::google::protobuf::uint32 m_ulastloing_;
  ::std::string* m_strname_;
  ::google::protobuf::uint32 m_cityid_;
  ::google::protobuf::uint32 m_gold_;
  ::google::protobuf::uint32 m_attackpower_;
  ::google::protobuf::uint32 m_sex_;
  ::google::protobuf::uint32 m_photoid_;
  ::google::protobuf::uint32 m_level_;
  ::google::protobuf::uint32 m_vip_;
  ::google::protobuf::uint32 m_exp_level_;
  ::google::protobuf::uint32 m_exp_vip_;
  friend void  protobuf_AddDesc_MsgStruct_2eproto();
  friend void protobuf_AssignDesc_MsgStruct_2eproto();
  friend void protobuf_ShutdownFile_MsgStruct_2eproto();

  void InitAsDefaultInstance();
  static RoleData* default_instance_;
};
// -------------------------------------------------------------------

class TimeInfo : public ::google::protobuf::Message {
 public:
  TimeInfo();
  virtual ~TimeInfo();

  TimeInfo(const TimeInfo& from);

  inline TimeInfo& operator=(const TimeInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TimeInfo& default_instance();

  void Swap(TimeInfo* other);

  // implements Message ----------------------------------------------

  TimeInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TimeInfo& from);
  void MergeFrom(const TimeInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 m_leftsecond = 1 [default = 0];
  inline bool has_m_leftsecond() const;
  inline void clear_m_leftsecond();
  static const int kMLeftsecondFieldNumber = 1;
  inline ::google::protobuf::uint32 m_leftsecond() const;
  inline void set_m_leftsecond(::google::protobuf::uint32 value);

  // optional uint32 m_dsttime = 2 [default = 0];
  inline bool has_m_dsttime() const;
  inline void clear_m_dsttime();
  static const int kMDsttimeFieldNumber = 2;
  inline ::google::protobuf::uint32 m_dsttime() const;
  inline void set_m_dsttime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MsgProto.TimeInfo)
 private:
  inline void set_has_m_leftsecond();
  inline void clear_has_m_leftsecond();
  inline void set_has_m_dsttime();
  inline void clear_has_m_dsttime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 m_leftsecond_;
  ::google::protobuf::uint32 m_dsttime_;
  friend void  protobuf_AddDesc_MsgStruct_2eproto();
  friend void protobuf_AssignDesc_MsgStruct_2eproto();
  friend void protobuf_ShutdownFile_MsgStruct_2eproto();

  void InitAsDefaultInstance();
  static TimeInfo* default_instance_;
};
// -------------------------------------------------------------------

class WorldPos : public ::google::protobuf::Message {
 public:
  WorldPos();
  virtual ~WorldPos();

  WorldPos(const WorldPos& from);

  inline WorldPos& operator=(const WorldPos& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldPos& default_instance();

  void Swap(WorldPos* other);

  // implements Message ----------------------------------------------

  WorldPos* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldPos& from);
  void MergeFrom(const WorldPos& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 m_x = 1 [default = 0];
  inline bool has_m_x() const;
  inline void clear_m_x();
  static const int kMXFieldNumber = 1;
  inline ::google::protobuf::uint32 m_x() const;
  inline void set_m_x(::google::protobuf::uint32 value);

  // optional uint32 m_y = 2 [default = 0];
  inline bool has_m_y() const;
  inline void clear_m_y();
  static const int kMYFieldNumber = 2;
  inline ::google::protobuf::uint32 m_y() const;
  inline void set_m_y(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MsgProto.WorldPos)
 private:
  inline void set_has_m_x();
  inline void clear_has_m_x();
  inline void set_has_m_y();
  inline void clear_has_m_y();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 m_x_;
  ::google::protobuf::uint32 m_y_;
  friend void  protobuf_AddDesc_MsgStruct_2eproto();
  friend void protobuf_AssignDesc_MsgStruct_2eproto();
  friend void protobuf_ShutdownFile_MsgStruct_2eproto();

  void InitAsDefaultInstance();
  static WorldPos* default_instance_;
};
// -------------------------------------------------------------------

class WorldView : public ::google::protobuf::Message {
 public:
  WorldView();
  virtual ~WorldView();

  WorldView(const WorldView& from);

  inline WorldView& operator=(const WorldView& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldView& default_instance();

  void Swap(WorldView* other);

  // implements Message ----------------------------------------------

  WorldView* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldView& from);
  void MergeFrom(const WorldView& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgProto.WorldPos m_pos_from = 1;
  inline bool has_m_pos_from() const;
  inline void clear_m_pos_from();
  static const int kMPosFromFieldNumber = 1;
  inline const ::MsgProto::WorldPos& m_pos_from() const;
  inline ::MsgProto::WorldPos* mutable_m_pos_from();
  inline ::MsgProto::WorldPos* release_m_pos_from();
  inline void set_allocated_m_pos_from(::MsgProto::WorldPos* m_pos_from);

  // optional .MsgProto.WorldPos m_pos_to = 2;
  inline bool has_m_pos_to() const;
  inline void clear_m_pos_to();
  static const int kMPosToFieldNumber = 2;
  inline const ::MsgProto::WorldPos& m_pos_to() const;
  inline ::MsgProto::WorldPos* mutable_m_pos_to();
  inline ::MsgProto::WorldPos* release_m_pos_to();
  inline void set_allocated_m_pos_to(::MsgProto::WorldPos* m_pos_to);

  // @@protoc_insertion_point(class_scope:MsgProto.WorldView)
 private:
  inline void set_has_m_pos_from();
  inline void clear_has_m_pos_from();
  inline void set_has_m_pos_to();
  inline void clear_has_m_pos_to();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::MsgProto::WorldPos* m_pos_from_;
  ::MsgProto::WorldPos* m_pos_to_;
  friend void  protobuf_AddDesc_MsgStruct_2eproto();
  friend void protobuf_AssignDesc_MsgStruct_2eproto();
  friend void protobuf_ShutdownFile_MsgStruct_2eproto();

  void InitAsDefaultInstance();
  static WorldView* default_instance_;
};
// -------------------------------------------------------------------

class WorldNodeHandler : public ::google::protobuf::Message {
 public:
  WorldNodeHandler();
  virtual ~WorldNodeHandler();

  WorldNodeHandler(const WorldNodeHandler& from);

  inline WorldNodeHandler& operator=(const WorldNodeHandler& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldNodeHandler& default_instance();

  void Swap(WorldNodeHandler* other);

  // implements Message ----------------------------------------------

  WorldNodeHandler* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldNodeHandler& from);
  void MergeFrom(const WorldNodeHandler& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgProto.EObjectType m_etype = 1 [default = E_army];
  inline bool has_m_etype() const;
  inline void clear_m_etype();
  static const int kMEtypeFieldNumber = 1;
  inline ::MsgProto::EObjectType m_etype() const;
  inline void set_m_etype(::MsgProto::EObjectType value);

  // optional uint32 m_id = 2 [default = 0];
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 2;
  inline ::google::protobuf::uint32 m_id() const;
  inline void set_m_id(::google::protobuf::uint32 value);

  // optional uint32 m_tableid = 3 [default = 0];
  inline bool has_m_tableid() const;
  inline void clear_m_tableid();
  static const int kMTableidFieldNumber = 3;
  inline ::google::protobuf::uint32 m_tableid() const;
  inline void set_m_tableid(::google::protobuf::uint32 value);

  // optional uint32 m_roleid = 4 [default = 0];
  inline bool has_m_roleid() const;
  inline void clear_m_roleid();
  static const int kMRoleidFieldNumber = 4;
  inline ::google::protobuf::uint32 m_roleid() const;
  inline void set_m_roleid(::google::protobuf::uint32 value);

  // optional .MsgProto.WorldView m_view = 5;
  inline bool has_m_view() const;
  inline void clear_m_view();
  static const int kMViewFieldNumber = 5;
  inline const ::MsgProto::WorldView& m_view() const;
  inline ::MsgProto::WorldView* mutable_m_view();
  inline ::MsgProto::WorldView* release_m_view();
  inline void set_allocated_m_view(::MsgProto::WorldView* m_view);

  // optional uint32 m_hp = 6 [default = 0];
  inline bool has_m_hp() const;
  inline void clear_m_hp();
  static const int kMHpFieldNumber = 6;
  inline ::google::protobuf::uint32 m_hp() const;
  inline void set_m_hp(::google::protobuf::uint32 value);

  // repeated uint32 m_army_ids = 7;
  inline int m_army_ids_size() const;
  inline void clear_m_army_ids();
  static const int kMArmyIdsFieldNumber = 7;
  inline ::google::protobuf::uint32 m_army_ids(int index) const;
  inline void set_m_army_ids(int index, ::google::protobuf::uint32 value);
  inline void add_m_army_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      m_army_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_m_army_ids();

  // @@protoc_insertion_point(class_scope:MsgProto.WorldNodeHandler)
 private:
  inline void set_has_m_etype();
  inline void clear_has_m_etype();
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_tableid();
  inline void clear_has_m_tableid();
  inline void set_has_m_roleid();
  inline void clear_has_m_roleid();
  inline void set_has_m_view();
  inline void clear_has_m_view();
  inline void set_has_m_hp();
  inline void clear_has_m_hp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int m_etype_;
  ::google::protobuf::uint32 m_id_;
  ::google::protobuf::uint32 m_tableid_;
  ::google::protobuf::uint32 m_roleid_;
  ::MsgProto::WorldView* m_view_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > m_army_ids_;
  ::google::protobuf::uint32 m_hp_;
  friend void  protobuf_AddDesc_MsgStruct_2eproto();
  friend void protobuf_AssignDesc_MsgStruct_2eproto();
  friend void protobuf_ShutdownFile_MsgStruct_2eproto();

  void InitAsDefaultInstance();
  static WorldNodeHandler* default_instance_;
};
// -------------------------------------------------------------------

class WorldNodeVector : public ::google::protobuf::Message {
 public:
  WorldNodeVector();
  virtual ~WorldNodeVector();

  WorldNodeVector(const WorldNodeVector& from);

  inline WorldNodeVector& operator=(const WorldNodeVector& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldNodeVector& default_instance();

  void Swap(WorldNodeVector* other);

  // implements Message ----------------------------------------------

  WorldNodeVector* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldNodeVector& from);
  void MergeFrom(const WorldNodeVector& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .MsgProto.WorldNodeHandler m_nodes = 9;
  inline int m_nodes_size() const;
  inline void clear_m_nodes();
  static const int kMNodesFieldNumber = 9;
  inline const ::MsgProto::WorldNodeHandler& m_nodes(int index) const;
  inline ::MsgProto::WorldNodeHandler* mutable_m_nodes(int index);
  inline ::MsgProto::WorldNodeHandler* add_m_nodes();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgProto::WorldNodeHandler >&
      m_nodes() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgProto::WorldNodeHandler >*
      mutable_m_nodes();

  // @@protoc_insertion_point(class_scope:MsgProto.WorldNodeVector)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::MsgProto::WorldNodeHandler > m_nodes_;
  friend void  protobuf_AddDesc_MsgStruct_2eproto();
  friend void protobuf_AssignDesc_MsgStruct_2eproto();
  friend void protobuf_ShutdownFile_MsgStruct_2eproto();

  void InitAsDefaultInstance();
  static WorldNodeVector* default_instance_;
};
// -------------------------------------------------------------------

class WorldArmy : public ::google::protobuf::Message {
 public:
  WorldArmy();
  virtual ~WorldArmy();

  WorldArmy(const WorldArmy& from);

  inline WorldArmy& operator=(const WorldArmy& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldArmy& default_instance();

  void Swap(WorldArmy* other);

  // implements Message ----------------------------------------------

  WorldArmy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldArmy& from);
  void MergeFrom(const WorldArmy& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef WorldArmy_EState EState;
  static const EState E_MoveTo = WorldArmy_EState_E_MoveTo;
  static const EState E_BackCity = WorldArmy_EState_E_BackCity;
  static const EState E_GetMine = WorldArmy_EState_E_GetMine;
  static const EState E_Fight = WorldArmy_EState_E_Fight;
  static const EState E_Hold = WorldArmy_EState_E_Hold;
  static const EState E_HoldNpc = WorldArmy_EState_E_HoldNpc;
  static const EState E_ArriveHome = WorldArmy_EState_E_ArriveHome;
  static const EState E_HoldTower = WorldArmy_EState_E_HoldTower;
  static inline bool EState_IsValid(int value) {
    return WorldArmy_EState_IsValid(value);
  }
  static const EState EState_MIN =
    WorldArmy_EState_EState_MIN;
  static const EState EState_MAX =
    WorldArmy_EState_EState_MAX;
  static const int EState_ARRAYSIZE =
    WorldArmy_EState_EState_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EState_descriptor() {
    return WorldArmy_EState_descriptor();
  }
  static inline const ::std::string& EState_Name(EState value) {
    return WorldArmy_EState_Name(value);
  }
  static inline bool EState_Parse(const ::std::string& name,
      EState* value) {
    return WorldArmy_EState_Parse(name, value);
  }

  typedef WorldArmy_MoveType MoveType;
  static const MoveType mt_fight = WorldArmy_MoveType_mt_fight;
  static const MoveType mt_get = WorldArmy_MoveType_mt_get;
  static const MoveType mt_touch = WorldArmy_MoveType_mt_touch;
  static inline bool MoveType_IsValid(int value) {
    return WorldArmy_MoveType_IsValid(value);
  }
  static const MoveType MoveType_MIN =
    WorldArmy_MoveType_MoveType_MIN;
  static const MoveType MoveType_MAX =
    WorldArmy_MoveType_MoveType_MAX;
  static const int MoveType_ARRAYSIZE =
    WorldArmy_MoveType_MoveType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MoveType_descriptor() {
    return WorldArmy_MoveType_descriptor();
  }
  static inline const ::std::string& MoveType_Name(MoveType value) {
    return WorldArmy_MoveType_Name(value);
  }
  static inline bool MoveType_Parse(const ::std::string& name,
      MoveType* value) {
    return WorldArmy_MoveType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional uint32 m_uArmyID = 1 [default = 0];
  inline bool has_m_uarmyid() const;
  inline void clear_m_uarmyid();
  static const int kMUArmyIDFieldNumber = 1;
  inline ::google::protobuf::uint32 m_uarmyid() const;
  inline void set_m_uarmyid(::google::protobuf::uint32 value);

  // optional uint32 m_uRoleID = 2 [default = 0];
  inline bool has_m_uroleid() const;
  inline void clear_m_uroleid();
  static const int kMURoleIDFieldNumber = 2;
  inline ::google::protobuf::uint32 m_uroleid() const;
  inline void set_m_uroleid(::google::protobuf::uint32 value);

  // optional uint32 m_uCityID = 3 [default = 0];
  inline bool has_m_ucityid() const;
  inline void clear_m_ucityid();
  static const int kMUCityIDFieldNumber = 3;
  inline ::google::protobuf::uint32 m_ucityid() const;
  inline void set_m_ucityid(::google::protobuf::uint32 value);

  // optional .MsgProto.WorldArmy.EState m_eState = 4 [default = E_MoveTo];
  inline bool has_m_estate() const;
  inline void clear_m_estate();
  static const int kMEStateFieldNumber = 4;
  inline ::MsgProto::WorldArmy_EState m_estate() const;
  inline void set_m_estate(::MsgProto::WorldArmy_EState value);

  // optional .MsgProto.WorldView m_view_from = 5;
  inline bool has_m_view_from() const;
  inline void clear_m_view_from();
  static const int kMViewFromFieldNumber = 5;
  inline const ::MsgProto::WorldView& m_view_from() const;
  inline ::MsgProto::WorldView* mutable_m_view_from();
  inline ::MsgProto::WorldView* release_m_view_from();
  inline void set_allocated_m_view_from(::MsgProto::WorldView* m_view_from);

  // optional .MsgProto.WorldView m_view_to = 6;
  inline bool has_m_view_to() const;
  inline void clear_m_view_to();
  static const int kMViewToFieldNumber = 6;
  inline const ::MsgProto::WorldView& m_view_to() const;
  inline ::MsgProto::WorldView* mutable_m_view_to();
  inline ::MsgProto::WorldView* release_m_view_to();
  inline void set_allocated_m_view_to(::MsgProto::WorldView* m_view_to);

  // optional uint32 m_uMoveSpeed = 7 [default = 0];
  inline bool has_m_umovespeed() const;
  inline void clear_m_umovespeed();
  static const int kMUMoveSpeedFieldNumber = 7;
  inline ::google::protobuf::uint32 m_umovespeed() const;
  inline void set_m_umovespeed(::google::protobuf::uint32 value);

  // optional .MsgProto.TimeInfo m_time = 8;
  inline bool has_m_time() const;
  inline void clear_m_time();
  static const int kMTimeFieldNumber = 8;
  inline const ::MsgProto::TimeInfo& m_time() const;
  inline ::MsgProto::TimeInfo* mutable_m_time();
  inline ::MsgProto::TimeInfo* release_m_time();
  inline void set_allocated_m_time(::MsgProto::TimeInfo* m_time);

  // repeated .MsgProto.SKeyValuePair m_res = 9;
  inline int m_res_size() const;
  inline void clear_m_res();
  static const int kMResFieldNumber = 9;
  inline const ::MsgProto::SKeyValuePair& m_res(int index) const;
  inline ::MsgProto::SKeyValuePair* mutable_m_res(int index);
  inline ::MsgProto::SKeyValuePair* add_m_res();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgProto::SKeyValuePair >&
      m_res() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgProto::SKeyValuePair >*
      mutable_m_res();

  // optional .MsgProto.EResOwner m_owner = 10 [default = E_None];
  inline bool has_m_owner() const;
  inline void clear_m_owner();
  static const int kMOwnerFieldNumber = 10;
  inline ::MsgProto::EResOwner m_owner() const;
  inline void set_m_owner(::MsgProto::EResOwner value);

  // optional .MsgProto.WorldArmy.MoveType m_mt = 11 [default = mt_fight];
  inline bool has_m_mt() const;
  inline void clear_m_mt();
  static const int kMMtFieldNumber = 11;
  inline ::MsgProto::WorldArmy_MoveType m_mt() const;
  inline void set_m_mt(::MsgProto::WorldArmy_MoveType value);

  // optional uint32 m_fight_res = 12 [default = 0];
  inline bool has_m_fight_res() const;
  inline void clear_m_fight_res();
  static const int kMFightResFieldNumber = 12;
  inline ::google::protobuf::uint32 m_fight_res() const;
  inline void set_m_fight_res(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MsgProto.WorldArmy)
 private:
  inline void set_has_m_uarmyid();
  inline void clear_has_m_uarmyid();
  inline void set_has_m_uroleid();
  inline void clear_has_m_uroleid();
  inline void set_has_m_ucityid();
  inline void clear_has_m_ucityid();
  inline void set_has_m_estate();
  inline void clear_has_m_estate();
  inline void set_has_m_view_from();
  inline void clear_has_m_view_from();
  inline void set_has_m_view_to();
  inline void clear_has_m_view_to();
  inline void set_has_m_umovespeed();
  inline void clear_has_m_umovespeed();
  inline void set_has_m_time();
  inline void clear_has_m_time();
  inline void set_has_m_owner();
  inline void clear_has_m_owner();
  inline void set_has_m_mt();
  inline void clear_has_m_mt();
  inline void set_has_m_fight_res();
  inline void clear_has_m_fight_res();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 m_uarmyid_;
  ::google::protobuf::uint32 m_uroleid_;
  ::google::protobuf::uint32 m_ucityid_;
  int m_estate_;
  ::MsgProto::WorldView* m_view_from_;
  ::MsgProto::WorldView* m_view_to_;
  ::MsgProto::TimeInfo* m_time_;
  ::google::protobuf::uint32 m_umovespeed_;
  int m_owner_;
  ::google::protobuf::RepeatedPtrField< ::MsgProto::SKeyValuePair > m_res_;
  int m_mt_;
  ::google::protobuf::uint32 m_fight_res_;
  friend void  protobuf_AddDesc_MsgStruct_2eproto();
  friend void protobuf_AssignDesc_MsgStruct_2eproto();
  friend void protobuf_ShutdownFile_MsgStruct_2eproto();

  void InitAsDefaultInstance();
  static WorldArmy* default_instance_;
};
// -------------------------------------------------------------------

class WorldMine : public ::google::protobuf::Message {
 public:
  WorldMine();
  virtual ~WorldMine();

  WorldMine(const WorldMine& from);

  inline WorldMine& operator=(const WorldMine& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldMine& default_instance();

  void Swap(WorldMine* other);

  // implements Message ----------------------------------------------

  WorldMine* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldMine& from);
  void MergeFrom(const WorldMine& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef WorldMine_EState EState;
  static const EState E_Free = WorldMine_EState_E_Free;
  static const EState E_Holde = WorldMine_EState_E_Holde;
  static inline bool EState_IsValid(int value) {
    return WorldMine_EState_IsValid(value);
  }
  static const EState EState_MIN =
    WorldMine_EState_EState_MIN;
  static const EState EState_MAX =
    WorldMine_EState_EState_MAX;
  static const int EState_ARRAYSIZE =
    WorldMine_EState_EState_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EState_descriptor() {
    return WorldMine_EState_descriptor();
  }
  static inline const ::std::string& EState_Name(EState value) {
    return WorldMine_EState_Name(value);
  }
  static inline bool EState_Parse(const ::std::string& name,
      EState* value) {
    return WorldMine_EState_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .MsgProto.WorldMine.EState m_etype = 1 [default = E_Free];
  inline bool has_m_etype() const;
  inline void clear_m_etype();
  static const int kMEtypeFieldNumber = 1;
  inline ::MsgProto::WorldMine_EState m_etype() const;
  inline void set_m_etype(::MsgProto::WorldMine_EState value);

  // optional .MsgProto.WorldView m_pos = 2;
  inline bool has_m_pos() const;
  inline void clear_m_pos();
  static const int kMPosFieldNumber = 2;
  inline const ::MsgProto::WorldView& m_pos() const;
  inline ::MsgProto::WorldView* mutable_m_pos();
  inline ::MsgProto::WorldView* release_m_pos();
  inline void set_allocated_m_pos(::MsgProto::WorldView* m_pos);

  // optional uint32 m_uMineID = 3 [default = 0];
  inline bool has_m_umineid() const;
  inline void clear_m_umineid();
  static const int kMUMineIDFieldNumber = 3;
  inline ::google::protobuf::uint32 m_umineid() const;
  inline void set_m_umineid(::google::protobuf::uint32 value);

  // optional uint32 m_uTableID = 4 [default = 0];
  inline bool has_m_utableid() const;
  inline void clear_m_utableid();
  static const int kMUTableIDFieldNumber = 4;
  inline ::google::protobuf::uint32 m_utableid() const;
  inline void set_m_utableid(::google::protobuf::uint32 value);

  // optional uint32 m_hp = 5 [default = 0];
  inline bool has_m_hp() const;
  inline void clear_m_hp();
  static const int kMHpFieldNumber = 5;
  inline ::google::protobuf::uint32 m_hp() const;
  inline void set_m_hp(::google::protobuf::uint32 value);

  // optional .MsgProto.EResOwner m_owner = 6 [default = E_None];
  inline bool has_m_owner() const;
  inline void clear_m_owner();
  static const int kMOwnerFieldNumber = 6;
  inline ::MsgProto::EResOwner m_owner() const;
  inline void set_m_owner(::MsgProto::EResOwner value);

  // @@protoc_insertion_point(class_scope:MsgProto.WorldMine)
 private:
  inline void set_has_m_etype();
  inline void clear_has_m_etype();
  inline void set_has_m_pos();
  inline void clear_has_m_pos();
  inline void set_has_m_umineid();
  inline void clear_has_m_umineid();
  inline void set_has_m_utableid();
  inline void clear_has_m_utableid();
  inline void set_has_m_hp();
  inline void clear_has_m_hp();
  inline void set_has_m_owner();
  inline void clear_has_m_owner();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::MsgProto::WorldView* m_pos_;
  int m_etype_;
  ::google::protobuf::uint32 m_umineid_;
  ::google::protobuf::uint32 m_utableid_;
  ::google::protobuf::uint32 m_hp_;
  int m_owner_;
  friend void  protobuf_AddDesc_MsgStruct_2eproto();
  friend void protobuf_AssignDesc_MsgStruct_2eproto();
  friend void protobuf_ShutdownFile_MsgStruct_2eproto();

  void InitAsDefaultInstance();
  static WorldMine* default_instance_;
};
// -------------------------------------------------------------------

class WorldNpc : public ::google::protobuf::Message {
 public:
  WorldNpc();
  virtual ~WorldNpc();

  WorldNpc(const WorldNpc& from);

  inline WorldNpc& operator=(const WorldNpc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldNpc& default_instance();

  void Swap(WorldNpc* other);

  // implements Message ----------------------------------------------

  WorldNpc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldNpc& from);
  void MergeFrom(const WorldNpc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgProto.WorldView m_pos = 1;
  inline bool has_m_pos() const;
  inline void clear_m_pos();
  static const int kMPosFieldNumber = 1;
  inline const ::MsgProto::WorldView& m_pos() const;
  inline ::MsgProto::WorldView* mutable_m_pos();
  inline ::MsgProto::WorldView* release_m_pos();
  inline void set_allocated_m_pos(::MsgProto::WorldView* m_pos);

  // optional uint32 m_uNpcID = 2 [default = 0];
  inline bool has_m_unpcid() const;
  inline void clear_m_unpcid();
  static const int kMUNpcIDFieldNumber = 2;
  inline ::google::protobuf::uint32 m_unpcid() const;
  inline void set_m_unpcid(::google::protobuf::uint32 value);

  // optional uint32 m_uTableID = 3 [default = 0];
  inline bool has_m_utableid() const;
  inline void clear_m_utableid();
  static const int kMUTableIDFieldNumber = 3;
  inline ::google::protobuf::uint32 m_utableid() const;
  inline void set_m_utableid(::google::protobuf::uint32 value);

  // optional .MsgProto.EResOwner m_owner = 4 [default = E_None];
  inline bool has_m_owner() const;
  inline void clear_m_owner();
  static const int kMOwnerFieldNumber = 4;
  inline ::MsgProto::EResOwner m_owner() const;
  inline void set_m_owner(::MsgProto::EResOwner value);

  // @@protoc_insertion_point(class_scope:MsgProto.WorldNpc)
 private:
  inline void set_has_m_pos();
  inline void clear_has_m_pos();
  inline void set_has_m_unpcid();
  inline void clear_has_m_unpcid();
  inline void set_has_m_utableid();
  inline void clear_has_m_utableid();
  inline void set_has_m_owner();
  inline void clear_has_m_owner();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::MsgProto::WorldView* m_pos_;
  ::google::protobuf::uint32 m_unpcid_;
  ::google::protobuf::uint32 m_utableid_;
  int m_owner_;
  friend void  protobuf_AddDesc_MsgStruct_2eproto();
  friend void protobuf_AssignDesc_MsgStruct_2eproto();
  friend void protobuf_ShutdownFile_MsgStruct_2eproto();

  void InitAsDefaultInstance();
  static WorldNpc* default_instance_;
};
// -------------------------------------------------------------------

class WorldCity : public ::google::protobuf::Message {
 public:
  WorldCity();
  virtual ~WorldCity();

  WorldCity(const WorldCity& from);

  inline WorldCity& operator=(const WorldCity& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldCity& default_instance();

  void Swap(WorldCity* other);

  // implements Message ----------------------------------------------

  WorldCity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldCity& from);
  void MergeFrom(const WorldCity& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgProto.WorldView m_pos = 1;
  inline bool has_m_pos() const;
  inline void clear_m_pos();
  static const int kMPosFieldNumber = 1;
  inline const ::MsgProto::WorldView& m_pos() const;
  inline ::MsgProto::WorldView* mutable_m_pos();
  inline ::MsgProto::WorldView* release_m_pos();
  inline void set_allocated_m_pos(::MsgProto::WorldView* m_pos);

  // optional uint32 m_uCityID = 2 [default = 0];
  inline bool has_m_ucityid() const;
  inline void clear_m_ucityid();
  static const int kMUCityIDFieldNumber = 2;
  inline ::google::protobuf::uint32 m_ucityid() const;
  inline void set_m_ucityid(::google::protobuf::uint32 value);

  // optional uint32 m_uTableID = 3 [default = 0];
  inline bool has_m_utableid() const;
  inline void clear_m_utableid();
  static const int kMUTableIDFieldNumber = 3;
  inline ::google::protobuf::uint32 m_utableid() const;
  inline void set_m_utableid(::google::protobuf::uint32 value);

  // optional uint32 m_uRoleID = 4 [default = 0];
  inline bool has_m_uroleid() const;
  inline void clear_m_uroleid();
  static const int kMURoleIDFieldNumber = 4;
  inline ::google::protobuf::uint32 m_uroleid() const;
  inline void set_m_uroleid(::google::protobuf::uint32 value);

  // optional bytes m_strName = 5;
  inline bool has_m_strname() const;
  inline void clear_m_strname();
  static const int kMStrNameFieldNumber = 5;
  inline const ::std::string& m_strname() const;
  inline void set_m_strname(const ::std::string& value);
  inline void set_m_strname(const char* value);
  inline void set_m_strname(const void* value, size_t size);
  inline ::std::string* mutable_m_strname();
  inline ::std::string* release_m_strname();
  inline void set_allocated_m_strname(::std::string* m_strname);

  // optional uint32 m_sLevel = 6 [default = 0];
  inline bool has_m_slevel() const;
  inline void clear_m_slevel();
  static const int kMSLevelFieldNumber = 6;
  inline ::google::protobuf::uint32 m_slevel() const;
  inline void set_m_slevel(::google::protobuf::uint32 value);

  // optional .MsgProto.EResOwner m_owner = 7 [default = E_None];
  inline bool has_m_owner() const;
  inline void clear_m_owner();
  static const int kMOwnerFieldNumber = 7;
  inline ::MsgProto::EResOwner m_owner() const;
  inline void set_m_owner(::MsgProto::EResOwner value);

  // @@protoc_insertion_point(class_scope:MsgProto.WorldCity)
 private:
  inline void set_has_m_pos();
  inline void clear_has_m_pos();
  inline void set_has_m_ucityid();
  inline void clear_has_m_ucityid();
  inline void set_has_m_utableid();
  inline void clear_has_m_utableid();
  inline void set_has_m_uroleid();
  inline void clear_has_m_uroleid();
  inline void set_has_m_strname();
  inline void clear_has_m_strname();
  inline void set_has_m_slevel();
  inline void clear_has_m_slevel();
  inline void set_has_m_owner();
  inline void clear_has_m_owner();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::MsgProto::WorldView* m_pos_;
  ::google::protobuf::uint32 m_ucityid_;
  ::google::protobuf::uint32 m_utableid_;
  ::std::string* m_strname_;
  ::google::protobuf::uint32 m_uroleid_;
  ::google::protobuf::uint32 m_slevel_;
  int m_owner_;
  friend void  protobuf_AddDesc_MsgStruct_2eproto();
  friend void protobuf_AssignDesc_MsgStruct_2eproto();
  friend void protobuf_ShutdownFile_MsgStruct_2eproto();

  void InitAsDefaultInstance();
  static WorldCity* default_instance_;
};
// -------------------------------------------------------------------

class WorldTower : public ::google::protobuf::Message {
 public:
  WorldTower();
  virtual ~WorldTower();

  WorldTower(const WorldTower& from);

  inline WorldTower& operator=(const WorldTower& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldTower& default_instance();

  void Swap(WorldTower* other);

  // implements Message ----------------------------------------------

  WorldTower* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldTower& from);
  void MergeFrom(const WorldTower& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgProto.WorldView m_pos = 1;
  inline bool has_m_pos() const;
  inline void clear_m_pos();
  static const int kMPosFieldNumber = 1;
  inline const ::MsgProto::WorldView& m_pos() const;
  inline ::MsgProto::WorldView* mutable_m_pos();
  inline ::MsgProto::WorldView* release_m_pos();
  inline void set_allocated_m_pos(::MsgProto::WorldView* m_pos);

  // optional uint32 m_gid = 2 [default = 0];
  inline bool has_m_gid() const;
  inline void clear_m_gid();
  static const int kMGidFieldNumber = 2;
  inline ::google::protobuf::uint32 m_gid() const;
  inline void set_m_gid(::google::protobuf::uint32 value);

  // optional uint32 m_tid = 3 [default = 0];
  inline bool has_m_tid() const;
  inline void clear_m_tid();
  static const int kMTidFieldNumber = 3;
  inline ::google::protobuf::uint32 m_tid() const;
  inline void set_m_tid(::google::protobuf::uint32 value);

  // repeated uint32 m_army_ids = 4;
  inline int m_army_ids_size() const;
  inline void clear_m_army_ids();
  static const int kMArmyIdsFieldNumber = 4;
  inline ::google::protobuf::uint32 m_army_ids(int index) const;
  inline void set_m_army_ids(int index, ::google::protobuf::uint32 value);
  inline void add_m_army_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      m_army_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_m_army_ids();

  // optional .MsgProto.EResOwner m_owner = 7 [default = E_None];
  inline bool has_m_owner() const;
  inline void clear_m_owner();
  static const int kMOwnerFieldNumber = 7;
  inline ::MsgProto::EResOwner m_owner() const;
  inline void set_m_owner(::MsgProto::EResOwner value);

  // @@protoc_insertion_point(class_scope:MsgProto.WorldTower)
 private:
  inline void set_has_m_pos();
  inline void clear_has_m_pos();
  inline void set_has_m_gid();
  inline void clear_has_m_gid();
  inline void set_has_m_tid();
  inline void clear_has_m_tid();
  inline void set_has_m_owner();
  inline void clear_has_m_owner();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::MsgProto::WorldView* m_pos_;
  ::google::protobuf::uint32 m_gid_;
  ::google::protobuf::uint32 m_tid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > m_army_ids_;
  int m_owner_;
  friend void  protobuf_AddDesc_MsgStruct_2eproto();
  friend void protobuf_AssignDesc_MsgStruct_2eproto();
  friend void protobuf_ShutdownFile_MsgStruct_2eproto();

  void InitAsDefaultInstance();
  static WorldTower* default_instance_;
};
// -------------------------------------------------------------------

class WorldBoss : public ::google::protobuf::Message {
 public:
  WorldBoss();
  virtual ~WorldBoss();

  WorldBoss(const WorldBoss& from);

  inline WorldBoss& operator=(const WorldBoss& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldBoss& default_instance();

  void Swap(WorldBoss* other);

  // implements Message ----------------------------------------------

  WorldBoss* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldBoss& from);
  void MergeFrom(const WorldBoss& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgProto.WorldView m_pos = 1;
  inline bool has_m_pos() const;
  inline void clear_m_pos();
  static const int kMPosFieldNumber = 1;
  inline const ::MsgProto::WorldView& m_pos() const;
  inline ::MsgProto::WorldView* mutable_m_pos();
  inline ::MsgProto::WorldView* release_m_pos();
  inline void set_allocated_m_pos(::MsgProto::WorldView* m_pos);

  // optional uint32 m_gid = 2 [default = 0];
  inline bool has_m_gid() const;
  inline void clear_m_gid();
  static const int kMGidFieldNumber = 2;
  inline ::google::protobuf::uint32 m_gid() const;
  inline void set_m_gid(::google::protobuf::uint32 value);

  // optional uint32 m_tid = 3 [default = 0];
  inline bool has_m_tid() const;
  inline void clear_m_tid();
  static const int kMTidFieldNumber = 3;
  inline ::google::protobuf::uint32 m_tid() const;
  inline void set_m_tid(::google::protobuf::uint32 value);

  // optional uint32 m_hp = 4 [default = 0];
  inline bool has_m_hp() const;
  inline void clear_m_hp();
  static const int kMHpFieldNumber = 4;
  inline ::google::protobuf::uint32 m_hp() const;
  inline void set_m_hp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MsgProto.WorldBoss)
 private:
  inline void set_has_m_pos();
  inline void clear_has_m_pos();
  inline void set_has_m_gid();
  inline void clear_has_m_gid();
  inline void set_has_m_tid();
  inline void clear_has_m_tid();
  inline void set_has_m_hp();
  inline void clear_has_m_hp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::MsgProto::WorldView* m_pos_;
  ::google::protobuf::uint32 m_gid_;
  ::google::protobuf::uint32 m_tid_;
  ::google::protobuf::uint32 m_hp_;
  friend void  protobuf_AddDesc_MsgStruct_2eproto();
  friend void protobuf_AssignDesc_MsgStruct_2eproto();
  friend void protobuf_ShutdownFile_MsgStruct_2eproto();

  void InitAsDefaultInstance();
  static WorldBoss* default_instance_;
};
// -------------------------------------------------------------------

class RoleSoldier : public ::google::protobuf::Message {
 public:
  RoleSoldier();
  virtual ~RoleSoldier();

  RoleSoldier(const RoleSoldier& from);

  inline RoleSoldier& operator=(const RoleSoldier& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleSoldier& default_instance();

  void Swap(RoleSoldier* other);

  // implements Message ----------------------------------------------

  RoleSoldier* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleSoldier& from);
  void MergeFrom(const RoleSoldier& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 m_uSoldierID = 1 [default = 0];
  inline bool has_m_usoldierid() const;
  inline void clear_m_usoldierid();
  static const int kMUSoldierIDFieldNumber = 1;
  inline ::google::protobuf::uint32 m_usoldierid() const;
  inline void set_m_usoldierid(::google::protobuf::uint32 value);

  // optional uint32 m_uSoldierNum = 2 [default = 0];
  inline bool has_m_usoldiernum() const;
  inline void clear_m_usoldiernum();
  static const int kMUSoldierNumFieldNumber = 2;
  inline ::google::protobuf::uint32 m_usoldiernum() const;
  inline void set_m_usoldiernum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MsgProto.RoleSoldier)
 private:
  inline void set_has_m_usoldierid();
  inline void clear_has_m_usoldierid();
  inline void set_has_m_usoldiernum();
  inline void clear_has_m_usoldiernum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 m_usoldierid_;
  ::google::protobuf::uint32 m_usoldiernum_;
  friend void  protobuf_AddDesc_MsgStruct_2eproto();
  friend void protobuf_AssignDesc_MsgStruct_2eproto();
  friend void protobuf_ShutdownFile_MsgStruct_2eproto();

  void InitAsDefaultInstance();
  static RoleSoldier* default_instance_;
};
// -------------------------------------------------------------------

class RoleArmy : public ::google::protobuf::Message {
 public:
  RoleArmy();
  virtual ~RoleArmy();

  RoleArmy(const RoleArmy& from);

  inline RoleArmy& operator=(const RoleArmy& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleArmy& default_instance();

  void Swap(RoleArmy* other);

  // implements Message ----------------------------------------------

  RoleArmy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleArmy& from);
  void MergeFrom(const RoleArmy& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgProto.WorldArmy m_move = 1;
  inline bool has_m_move() const;
  inline void clear_m_move();
  static const int kMMoveFieldNumber = 1;
  inline const ::MsgProto::WorldArmy& m_move() const;
  inline ::MsgProto::WorldArmy* mutable_m_move();
  inline ::MsgProto::WorldArmy* release_m_move();
  inline void set_allocated_m_move(::MsgProto::WorldArmy* m_move);

  // repeated .MsgProto.RoleSoldier m_soldier = 2;
  inline int m_soldier_size() const;
  inline void clear_m_soldier();
  static const int kMSoldierFieldNumber = 2;
  inline const ::MsgProto::RoleSoldier& m_soldier(int index) const;
  inline ::MsgProto::RoleSoldier* mutable_m_soldier(int index);
  inline ::MsgProto::RoleSoldier* add_m_soldier();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgProto::RoleSoldier >&
      m_soldier() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgProto::RoleSoldier >*
      mutable_m_soldier();

  // optional uint32 m_load_base = 3;
  inline bool has_m_load_base() const;
  inline void clear_m_load_base();
  static const int kMLoadBaseFieldNumber = 3;
  inline ::google::protobuf::uint32 m_load_base() const;
  inline void set_m_load_base(::google::protobuf::uint32 value);

  // optional uint32 m_res_id = 4;
  inline bool has_m_res_id() const;
  inline void clear_m_res_id();
  static const int kMResIdFieldNumber = 4;
  inline ::google::protobuf::uint32 m_res_id() const;
  inline void set_m_res_id(::google::protobuf::uint32 value);

  // optional uint32 m_res_num = 5;
  inline bool has_m_res_num() const;
  inline void clear_m_res_num();
  static const int kMResNumFieldNumber = 5;
  inline ::google::protobuf::uint32 m_res_num() const;
  inline void set_m_res_num(::google::protobuf::uint32 value);

  // optional uint32 m_res_speed = 6;
  inline bool has_m_res_speed() const;
  inline void clear_m_res_speed();
  static const int kMResSpeedFieldNumber = 6;
  inline ::google::protobuf::uint32 m_res_speed() const;
  inline void set_m_res_speed(::google::protobuf::uint32 value);

  // optional float m_move_length = 7;
  inline bool has_m_move_length() const;
  inline void clear_m_move_length();
  static const int kMMoveLengthFieldNumber = 7;
  inline float m_move_length() const;
  inline void set_m_move_length(float value);

  // optional uint32 m_build_resid = 8 [default = 0];
  inline bool has_m_build_resid() const;
  inline void clear_m_build_resid();
  static const int kMBuildResidFieldNumber = 8;
  inline ::google::protobuf::uint32 m_build_resid() const;
  inline void set_m_build_resid(::google::protobuf::uint32 value);

  // optional .MsgProto.InvestigationReport m_invest = 9;
  inline bool has_m_invest() const;
  inline void clear_m_invest();
  static const int kMInvestFieldNumber = 9;
  inline const ::MsgProto::InvestigationReport& m_invest() const;
  inline ::MsgProto::InvestigationReport* mutable_m_invest();
  inline ::MsgProto::InvestigationReport* release_m_invest();
  inline void set_allocated_m_invest(::MsgProto::InvestigationReport* m_invest);

  // @@protoc_insertion_point(class_scope:MsgProto.RoleArmy)
 private:
  inline void set_has_m_move();
  inline void clear_has_m_move();
  inline void set_has_m_load_base();
  inline void clear_has_m_load_base();
  inline void set_has_m_res_id();
  inline void clear_has_m_res_id();
  inline void set_has_m_res_num();
  inline void clear_has_m_res_num();
  inline void set_has_m_res_speed();
  inline void clear_has_m_res_speed();
  inline void set_has_m_move_length();
  inline void clear_has_m_move_length();
  inline void set_has_m_build_resid();
  inline void clear_has_m_build_resid();
  inline void set_has_m_invest();
  inline void clear_has_m_invest();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::MsgProto::WorldArmy* m_move_;
  ::google::protobuf::RepeatedPtrField< ::MsgProto::RoleSoldier > m_soldier_;
  ::google::protobuf::uint32 m_load_base_;
  ::google::protobuf::uint32 m_res_id_;
  ::google::protobuf::uint32 m_res_num_;
  ::google::protobuf::uint32 m_res_speed_;
  float m_move_length_;
  ::google::protobuf::uint32 m_build_resid_;
  ::MsgProto::InvestigationReport* m_invest_;
  friend void  protobuf_AddDesc_MsgStruct_2eproto();
  friend void protobuf_AssignDesc_MsgStruct_2eproto();
  friend void protobuf_ShutdownFile_MsgStruct_2eproto();

  void InitAsDefaultInstance();
  static RoleArmy* default_instance_;
};
// -------------------------------------------------------------------

class RoleBuild : public ::google::protobuf::Message {
 public:
  RoleBuild();
  virtual ~RoleBuild();

  RoleBuild(const RoleBuild& from);

  inline RoleBuild& operator=(const RoleBuild& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleBuild& default_instance();

  void Swap(RoleBuild* other);

  // implements Message ----------------------------------------------

  RoleBuild* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleBuild& from);
  void MergeFrom(const RoleBuild& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 m_buildid = 1 [default = 0];
  inline bool has_m_buildid() const;
  inline void clear_m_buildid();
  static const int kMBuildidFieldNumber = 1;
  inline ::google::protobuf::uint32 m_buildid() const;
  inline void set_m_buildid(::google::protobuf::uint32 value);

  // optional .MsgProto.TimeInfo m_finishtime = 2;
  inline bool has_m_finishtime() const;
  inline void clear_m_finishtime();
  static const int kMFinishtimeFieldNumber = 2;
  inline const ::MsgProto::TimeInfo& m_finishtime() const;
  inline ::MsgProto::TimeInfo* mutable_m_finishtime();
  inline ::MsgProto::TimeInfo* release_m_finishtime();
  inline void set_allocated_m_finishtime(::MsgProto::TimeInfo* m_finishtime);

  // optional .MsgProto.TimeInfo m_buildtime = 3;
  inline bool has_m_buildtime() const;
  inline void clear_m_buildtime();
  static const int kMBuildtimeFieldNumber = 3;
  inline const ::MsgProto::TimeInfo& m_buildtime() const;
  inline ::MsgProto::TimeInfo* mutable_m_buildtime();
  inline ::MsgProto::TimeInfo* release_m_buildtime();
  inline void set_allocated_m_buildtime(::MsgProto::TimeInfo* m_buildtime);

  // optional uint32 m_builditem = 5 [default = 0];
  inline bool has_m_builditem() const;
  inline void clear_m_builditem();
  static const int kMBuilditemFieldNumber = 5;
  inline ::google::protobuf::uint32 m_builditem() const;
  inline void set_m_builditem(::google::protobuf::uint32 value);

  // optional uint32 m_builditemnum = 6 [default = 0];
  inline bool has_m_builditemnum() const;
  inline void clear_m_builditemnum();
  static const int kMBuilditemnumFieldNumber = 6;
  inline ::google::protobuf::uint32 m_builditemnum() const;
  inline void set_m_builditemnum(::google::protobuf::uint32 value);

  // optional uint32 m_hp = 7 [default = 0];
  inline bool has_m_hp() const;
  inline void clear_m_hp();
  static const int kMHpFieldNumber = 7;
  inline ::google::protobuf::uint32 m_hp() const;
  inline void set_m_hp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MsgProto.RoleBuild)
 private:
  inline void set_has_m_buildid();
  inline void clear_has_m_buildid();
  inline void set_has_m_finishtime();
  inline void clear_has_m_finishtime();
  inline void set_has_m_buildtime();
  inline void clear_has_m_buildtime();
  inline void set_has_m_builditem();
  inline void clear_has_m_builditem();
  inline void set_has_m_builditemnum();
  inline void clear_has_m_builditemnum();
  inline void set_has_m_hp();
  inline void clear_has_m_hp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::MsgProto::TimeInfo* m_finishtime_;
  ::google::protobuf::uint32 m_buildid_;
  ::google::protobuf::uint32 m_builditem_;
  ::MsgProto::TimeInfo* m_buildtime_;
  ::google::protobuf::uint32 m_builditemnum_;
  ::google::protobuf::uint32 m_hp_;
  friend void  protobuf_AddDesc_MsgStruct_2eproto();
  friend void protobuf_AssignDesc_MsgStruct_2eproto();
  friend void protobuf_ShutdownFile_MsgStruct_2eproto();

  void InitAsDefaultInstance();
  static RoleBuild* default_instance_;
};
// -------------------------------------------------------------------

class RoleCity : public ::google::protobuf::Message {
 public:
  RoleCity();
  virtual ~RoleCity();

  RoleCity(const RoleCity& from);

  inline RoleCity& operator=(const RoleCity& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleCity& default_instance();

  void Swap(RoleCity* other);

  // implements Message ----------------------------------------------

  RoleCity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleCity& from);
  void MergeFrom(const RoleCity& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 m_uCityID = 1 [default = 0];
  inline bool has_m_ucityid() const;
  inline void clear_m_ucityid();
  static const int kMUCityIDFieldNumber = 1;
  inline ::google::protobuf::uint32 m_ucityid() const;
  inline void set_m_ucityid(::google::protobuf::uint32 value);

  // optional uint32 m_uRoleID = 2 [default = 0];
  inline bool has_m_uroleid() const;
  inline void clear_m_uroleid();
  static const int kMURoleIDFieldNumber = 2;
  inline ::google::protobuf::uint32 m_uroleid() const;
  inline void set_m_uroleid(::google::protobuf::uint32 value);

  // optional uint32 m_uTableID = 3 [default = 0];
  inline bool has_m_utableid() const;
  inline void clear_m_utableid();
  static const int kMUTableIDFieldNumber = 3;
  inline ::google::protobuf::uint32 m_utableid() const;
  inline void set_m_utableid(::google::protobuf::uint32 value);

  // optional bytes m_strName = 4;
  inline bool has_m_strname() const;
  inline void clear_m_strname();
  static const int kMStrNameFieldNumber = 4;
  inline const ::std::string& m_strname() const;
  inline void set_m_strname(const ::std::string& value);
  inline void set_m_strname(const char* value);
  inline void set_m_strname(const void* value, size_t size);
  inline ::std::string* mutable_m_strname();
  inline ::std::string* release_m_strname();
  inline void set_allocated_m_strname(::std::string* m_strname);

  // optional .MsgProto.WorldView m_pos = 5;
  inline bool has_m_pos() const;
  inline void clear_m_pos();
  static const int kMPosFieldNumber = 5;
  inline const ::MsgProto::WorldView& m_pos() const;
  inline ::MsgProto::WorldView* mutable_m_pos();
  inline ::MsgProto::WorldView* release_m_pos();
  inline void set_allocated_m_pos(::MsgProto::WorldView* m_pos);

  // optional uint32 m_food = 6 [default = 0];
  inline bool has_m_food() const;
  inline void clear_m_food();
  static const int kMFoodFieldNumber = 6;
  inline ::google::protobuf::uint32 m_food() const;
  inline void set_m_food(::google::protobuf::uint32 value);

  // optional uint32 m_iron = 7 [default = 0];
  inline bool has_m_iron() const;
  inline void clear_m_iron();
  static const int kMIronFieldNumber = 7;
  inline ::google::protobuf::uint32 m_iron() const;
  inline void set_m_iron(::google::protobuf::uint32 value);

  // optional uint32 m_crystal = 8 [default = 0];
  inline bool has_m_crystal() const;
  inline void clear_m_crystal();
  static const int kMCrystalFieldNumber = 8;
  inline ::google::protobuf::uint32 m_crystal() const;
  inline void set_m_crystal(::google::protobuf::uint32 value);

  // repeated .MsgProto.RoleArmy m_armys = 9;
  inline int m_armys_size() const;
  inline void clear_m_armys();
  static const int kMArmysFieldNumber = 9;
  inline const ::MsgProto::RoleArmy& m_armys(int index) const;
  inline ::MsgProto::RoleArmy* mutable_m_armys(int index);
  inline ::MsgProto::RoleArmy* add_m_armys();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgProto::RoleArmy >&
      m_armys() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgProto::RoleArmy >*
      mutable_m_armys();

  // repeated .MsgProto.RoleSoldier m_soldier = 10;
  inline int m_soldier_size() const;
  inline void clear_m_soldier();
  static const int kMSoldierFieldNumber = 10;
  inline const ::MsgProto::RoleSoldier& m_soldier(int index) const;
  inline ::MsgProto::RoleSoldier* mutable_m_soldier(int index);
  inline ::MsgProto::RoleSoldier* add_m_soldier();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgProto::RoleSoldier >&
      m_soldier() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgProto::RoleSoldier >*
      mutable_m_soldier();

  // repeated .MsgProto.RoleBuild m_build = 11;
  inline int m_build_size() const;
  inline void clear_m_build();
  static const int kMBuildFieldNumber = 11;
  inline const ::MsgProto::RoleBuild& m_build(int index) const;
  inline ::MsgProto::RoleBuild* mutable_m_build(int index);
  inline ::MsgProto::RoleBuild* add_m_build();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgProto::RoleBuild >&
      m_build() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgProto::RoleBuild >*
      mutable_m_build();

  // @@protoc_insertion_point(class_scope:MsgProto.RoleCity)
 private:
  inline void set_has_m_ucityid();
  inline void clear_has_m_ucityid();
  inline void set_has_m_uroleid();
  inline void clear_has_m_uroleid();
  inline void set_has_m_utableid();
  inline void clear_has_m_utableid();
  inline void set_has_m_strname();
  inline void clear_has_m_strname();
  inline void set_has_m_pos();
  inline void clear_has_m_pos();
  inline void set_has_m_food();
  inline void clear_has_m_food();
  inline void set_has_m_iron();
  inline void clear_has_m_iron();
  inline void set_has_m_crystal();
  inline void clear_has_m_crystal();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 m_ucityid_;
  ::google::protobuf::uint32 m_uroleid_;
  ::std::string* m_strname_;
  ::google::protobuf::uint32 m_utableid_;
  ::google::protobuf::uint32 m_food_;
  ::MsgProto::WorldView* m_pos_;
  ::google::protobuf::uint32 m_iron_;
  ::google::protobuf::uint32 m_crystal_;
  ::google::protobuf::RepeatedPtrField< ::MsgProto::RoleArmy > m_armys_;
  ::google::protobuf::RepeatedPtrField< ::MsgProto::RoleSoldier > m_soldier_;
  ::google::protobuf::RepeatedPtrField< ::MsgProto::RoleBuild > m_build_;
  friend void  protobuf_AddDesc_MsgStruct_2eproto();
  friend void protobuf_AssignDesc_MsgStruct_2eproto();
  friend void protobuf_ShutdownFile_MsgStruct_2eproto();

  void InitAsDefaultInstance();
  static RoleCity* default_instance_;
};
// -------------------------------------------------------------------

class RoleCityVector : public ::google::protobuf::Message {
 public:
  RoleCityVector();
  virtual ~RoleCityVector();

  RoleCityVector(const RoleCityVector& from);

  inline RoleCityVector& operator=(const RoleCityVector& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleCityVector& default_instance();

  void Swap(RoleCityVector* other);

  // implements Message ----------------------------------------------

  RoleCityVector* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleCityVector& from);
  void MergeFrom(const RoleCityVector& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .MsgProto.RoleCity m_citys = 1;
  inline int m_citys_size() const;
  inline void clear_m_citys();
  static const int kMCitysFieldNumber = 1;
  inline const ::MsgProto::RoleCity& m_citys(int index) const;
  inline ::MsgProto::RoleCity* mutable_m_citys(int index);
  inline ::MsgProto::RoleCity* add_m_citys();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgProto::RoleCity >&
      m_citys() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgProto::RoleCity >*
      mutable_m_citys();

  // @@protoc_insertion_point(class_scope:MsgProto.RoleCityVector)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::MsgProto::RoleCity > m_citys_;
  friend void  protobuf_AddDesc_MsgStruct_2eproto();
  friend void protobuf_AssignDesc_MsgStruct_2eproto();
  friend void protobuf_ShutdownFile_MsgStruct_2eproto();

  void InitAsDefaultInstance();
  static RoleCityVector* default_instance_;
};
// -------------------------------------------------------------------

class RoleFightTitle : public ::google::protobuf::Message {
 public:
  RoleFightTitle();
  virtual ~RoleFightTitle();

  RoleFightTitle(const RoleFightTitle& from);

  inline RoleFightTitle& operator=(const RoleFightTitle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleFightTitle& default_instance();

  void Swap(RoleFightTitle* other);

  // implements Message ----------------------------------------------

  RoleFightTitle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleFightTitle& from);
  void MergeFrom(const RoleFightTitle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes m_strName = 1;
  inline bool has_m_strname() const;
  inline void clear_m_strname();
  static const int kMStrNameFieldNumber = 1;
  inline const ::std::string& m_strname() const;
  inline void set_m_strname(const ::std::string& value);
  inline void set_m_strname(const char* value);
  inline void set_m_strname(const void* value, size_t size);
  inline ::std::string* mutable_m_strname();
  inline ::std::string* release_m_strname();
  inline void set_allocated_m_strname(::std::string* m_strname);

  // optional uint32 m_level = 2 [default = 0];
  inline bool has_m_level() const;
  inline void clear_m_level();
  static const int kMLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 m_level() const;
  inline void set_m_level(::google::protobuf::uint32 value);

  // optional .MsgProto.WorldPos m_pos = 3;
  inline bool has_m_pos() const;
  inline void clear_m_pos();
  static const int kMPosFieldNumber = 3;
  inline const ::MsgProto::WorldPos& m_pos() const;
  inline ::MsgProto::WorldPos* mutable_m_pos();
  inline ::MsgProto::WorldPos* release_m_pos();
  inline void set_allocated_m_pos(::MsgProto::WorldPos* m_pos);

  // @@protoc_insertion_point(class_scope:MsgProto.RoleFightTitle)
 private:
  inline void set_has_m_strname();
  inline void clear_has_m_strname();
  inline void set_has_m_level();
  inline void clear_has_m_level();
  inline void set_has_m_pos();
  inline void clear_has_m_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* m_strname_;
  ::MsgProto::WorldPos* m_pos_;
  ::google::protobuf::uint32 m_level_;
  friend void  protobuf_AddDesc_MsgStruct_2eproto();
  friend void protobuf_AssignDesc_MsgStruct_2eproto();
  friend void protobuf_ShutdownFile_MsgStruct_2eproto();

  void InitAsDefaultInstance();
  static RoleFightTitle* default_instance_;
};
// -------------------------------------------------------------------

class ResPlunder : public ::google::protobuf::Message {
 public:
  ResPlunder();
  virtual ~ResPlunder();

  ResPlunder(const ResPlunder& from);

  inline ResPlunder& operator=(const ResPlunder& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResPlunder& default_instance();

  void Swap(ResPlunder* other);

  // implements Message ----------------------------------------------

  ResPlunder* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResPlunder& from);
  void MergeFrom(const ResPlunder& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 m_id = 1 [default = 0];
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::uint32 m_id() const;
  inline void set_m_id(::google::protobuf::uint32 value);

  // optional uint32 m_sum = 2 [default = 0];
  inline bool has_m_sum() const;
  inline void clear_m_sum();
  static const int kMSumFieldNumber = 2;
  inline ::google::protobuf::uint32 m_sum() const;
  inline void set_m_sum(::google::protobuf::uint32 value);

  // optional uint32 m_lost = 3 [default = 0];
  inline bool has_m_lost() const;
  inline void clear_m_lost();
  static const int kMLostFieldNumber = 3;
  inline ::google::protobuf::uint32 m_lost() const;
  inline void set_m_lost(::google::protobuf::uint32 value);

  // optional uint32 m_get = 4 [default = 0];
  inline bool has_m_get() const;
  inline void clear_m_get();
  static const int kMGetFieldNumber = 4;
  inline ::google::protobuf::uint32 m_get() const;
  inline void set_m_get(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MsgProto.ResPlunder)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_sum();
  inline void clear_has_m_sum();
  inline void set_has_m_lost();
  inline void clear_has_m_lost();
  inline void set_has_m_get();
  inline void clear_has_m_get();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 m_id_;
  ::google::protobuf::uint32 m_sum_;
  ::google::protobuf::uint32 m_lost_;
  ::google::protobuf::uint32 m_get_;
  friend void  protobuf_AddDesc_MsgStruct_2eproto();
  friend void protobuf_AssignDesc_MsgStruct_2eproto();
  friend void protobuf_ShutdownFile_MsgStruct_2eproto();

  void InitAsDefaultInstance();
  static ResPlunder* default_instance_;
};
// -------------------------------------------------------------------

class SoldierOverView : public ::google::protobuf::Message {
 public:
  SoldierOverView();
  virtual ~SoldierOverView();

  SoldierOverView(const SoldierOverView& from);

  inline SoldierOverView& operator=(const SoldierOverView& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SoldierOverView& default_instance();

  void Swap(SoldierOverView* other);

  // implements Message ----------------------------------------------

  SoldierOverView* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SoldierOverView& from);
  void MergeFrom(const SoldierOverView& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 m_power_sum = 1 [default = 0];
  inline bool has_m_power_sum() const;
  inline void clear_m_power_sum();
  static const int kMPowerSumFieldNumber = 1;
  inline ::google::protobuf::uint32 m_power_sum() const;
  inline void set_m_power_sum(::google::protobuf::uint32 value);

  // optional uint32 m_power_army = 2 [default = 0];
  inline bool has_m_power_army() const;
  inline void clear_m_power_army();
  static const int kMPowerArmyFieldNumber = 2;
  inline ::google::protobuf::uint32 m_power_army() const;
  inline void set_m_power_army(::google::protobuf::uint32 value);

  // optional uint32 m_power_talent = 3 [default = 0];
  inline bool has_m_power_talent() const;
  inline void clear_m_power_talent();
  static const int kMPowerTalentFieldNumber = 3;
  inline ::google::protobuf::uint32 m_power_talent() const;
  inline void set_m_power_talent(::google::protobuf::uint32 value);

  // optional uint32 m_power_equip = 4 [default = 0];
  inline bool has_m_power_equip() const;
  inline void clear_m_power_equip();
  static const int kMPowerEquipFieldNumber = 4;
  inline ::google::protobuf::uint32 m_power_equip() const;
  inline void set_m_power_equip(::google::protobuf::uint32 value);

  // optional uint32 m_power_tech = 5 [default = 0];
  inline bool has_m_power_tech() const;
  inline void clear_m_power_tech();
  static const int kMPowerTechFieldNumber = 5;
  inline ::google::protobuf::uint32 m_power_tech() const;
  inline void set_m_power_tech(::google::protobuf::uint32 value);

  // optional uint32 m_power_tower = 6 [default = 0];
  inline bool has_m_power_tower() const;
  inline void clear_m_power_tower();
  static const int kMPowerTowerFieldNumber = 6;
  inline ::google::protobuf::uint32 m_power_tower() const;
  inline void set_m_power_tower(::google::protobuf::uint32 value);

  // optional uint32 m_power_lose = 7 [default = 0];
  inline bool has_m_power_lose() const;
  inline void clear_m_power_lose();
  static const int kMPowerLoseFieldNumber = 7;
  inline ::google::protobuf::uint32 m_power_lose() const;
  inline void set_m_power_lose(::google::protobuf::uint32 value);

  // optional uint32 m_soldier_sum = 8 [default = 0];
  inline bool has_m_soldier_sum() const;
  inline void clear_m_soldier_sum();
  static const int kMSoldierSumFieldNumber = 8;
  inline ::google::protobuf::uint32 m_soldier_sum() const;
  inline void set_m_soldier_sum(::google::protobuf::uint32 value);

  // optional uint32 m_soldier_kill = 9 [default = 0];
  inline bool has_m_soldier_kill() const;
  inline void clear_m_soldier_kill();
  static const int kMSoldierKillFieldNumber = 9;
  inline ::google::protobuf::uint32 m_soldier_kill() const;
  inline void set_m_soldier_kill(::google::protobuf::uint32 value);

  // repeated .MsgProto.SKeyValuePair m_kills = 10;
  inline int m_kills_size() const;
  inline void clear_m_kills();
  static const int kMKillsFieldNumber = 10;
  inline const ::MsgProto::SKeyValuePair& m_kills(int index) const;
  inline ::MsgProto::SKeyValuePair* mutable_m_kills(int index);
  inline ::MsgProto::SKeyValuePair* add_m_kills();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgProto::SKeyValuePair >&
      m_kills() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgProto::SKeyValuePair >*
      mutable_m_kills();

  // optional uint32 m_soldier_die = 11 [default = 0];
  inline bool has_m_soldier_die() const;
  inline void clear_m_soldier_die();
  static const int kMSoldierDieFieldNumber = 11;
  inline ::google::protobuf::uint32 m_soldier_die() const;
  inline void set_m_soldier_die(::google::protobuf::uint32 value);

  // repeated .MsgProto.SKeyValuePair m_dies = 12;
  inline int m_dies_size() const;
  inline void clear_m_dies();
  static const int kMDiesFieldNumber = 12;
  inline const ::MsgProto::SKeyValuePair& m_dies(int index) const;
  inline ::MsgProto::SKeyValuePair* mutable_m_dies(int index);
  inline ::MsgProto::SKeyValuePair* add_m_dies();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgProto::SKeyValuePair >&
      m_dies() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgProto::SKeyValuePair >*
      mutable_m_dies();

  // optional uint32 m_soldier_hurt = 13 [default = 0];
  inline bool has_m_soldier_hurt() const;
  inline void clear_m_soldier_hurt();
  static const int kMSoldierHurtFieldNumber = 13;
  inline ::google::protobuf::uint32 m_soldier_hurt() const;
  inline void set_m_soldier_hurt(::google::protobuf::uint32 value);

  // repeated .MsgProto.SKeyValuePair m_hurts = 14;
  inline int m_hurts_size() const;
  inline void clear_m_hurts();
  static const int kMHurtsFieldNumber = 14;
  inline const ::MsgProto::SKeyValuePair& m_hurts(int index) const;
  inline ::MsgProto::SKeyValuePair* mutable_m_hurts(int index);
  inline ::MsgProto::SKeyValuePair* add_m_hurts();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgProto::SKeyValuePair >&
      m_hurts() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgProto::SKeyValuePair >*
      mutable_m_hurts();

  // optional uint32 m_soldier_live = 15 [default = 0];
  inline bool has_m_soldier_live() const;
  inline void clear_m_soldier_live();
  static const int kMSoldierLiveFieldNumber = 15;
  inline ::google::protobuf::uint32 m_soldier_live() const;
  inline void set_m_soldier_live(::google::protobuf::uint32 value);

  // repeated .MsgProto.SKeyValuePair m_lives = 16;
  inline int m_lives_size() const;
  inline void clear_m_lives();
  static const int kMLivesFieldNumber = 16;
  inline const ::MsgProto::SKeyValuePair& m_lives(int index) const;
  inline ::MsgProto::SKeyValuePair* mutable_m_lives(int index);
  inline ::MsgProto::SKeyValuePair* add_m_lives();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgProto::SKeyValuePair >&
      m_lives() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgProto::SKeyValuePair >*
      mutable_m_lives();

  // @@protoc_insertion_point(class_scope:MsgProto.SoldierOverView)
 private:
  inline void set_has_m_power_sum();
  inline void clear_has_m_power_sum();
  inline void set_has_m_power_army();
  inline void clear_has_m_power_army();
  inline void set_has_m_power_talent();
  inline void clear_has_m_power_talent();
  inline void set_has_m_power_equip();
  inline void clear_has_m_power_equip();
  inline void set_has_m_power_tech();
  inline void clear_has_m_power_tech();
  inline void set_has_m_power_tower();
  inline void clear_has_m_power_tower();
  inline void set_has_m_power_lose();
  inline void clear_has_m_power_lose();
  inline void set_has_m_soldier_sum();
  inline void clear_has_m_soldier_sum();
  inline void set_has_m_soldier_kill();
  inline void clear_has_m_soldier_kill();
  inline void set_has_m_soldier_die();
  inline void clear_has_m_soldier_die();
  inline void set_has_m_soldier_hurt();
  inline void clear_has_m_soldier_hurt();
  inline void set_has_m_soldier_live();
  inline void clear_has_m_soldier_live();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 m_power_sum_;
  ::google::protobuf::uint32 m_power_army_;
  ::google::protobuf::uint32 m_power_talent_;
  ::google::protobuf::uint32 m_power_equip_;
  ::google::protobuf::uint32 m_power_tech_;
  ::google::protobuf::uint32 m_power_tower_;
  ::google::protobuf::uint32 m_power_lose_;
  ::google::protobuf::uint32 m_soldier_sum_;
  ::google::protobuf::RepeatedPtrField< ::MsgProto::SKeyValuePair > m_kills_;
  ::google::protobuf::uint32 m_soldier_kill_;
  ::google::protobuf::uint32 m_soldier_die_;
  ::google::protobuf::RepeatedPtrField< ::MsgProto::SKeyValuePair > m_dies_;
  ::google::protobuf::RepeatedPtrField< ::MsgProto::SKeyValuePair > m_hurts_;
  ::google::protobuf::uint32 m_soldier_hurt_;
  ::google::protobuf::uint32 m_soldier_live_;
  ::google::protobuf::RepeatedPtrField< ::MsgProto::SKeyValuePair > m_lives_;
  friend void  protobuf_AddDesc_MsgStruct_2eproto();
  friend void protobuf_AssignDesc_MsgStruct_2eproto();
  friend void protobuf_ShutdownFile_MsgStruct_2eproto();

  void InitAsDefaultInstance();
  static SoldierOverView* default_instance_;
};
// -------------------------------------------------------------------

class SoldierDetail : public ::google::protobuf::Message {
 public:
  SoldierDetail();
  virtual ~SoldierDetail();

  SoldierDetail(const SoldierDetail& from);

  inline SoldierDetail& operator=(const SoldierDetail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SoldierDetail& default_instance();

  void Swap(SoldierDetail* other);

  // implements Message ----------------------------------------------

  SoldierDetail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SoldierDetail& from);
  void MergeFrom(const SoldierDetail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 m_soldierid = 1 [default = 0];
  inline bool has_m_soldierid() const;
  inline void clear_m_soldierid();
  static const int kMSoldieridFieldNumber = 1;
  inline ::google::protobuf::uint32 m_soldierid() const;
  inline void set_m_soldierid(::google::protobuf::uint32 value);

  // optional uint32 m_num = 2 [default = 0];
  inline bool has_m_num() const;
  inline void clear_m_num();
  static const int kMNumFieldNumber = 2;
  inline ::google::protobuf::uint32 m_num() const;
  inline void set_m_num(::google::protobuf::uint32 value);

  // optional uint32 m_die = 3 [default = 0];
  inline bool has_m_die() const;
  inline void clear_m_die();
  static const int kMDieFieldNumber = 3;
  inline ::google::protobuf::uint32 m_die() const;
  inline void set_m_die(::google::protobuf::uint32 value);

  // optional uint32 m_hurt = 4 [default = 0];
  inline bool has_m_hurt() const;
  inline void clear_m_hurt();
  static const int kMHurtFieldNumber = 4;
  inline ::google::protobuf::uint32 m_hurt() const;
  inline void set_m_hurt(::google::protobuf::uint32 value);

  // optional uint32 m_live = 5 [default = 0];
  inline bool has_m_live() const;
  inline void clear_m_live();
  static const int kMLiveFieldNumber = 5;
  inline ::google::protobuf::uint32 m_live() const;
  inline void set_m_live(::google::protobuf::uint32 value);

  // optional uint32 m_damage = 6 [default = 0];
  inline bool has_m_damage() const;
  inline void clear_m_damage();
  static const int kMDamageFieldNumber = 6;
  inline ::google::protobuf::uint32 m_damage() const;
  inline void set_m_damage(::google::protobuf::uint32 value);

  // optional uint32 m_attack_com = 7 [default = 0];
  inline bool has_m_attack_com() const;
  inline void clear_m_attack_com();
  static const int kMAttackComFieldNumber = 7;
  inline ::google::protobuf::uint32 m_attack_com() const;
  inline void set_m_attack_com(::google::protobuf::uint32 value);

  // optional uint32 m_attack_skill = 8 [default = 0];
  inline bool has_m_attack_skill() const;
  inline void clear_m_attack_skill();
  static const int kMAttackSkillFieldNumber = 8;
  inline ::google::protobuf::uint32 m_attack_skill() const;
  inline void set_m_attack_skill(::google::protobuf::uint32 value);

  // optional uint32 m_damage_com = 9 [default = 0];
  inline bool has_m_damage_com() const;
  inline void clear_m_damage_com();
  static const int kMDamageComFieldNumber = 9;
  inline ::google::protobuf::uint32 m_damage_com() const;
  inline void set_m_damage_com(::google::protobuf::uint32 value);

  // optional uint32 m_damage_skill = 10 [default = 0];
  inline bool has_m_damage_skill() const;
  inline void clear_m_damage_skill();
  static const int kMDamageSkillFieldNumber = 10;
  inline ::google::protobuf::uint32 m_damage_skill() const;
  inline void set_m_damage_skill(::google::protobuf::uint32 value);

  // repeated .MsgProto.SKeyValuePair m_damages = 11;
  inline int m_damages_size() const;
  inline void clear_m_damages();
  static const int kMDamagesFieldNumber = 11;
  inline const ::MsgProto::SKeyValuePair& m_damages(int index) const;
  inline ::MsgProto::SKeyValuePair* mutable_m_damages(int index);
  inline ::MsgProto::SKeyValuePair* add_m_damages();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgProto::SKeyValuePair >&
      m_damages() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgProto::SKeyValuePair >*
      mutable_m_damages();

  // repeated .MsgProto.SKeyValuePair m_kills = 12;
  inline int m_kills_size() const;
  inline void clear_m_kills();
  static const int kMKillsFieldNumber = 12;
  inline const ::MsgProto::SKeyValuePair& m_kills(int index) const;
  inline ::MsgProto::SKeyValuePair* mutable_m_kills(int index);
  inline ::MsgProto::SKeyValuePair* add_m_kills();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgProto::SKeyValuePair >&
      m_kills() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgProto::SKeyValuePair >*
      mutable_m_kills();

  // @@protoc_insertion_point(class_scope:MsgProto.SoldierDetail)
 private:
  inline void set_has_m_soldierid();
  inline void clear_has_m_soldierid();
  inline void set_has_m_num();
  inline void clear_has_m_num();
  inline void set_has_m_die();
  inline void clear_has_m_die();
  inline void set_has_m_hurt();
  inline void clear_has_m_hurt();
  inline void set_has_m_live();
  inline void clear_has_m_live();
  inline void set_has_m_damage();
  inline void clear_has_m_damage();
  inline void set_has_m_attack_com();
  inline void clear_has_m_attack_com();
  inline void set_has_m_attack_skill();
  inline void clear_has_m_attack_skill();
  inline void set_has_m_damage_com();
  inline void clear_has_m_damage_com();
  inline void set_has_m_damage_skill();
  inline void clear_has_m_damage_skill();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 m_soldierid_;
  ::google::protobuf::uint32 m_num_;
  ::google::protobuf::uint32 m_die_;
  ::google::protobuf::uint32 m_hurt_;
  ::google::protobuf::uint32 m_live_;
  ::google::protobuf::uint32 m_damage_;
  ::google::protobuf::uint32 m_attack_com_;
  ::google::protobuf::uint32 m_attack_skill_;
  ::google::protobuf::uint32 m_damage_com_;
  ::google::protobuf::uint32 m_damage_skill_;
  ::google::protobuf::RepeatedPtrField< ::MsgProto::SKeyValuePair > m_damages_;
  ::google::protobuf::RepeatedPtrField< ::MsgProto::SKeyValuePair > m_kills_;
  friend void  protobuf_AddDesc_MsgStruct_2eproto();
  friend void protobuf_AssignDesc_MsgStruct_2eproto();
  friend void protobuf_ShutdownFile_MsgStruct_2eproto();

  void InitAsDefaultInstance();
  static SoldierDetail* default_instance_;
};
// -------------------------------------------------------------------

class ArmyFightDetail : public ::google::protobuf::Message {
 public:
  ArmyFightDetail();
  virtual ~ArmyFightDetail();

  ArmyFightDetail(const ArmyFightDetail& from);

  inline ArmyFightDetail& operator=(const ArmyFightDetail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ArmyFightDetail& default_instance();

  void Swap(ArmyFightDetail* other);

  // implements Message ----------------------------------------------

  ArmyFightDetail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ArmyFightDetail& from);
  void MergeFrom(const ArmyFightDetail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .MsgProto.SoldierDetail m_soldiers = 1;
  inline int m_soldiers_size() const;
  inline void clear_m_soldiers();
  static const int kMSoldiersFieldNumber = 1;
  inline const ::MsgProto::SoldierDetail& m_soldiers(int index) const;
  inline ::MsgProto::SoldierDetail* mutable_m_soldiers(int index);
  inline ::MsgProto::SoldierDetail* add_m_soldiers();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgProto::SoldierDetail >&
      m_soldiers() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgProto::SoldierDetail >*
      mutable_m_soldiers();

  // @@protoc_insertion_point(class_scope:MsgProto.ArmyFightDetail)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::MsgProto::SoldierDetail > m_soldiers_;
  friend void  protobuf_AddDesc_MsgStruct_2eproto();
  friend void protobuf_AssignDesc_MsgStruct_2eproto();
  friend void protobuf_ShutdownFile_MsgStruct_2eproto();

  void InitAsDefaultInstance();
  static ArmyFightDetail* default_instance_;
};
// -------------------------------------------------------------------

class FightReport : public ::google::protobuf::Message {
 public:
  FightReport();
  virtual ~FightReport();

  FightReport(const FightReport& from);

  inline FightReport& operator=(const FightReport& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FightReport& default_instance();

  void Swap(FightReport* other);

  // implements Message ----------------------------------------------

  FightReport* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FightReport& from);
  void MergeFrom(const FightReport& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef FightReport_EResult EResult;
  static const EResult city_attack_win = FightReport_EResult_city_attack_win;
  static const EResult city_attack_lose = FightReport_EResult_city_attack_lose;
  static const EResult city_def_win = FightReport_EResult_city_def_win;
  static const EResult city_def_lose = FightReport_EResult_city_def_lose;
  static inline bool EResult_IsValid(int value) {
    return FightReport_EResult_IsValid(value);
  }
  static const EResult EResult_MIN =
    FightReport_EResult_EResult_MIN;
  static const EResult EResult_MAX =
    FightReport_EResult_EResult_MAX;
  static const int EResult_ARRAYSIZE =
    FightReport_EResult_EResult_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EResult_descriptor() {
    return FightReport_EResult_descriptor();
  }
  static inline const ::std::string& EResult_Name(EResult value) {
    return FightReport_EResult_Name(value);
  }
  static inline bool EResult_Parse(const ::std::string& name,
      EResult* value) {
    return FightReport_EResult_Parse(name, value);
  }

  typedef FightReport_EFightType EFightType;
  static const EFightType eft_tcity = FightReport_EFightType_eft_tcity;
  static const EFightType eft_wild = FightReport_EFightType_eft_wild;
  static const EFightType eft_boss = FightReport_EFightType_eft_boss;
  static inline bool EFightType_IsValid(int value) {
    return FightReport_EFightType_IsValid(value);
  }
  static const EFightType EFightType_MIN =
    FightReport_EFightType_EFightType_MIN;
  static const EFightType EFightType_MAX =
    FightReport_EFightType_EFightType_MAX;
  static const int EFightType_ARRAYSIZE =
    FightReport_EFightType_EFightType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EFightType_descriptor() {
    return FightReport_EFightType_descriptor();
  }
  static inline const ::std::string& EFightType_Name(EFightType value) {
    return FightReport_EFightType_Name(value);
  }
  static inline bool EFightType_Parse(const ::std::string& name,
      EFightType* value) {
    return FightReport_EFightType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .MsgProto.FightReport.EResult m_result = 1 [default = city_attack_win];
  inline bool has_m_result() const;
  inline void clear_m_result();
  static const int kMResultFieldNumber = 1;
  inline ::MsgProto::FightReport_EResult m_result() const;
  inline void set_m_result(::MsgProto::FightReport_EResult value);

  // optional .MsgProto.FightReport.EFightType m_type = 2 [default = eft_tcity];
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::MsgProto::FightReport_EFightType m_type() const;
  inline void set_m_type(::MsgProto::FightReport_EFightType value);

  // optional .MsgProto.WorldPos m_pos_from = 3;
  inline bool has_m_pos_from() const;
  inline void clear_m_pos_from();
  static const int kMPosFromFieldNumber = 3;
  inline const ::MsgProto::WorldPos& m_pos_from() const;
  inline ::MsgProto::WorldPos* mutable_m_pos_from();
  inline ::MsgProto::WorldPos* release_m_pos_from();
  inline void set_allocated_m_pos_from(::MsgProto::WorldPos* m_pos_from);

  // optional uint32 m_time = 4 [default = 0];
  inline bool has_m_time() const;
  inline void clear_m_time();
  static const int kMTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 m_time() const;
  inline void set_m_time(::google::protobuf::uint32 value);

  // optional uint32 m_round = 5 [default = 0];
  inline bool has_m_round() const;
  inline void clear_m_round();
  static const int kMRoundFieldNumber = 5;
  inline ::google::protobuf::uint32 m_round() const;
  inline void set_m_round(::google::protobuf::uint32 value);

  // optional .MsgProto.RoleFightTitle m_attacker = 6;
  inline bool has_m_attacker() const;
  inline void clear_m_attacker();
  static const int kMAttackerFieldNumber = 6;
  inline const ::MsgProto::RoleFightTitle& m_attacker() const;
  inline ::MsgProto::RoleFightTitle* mutable_m_attacker();
  inline ::MsgProto::RoleFightTitle* release_m_attacker();
  inline void set_allocated_m_attacker(::MsgProto::RoleFightTitle* m_attacker);

  // optional .MsgProto.RoleFightTitle m_defer = 7;
  inline bool has_m_defer() const;
  inline void clear_m_defer();
  static const int kMDeferFieldNumber = 7;
  inline const ::MsgProto::RoleFightTitle& m_defer() const;
  inline ::MsgProto::RoleFightTitle* mutable_m_defer();
  inline ::MsgProto::RoleFightTitle* release_m_defer();
  inline void set_allocated_m_defer(::MsgProto::RoleFightTitle* m_defer);

  // repeated .MsgProto.ResPlunder m_plunder = 8;
  inline int m_plunder_size() const;
  inline void clear_m_plunder();
  static const int kMPlunderFieldNumber = 8;
  inline const ::MsgProto::ResPlunder& m_plunder(int index) const;
  inline ::MsgProto::ResPlunder* mutable_m_plunder(int index);
  inline ::MsgProto::ResPlunder* add_m_plunder();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgProto::ResPlunder >&
      m_plunder() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgProto::ResPlunder >*
      mutable_m_plunder();

  // optional .MsgProto.SoldierOverView m_att_view = 9;
  inline bool has_m_att_view() const;
  inline void clear_m_att_view();
  static const int kMAttViewFieldNumber = 9;
  inline const ::MsgProto::SoldierOverView& m_att_view() const;
  inline ::MsgProto::SoldierOverView* mutable_m_att_view();
  inline ::MsgProto::SoldierOverView* release_m_att_view();
  inline void set_allocated_m_att_view(::MsgProto::SoldierOverView* m_att_view);

  // optional .MsgProto.SoldierOverView m_def_view = 10;
  inline bool has_m_def_view() const;
  inline void clear_m_def_view();
  static const int kMDefViewFieldNumber = 10;
  inline const ::MsgProto::SoldierOverView& m_def_view() const;
  inline ::MsgProto::SoldierOverView* mutable_m_def_view();
  inline ::MsgProto::SoldierOverView* release_m_def_view();
  inline void set_allocated_m_def_view(::MsgProto::SoldierOverView* m_def_view);

  // repeated .MsgProto.ArmyFightDetail m_att_details = 11;
  inline int m_att_details_size() const;
  inline void clear_m_att_details();
  static const int kMAttDetailsFieldNumber = 11;
  inline const ::MsgProto::ArmyFightDetail& m_att_details(int index) const;
  inline ::MsgProto::ArmyFightDetail* mutable_m_att_details(int index);
  inline ::MsgProto::ArmyFightDetail* add_m_att_details();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgProto::ArmyFightDetail >&
      m_att_details() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgProto::ArmyFightDetail >*
      mutable_m_att_details();

  // repeated .MsgProto.ArmyFightDetail m_def_details = 12;
  inline int m_def_details_size() const;
  inline void clear_m_def_details();
  static const int kMDefDetailsFieldNumber = 12;
  inline const ::MsgProto::ArmyFightDetail& m_def_details(int index) const;
  inline ::MsgProto::ArmyFightDetail* mutable_m_def_details(int index);
  inline ::MsgProto::ArmyFightDetail* add_m_def_details();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgProto::ArmyFightDetail >&
      m_def_details() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgProto::ArmyFightDetail >*
      mutable_m_def_details();

  // @@protoc_insertion_point(class_scope:MsgProto.FightReport)
 private:
  inline void set_has_m_result();
  inline void clear_has_m_result();
  inline void set_has_m_type();
  inline void clear_has_m_type();
  inline void set_has_m_pos_from();
  inline void clear_has_m_pos_from();
  inline void set_has_m_time();
  inline void clear_has_m_time();
  inline void set_has_m_round();
  inline void clear_has_m_round();
  inline void set_has_m_attacker();
  inline void clear_has_m_attacker();
  inline void set_has_m_defer();
  inline void clear_has_m_defer();
  inline void set_has_m_att_view();
  inline void clear_has_m_att_view();
  inline void set_has_m_def_view();
  inline void clear_has_m_def_view();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int m_result_;
  int m_type_;
  ::MsgProto::WorldPos* m_pos_from_;
  ::google::protobuf::uint32 m_time_;
  ::google::protobuf::uint32 m_round_;
  ::MsgProto::RoleFightTitle* m_attacker_;
  ::MsgProto::RoleFightTitle* m_defer_;
  ::google::protobuf::RepeatedPtrField< ::MsgProto::ResPlunder > m_plunder_;
  ::MsgProto::SoldierOverView* m_att_view_;
  ::MsgProto::SoldierOverView* m_def_view_;
  ::google::protobuf::RepeatedPtrField< ::MsgProto::ArmyFightDetail > m_att_details_;
  ::google::protobuf::RepeatedPtrField< ::MsgProto::ArmyFightDetail > m_def_details_;
  friend void  protobuf_AddDesc_MsgStruct_2eproto();
  friend void protobuf_AssignDesc_MsgStruct_2eproto();
  friend void protobuf_ShutdownFile_MsgStruct_2eproto();

  void InitAsDefaultInstance();
  static FightReport* default_instance_;
};
// -------------------------------------------------------------------

class ResReport : public ::google::protobuf::Message {
 public:
  ResReport();
  virtual ~ResReport();

  ResReport(const ResReport& from);

  inline ResReport& operator=(const ResReport& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResReport& default_instance();

  void Swap(ResReport* other);

  // implements Message ----------------------------------------------

  ResReport* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResReport& from);
  void MergeFrom(const ResReport& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 m_tableid = 1;
  inline bool has_m_tableid() const;
  inline void clear_m_tableid();
  static const int kMTableidFieldNumber = 1;
  inline ::google::protobuf::uint32 m_tableid() const;
  inline void set_m_tableid(::google::protobuf::uint32 value);

  // optional uint32 m_num = 2;
  inline bool has_m_num() const;
  inline void clear_m_num();
  static const int kMNumFieldNumber = 2;
  inline ::google::protobuf::uint32 m_num() const;
  inline void set_m_num(::google::protobuf::uint32 value);

  // optional .MsgProto.WorldPos m_pos = 3;
  inline bool has_m_pos() const;
  inline void clear_m_pos();
  static const int kMPosFieldNumber = 3;
  inline const ::MsgProto::WorldPos& m_pos() const;
  inline ::MsgProto::WorldPos* mutable_m_pos();
  inline ::MsgProto::WorldPos* release_m_pos();
  inline void set_allocated_m_pos(::MsgProto::WorldPos* m_pos);

  // optional uint64 m_timestamp = 4 [default = 0];
  inline bool has_m_timestamp() const;
  inline void clear_m_timestamp();
  static const int kMTimestampFieldNumber = 4;
  inline ::google::protobuf::uint64 m_timestamp() const;
  inline void set_m_timestamp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:MsgProto.ResReport)
 private:
  inline void set_has_m_tableid();
  inline void clear_has_m_tableid();
  inline void set_has_m_num();
  inline void clear_has_m_num();
  inline void set_has_m_pos();
  inline void clear_has_m_pos();
  inline void set_has_m_timestamp();
  inline void clear_has_m_timestamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 m_tableid_;
  ::google::protobuf::uint32 m_num_;
  ::MsgProto::WorldPos* m_pos_;
  ::google::protobuf::uint64 m_timestamp_;
  friend void  protobuf_AddDesc_MsgStruct_2eproto();
  friend void protobuf_AssignDesc_MsgStruct_2eproto();
  friend void protobuf_ShutdownFile_MsgStruct_2eproto();

  void InitAsDefaultInstance();
  static ResReport* default_instance_;
};
// -------------------------------------------------------------------

class FightReportMini : public ::google::protobuf::Message {
 public:
  FightReportMini();
  virtual ~FightReportMini();

  FightReportMini(const FightReportMini& from);

  inline FightReportMini& operator=(const FightReportMini& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FightReportMini& default_instance();

  void Swap(FightReportMini* other);

  // implements Message ----------------------------------------------

  FightReportMini* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FightReportMini& from);
  void MergeFrom(const FightReportMini& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef FightReportMini_EResult EResult;
  static const EResult fight_ini = FightReportMini_EResult_fight_ini;
  static const EResult fight_win = FightReportMini_EResult_fight_win;
  static const EResult fight_lose = FightReportMini_EResult_fight_lose;
  static inline bool EResult_IsValid(int value) {
    return FightReportMini_EResult_IsValid(value);
  }
  static const EResult EResult_MIN =
    FightReportMini_EResult_EResult_MIN;
  static const EResult EResult_MAX =
    FightReportMini_EResult_EResult_MAX;
  static const int EResult_ARRAYSIZE =
    FightReportMini_EResult_EResult_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EResult_descriptor() {
    return FightReportMini_EResult_descriptor();
  }
  static inline const ::std::string& EResult_Name(EResult value) {
    return FightReportMini_EResult_Name(value);
  }
  static inline bool EResult_Parse(const ::std::string& name,
      EResult* value) {
    return FightReportMini_EResult_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional uint32 m_id = 1 [default = 0];
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::uint32 m_id() const;
  inline void set_m_id(::google::protobuf::uint32 value);

  // optional .MsgProto.FightReportMini.EResult m_type = 2 [default = fight_ini];
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::MsgProto::FightReportMini_EResult m_type() const;
  inline void set_m_type(::MsgProto::FightReportMini_EResult value);

  // optional uint32 m_lose = 3 [default = 0];
  inline bool has_m_lose() const;
  inline void clear_m_lose();
  static const int kMLoseFieldNumber = 3;
  inline ::google::protobuf::uint32 m_lose() const;
  inline void set_m_lose(::google::protobuf::uint32 value);

  // optional uint32 m_kill = 4 [default = 0];
  inline bool has_m_kill() const;
  inline void clear_m_kill();
  static const int kMKillFieldNumber = 4;
  inline ::google::protobuf::uint32 m_kill() const;
  inline void set_m_kill(::google::protobuf::uint32 value);

  // optional uint64 m_timestamp = 5 [default = 0];
  inline bool has_m_timestamp() const;
  inline void clear_m_timestamp();
  static const int kMTimestampFieldNumber = 5;
  inline ::google::protobuf::uint64 m_timestamp() const;
  inline void set_m_timestamp(::google::protobuf::uint64 value);

  // optional uint32 m_res_sum = 6 [default = 0];
  inline bool has_m_res_sum() const;
  inline void clear_m_res_sum();
  static const int kMResSumFieldNumber = 6;
  inline ::google::protobuf::uint32 m_res_sum() const;
  inline void set_m_res_sum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MsgProto.FightReportMini)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_type();
  inline void clear_has_m_type();
  inline void set_has_m_lose();
  inline void clear_has_m_lose();
  inline void set_has_m_kill();
  inline void clear_has_m_kill();
  inline void set_has_m_timestamp();
  inline void clear_has_m_timestamp();
  inline void set_has_m_res_sum();
  inline void clear_has_m_res_sum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 m_id_;
  int m_type_;
  ::google::protobuf::uint32 m_lose_;
  ::google::protobuf::uint32 m_kill_;
  ::google::protobuf::uint64 m_timestamp_;
  ::google::protobuf::uint32 m_res_sum_;
  friend void  protobuf_AddDesc_MsgStruct_2eproto();
  friend void protobuf_AssignDesc_MsgStruct_2eproto();
  friend void protobuf_ShutdownFile_MsgStruct_2eproto();

  void InitAsDefaultInstance();
  static FightReportMini* default_instance_;
};
// -------------------------------------------------------------------

class InvestReportMini : public ::google::protobuf::Message {
 public:
  InvestReportMini();
  virtual ~InvestReportMini();

  InvestReportMini(const InvestReportMini& from);

  inline InvestReportMini& operator=(const InvestReportMini& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InvestReportMini& default_instance();

  void Swap(InvestReportMini* other);

  // implements Message ----------------------------------------------

  InvestReportMini* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InvestReportMini& from);
  void MergeFrom(const InvestReportMini& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool m_is_succed = 1 [default = true];
  inline bool has_m_is_succed() const;
  inline void clear_m_is_succed();
  static const int kMIsSuccedFieldNumber = 1;
  inline bool m_is_succed() const;
  inline void set_m_is_succed(bool value);

  // optional uint32 m_cityid = 2 [default = 0];
  inline bool has_m_cityid() const;
  inline void clear_m_cityid();
  static const int kMCityidFieldNumber = 2;
  inline ::google::protobuf::uint32 m_cityid() const;
  inline void set_m_cityid(::google::protobuf::uint32 value);

  // optional .MsgProto.WorldView m_view = 3;
  inline bool has_m_view() const;
  inline void clear_m_view();
  static const int kMViewFieldNumber = 3;
  inline const ::MsgProto::WorldView& m_view() const;
  inline ::MsgProto::WorldView* mutable_m_view();
  inline ::MsgProto::WorldView* release_m_view();
  inline void set_allocated_m_view(::MsgProto::WorldView* m_view);

  // repeated .MsgProto.ResInvestReport m_res = 4;
  inline int m_res_size() const;
  inline void clear_m_res();
  static const int kMResFieldNumber = 4;
  inline const ::MsgProto::ResInvestReport& m_res(int index) const;
  inline ::MsgProto::ResInvestReport* mutable_m_res(int index);
  inline ::MsgProto::ResInvestReport* add_m_res();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgProto::ResInvestReport >&
      m_res() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgProto::ResInvestReport >*
      mutable_m_res();

  // repeated .MsgProto.ArmyInvestReport m_armys = 5;
  inline int m_armys_size() const;
  inline void clear_m_armys();
  static const int kMArmysFieldNumber = 5;
  inline const ::MsgProto::ArmyInvestReport& m_armys(int index) const;
  inline ::MsgProto::ArmyInvestReport* mutable_m_armys(int index);
  inline ::MsgProto::ArmyInvestReport* add_m_armys();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgProto::ArmyInvestReport >&
      m_armys() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgProto::ArmyInvestReport >*
      mutable_m_armys();

  // optional uint32 m_dv_cur = 6 [default = 0];
  inline bool has_m_dv_cur() const;
  inline void clear_m_dv_cur();
  static const int kMDvCurFieldNumber = 6;
  inline ::google::protobuf::uint32 m_dv_cur() const;
  inline void set_m_dv_cur(::google::protobuf::uint32 value);

  // optional uint32 m_dv_sum = 7 [default = 0];
  inline bool has_m_dv_sum() const;
  inline void clear_m_dv_sum();
  static const int kMDvSumFieldNumber = 7;
  inline ::google::protobuf::uint32 m_dv_sum() const;
  inline void set_m_dv_sum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MsgProto.InvestReportMini)
 private:
  inline void set_has_m_is_succed();
  inline void clear_has_m_is_succed();
  inline void set_has_m_cityid();
  inline void clear_has_m_cityid();
  inline void set_has_m_view();
  inline void clear_has_m_view();
  inline void set_has_m_dv_cur();
  inline void clear_has_m_dv_cur();
  inline void set_has_m_dv_sum();
  inline void clear_has_m_dv_sum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool m_is_succed_;
  ::google::protobuf::uint32 m_cityid_;
  ::MsgProto::WorldView* m_view_;
  ::google::protobuf::RepeatedPtrField< ::MsgProto::ResInvestReport > m_res_;
  ::google::protobuf::RepeatedPtrField< ::MsgProto::ArmyInvestReport > m_armys_;
  ::google::protobuf::uint32 m_dv_cur_;
  ::google::protobuf::uint32 m_dv_sum_;
  friend void  protobuf_AddDesc_MsgStruct_2eproto();
  friend void protobuf_AssignDesc_MsgStruct_2eproto();
  friend void protobuf_ShutdownFile_MsgStruct_2eproto();

  void InitAsDefaultInstance();
  static InvestReportMini* default_instance_;
};
// -------------------------------------------------------------------

class ArmyInvestReport : public ::google::protobuf::Message {
 public:
  ArmyInvestReport();
  virtual ~ArmyInvestReport();

  ArmyInvestReport(const ArmyInvestReport& from);

  inline ArmyInvestReport& operator=(const ArmyInvestReport& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ArmyInvestReport& default_instance();

  void Swap(ArmyInvestReport* other);

  // implements Message ----------------------------------------------

  ArmyInvestReport* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ArmyInvestReport& from);
  void MergeFrom(const ArmyInvestReport& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .MsgProto.RoleSoldier m_soldiers = 1;
  inline int m_soldiers_size() const;
  inline void clear_m_soldiers();
  static const int kMSoldiersFieldNumber = 1;
  inline const ::MsgProto::RoleSoldier& m_soldiers(int index) const;
  inline ::MsgProto::RoleSoldier* mutable_m_soldiers(int index);
  inline ::MsgProto::RoleSoldier* add_m_soldiers();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgProto::RoleSoldier >&
      m_soldiers() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgProto::RoleSoldier >*
      mutable_m_soldiers();

  // @@protoc_insertion_point(class_scope:MsgProto.ArmyInvestReport)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::MsgProto::RoleSoldier > m_soldiers_;
  friend void  protobuf_AddDesc_MsgStruct_2eproto();
  friend void protobuf_AssignDesc_MsgStruct_2eproto();
  friend void protobuf_ShutdownFile_MsgStruct_2eproto();

  void InitAsDefaultInstance();
  static ArmyInvestReport* default_instance_;
};
// -------------------------------------------------------------------

class ResInvestReport : public ::google::protobuf::Message {
 public:
  ResInvestReport();
  virtual ~ResInvestReport();

  ResInvestReport(const ResInvestReport& from);

  inline ResInvestReport& operator=(const ResInvestReport& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResInvestReport& default_instance();

  void Swap(ResInvestReport* other);

  // implements Message ----------------------------------------------

  ResInvestReport* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResInvestReport& from);
  void MergeFrom(const ResInvestReport& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 m_res_type = 1 [default = 0];
  inline bool has_m_res_type() const;
  inline void clear_m_res_type();
  static const int kMResTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 m_res_type() const;
  inline void set_m_res_type(::google::protobuf::uint32 value);

  // optional uint32 m_res_get = 2 [default = 0];
  inline bool has_m_res_get() const;
  inline void clear_m_res_get();
  static const int kMResGetFieldNumber = 2;
  inline ::google::protobuf::uint32 m_res_get() const;
  inline void set_m_res_get(::google::protobuf::uint32 value);

  // optional uint32 m_res_unget = 3 [default = 0];
  inline bool has_m_res_unget() const;
  inline void clear_m_res_unget();
  static const int kMResUngetFieldNumber = 3;
  inline ::google::protobuf::uint32 m_res_unget() const;
  inline void set_m_res_unget(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MsgProto.ResInvestReport)
 private:
  inline void set_has_m_res_type();
  inline void clear_has_m_res_type();
  inline void set_has_m_res_get();
  inline void clear_has_m_res_get();
  inline void set_has_m_res_unget();
  inline void clear_has_m_res_unget();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 m_res_type_;
  ::google::protobuf::uint32 m_res_get_;
  ::google::protobuf::uint32 m_res_unget_;
  friend void  protobuf_AddDesc_MsgStruct_2eproto();
  friend void protobuf_AssignDesc_MsgStruct_2eproto();
  friend void protobuf_ShutdownFile_MsgStruct_2eproto();

  void InitAsDefaultInstance();
  static ResInvestReport* default_instance_;
};
// -------------------------------------------------------------------

class InvestigationReport : public ::google::protobuf::Message {
 public:
  InvestigationReport();
  virtual ~InvestigationReport();

  InvestigationReport(const InvestigationReport& from);

  inline InvestigationReport& operator=(const InvestigationReport& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InvestigationReport& default_instance();

  void Swap(InvestigationReport* other);

  // implements Message ----------------------------------------------

  InvestigationReport* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InvestigationReport& from);
  void MergeFrom(const InvestigationReport& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool m_is_succed = 1 [default = true];
  inline bool has_m_is_succed() const;
  inline void clear_m_is_succed();
  static const int kMIsSuccedFieldNumber = 1;
  inline bool m_is_succed() const;
  inline void set_m_is_succed(bool value);

  // optional uint32 m_cityid = 2 [default = 0];
  inline bool has_m_cityid() const;
  inline void clear_m_cityid();
  static const int kMCityidFieldNumber = 2;
  inline ::google::protobuf::uint32 m_cityid() const;
  inline void set_m_cityid(::google::protobuf::uint32 value);

  // optional .MsgProto.WorldView m_view = 3;
  inline bool has_m_view() const;
  inline void clear_m_view();
  static const int kMViewFieldNumber = 3;
  inline const ::MsgProto::WorldView& m_view() const;
  inline ::MsgProto::WorldView* mutable_m_view();
  inline ::MsgProto::WorldView* release_m_view();
  inline void set_allocated_m_view(::MsgProto::WorldView* m_view);

  // repeated .MsgProto.ResInvestReport m_res = 4;
  inline int m_res_size() const;
  inline void clear_m_res();
  static const int kMResFieldNumber = 4;
  inline const ::MsgProto::ResInvestReport& m_res(int index) const;
  inline ::MsgProto::ResInvestReport* mutable_m_res(int index);
  inline ::MsgProto::ResInvestReport* add_m_res();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgProto::ResInvestReport >&
      m_res() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgProto::ResInvestReport >*
      mutable_m_res();

  // repeated .MsgProto.ArmyInvestReport m_armys = 5;
  inline int m_armys_size() const;
  inline void clear_m_armys();
  static const int kMArmysFieldNumber = 5;
  inline const ::MsgProto::ArmyInvestReport& m_armys(int index) const;
  inline ::MsgProto::ArmyInvestReport* mutable_m_armys(int index);
  inline ::MsgProto::ArmyInvestReport* add_m_armys();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgProto::ArmyInvestReport >&
      m_armys() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgProto::ArmyInvestReport >*
      mutable_m_armys();

  // optional uint32 m_dv_cur = 6 [default = 0];
  inline bool has_m_dv_cur() const;
  inline void clear_m_dv_cur();
  static const int kMDvCurFieldNumber = 6;
  inline ::google::protobuf::uint32 m_dv_cur() const;
  inline void set_m_dv_cur(::google::protobuf::uint32 value);

  // optional uint32 m_dv_sum = 7 [default = 0];
  inline bool has_m_dv_sum() const;
  inline void clear_m_dv_sum();
  static const int kMDvSumFieldNumber = 7;
  inline ::google::protobuf::uint32 m_dv_sum() const;
  inline void set_m_dv_sum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MsgProto.InvestigationReport)
 private:
  inline void set_has_m_is_succed();
  inline void clear_has_m_is_succed();
  inline void set_has_m_cityid();
  inline void clear_has_m_cityid();
  inline void set_has_m_view();
  inline void clear_has_m_view();
  inline void set_has_m_dv_cur();
  inline void clear_has_m_dv_cur();
  inline void set_has_m_dv_sum();
  inline void clear_has_m_dv_sum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool m_is_succed_;
  ::google::protobuf::uint32 m_cityid_;
  ::MsgProto::WorldView* m_view_;
  ::google::protobuf::RepeatedPtrField< ::MsgProto::ResInvestReport > m_res_;
  ::google::protobuf::RepeatedPtrField< ::MsgProto::ArmyInvestReport > m_armys_;
  ::google::protobuf::uint32 m_dv_cur_;
  ::google::protobuf::uint32 m_dv_sum_;
  friend void  protobuf_AddDesc_MsgStruct_2eproto();
  friend void protobuf_AssignDesc_MsgStruct_2eproto();
  friend void protobuf_ShutdownFile_MsgStruct_2eproto();

  void InitAsDefaultInstance();
  static InvestigationReport* default_instance_;
};
// -------------------------------------------------------------------

class ReportDB : public ::google::protobuf::Message {
 public:
  ReportDB();
  virtual ~ReportDB();

  ReportDB(const ReportDB& from);

  inline ReportDB& operator=(const ReportDB& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReportDB& default_instance();

  void Swap(ReportDB* other);

  // implements Message ----------------------------------------------

  ReportDB* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReportDB& from);
  void MergeFrom(const ReportDB& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 m_roleid = 1 [default = 0];
  inline bool has_m_roleid() const;
  inline void clear_m_roleid();
  static const int kMRoleidFieldNumber = 1;
  inline ::google::protobuf::uint32 m_roleid() const;
  inline void set_m_roleid(::google::protobuf::uint32 value);

  // optional uint64 m_time = 2 [default = 0];
  inline bool has_m_time() const;
  inline void clear_m_time();
  static const int kMTimeFieldNumber = 2;
  inline ::google::protobuf::uint64 m_time() const;
  inline void set_m_time(::google::protobuf::uint64 value);

  // optional .MsgProto.ResReport m_res = 3;
  inline bool has_m_res() const;
  inline void clear_m_res();
  static const int kMResFieldNumber = 3;
  inline const ::MsgProto::ResReport& m_res() const;
  inline ::MsgProto::ResReport* mutable_m_res();
  inline ::MsgProto::ResReport* release_m_res();
  inline void set_allocated_m_res(::MsgProto::ResReport* m_res);

  // optional .MsgProto.FightReportMini m_fight_mini = 4;
  inline bool has_m_fight_mini() const;
  inline void clear_m_fight_mini();
  static const int kMFightMiniFieldNumber = 4;
  inline const ::MsgProto::FightReportMini& m_fight_mini() const;
  inline ::MsgProto::FightReportMini* mutable_m_fight_mini();
  inline ::MsgProto::FightReportMini* release_m_fight_mini();
  inline void set_allocated_m_fight_mini(::MsgProto::FightReportMini* m_fight_mini);

  // optional .MsgProto.FightReport m_fight = 5;
  inline bool has_m_fight() const;
  inline void clear_m_fight();
  static const int kMFightFieldNumber = 5;
  inline const ::MsgProto::FightReport& m_fight() const;
  inline ::MsgProto::FightReport* mutable_m_fight();
  inline ::MsgProto::FightReport* release_m_fight();
  inline void set_allocated_m_fight(::MsgProto::FightReport* m_fight);

  // optional .MsgProto.InvestigationReport m_invest = 6;
  inline bool has_m_invest() const;
  inline void clear_m_invest();
  static const int kMInvestFieldNumber = 6;
  inline const ::MsgProto::InvestigationReport& m_invest() const;
  inline ::MsgProto::InvestigationReport* mutable_m_invest();
  inline ::MsgProto::InvestigationReport* release_m_invest();
  inline void set_allocated_m_invest(::MsgProto::InvestigationReport* m_invest);

  // @@protoc_insertion_point(class_scope:MsgProto.ReportDB)
 private:
  inline void set_has_m_roleid();
  inline void clear_has_m_roleid();
  inline void set_has_m_time();
  inline void clear_has_m_time();
  inline void set_has_m_res();
  inline void clear_has_m_res();
  inline void set_has_m_fight_mini();
  inline void clear_has_m_fight_mini();
  inline void set_has_m_fight();
  inline void clear_has_m_fight();
  inline void set_has_m_invest();
  inline void clear_has_m_invest();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 m_time_;
  ::MsgProto::ResReport* m_res_;
  ::MsgProto::FightReportMini* m_fight_mini_;
  ::MsgProto::FightReport* m_fight_;
  ::MsgProto::InvestigationReport* m_invest_;
  ::google::protobuf::uint32 m_roleid_;
  friend void  protobuf_AddDesc_MsgStruct_2eproto();
  friend void protobuf_AssignDesc_MsgStruct_2eproto();
  friend void protobuf_ShutdownFile_MsgStruct_2eproto();

  void InitAsDefaultInstance();
  static ReportDB* default_instance_;
};
// ===================================================================


// ===================================================================

// Suint32Pair

// optional .MsgProto.EKeyType m_eType = 1 [default = EKT_Base];
inline bool Suint32Pair::has_m_etype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Suint32Pair::set_has_m_etype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Suint32Pair::clear_has_m_etype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Suint32Pair::clear_m_etype() {
  m_etype_ = 0;
  clear_has_m_etype();
}
inline ::MsgProto::EKeyType Suint32Pair::m_etype() const {
  // @@protoc_insertion_point(field_get:MsgProto.Suint32Pair.m_eType)
  return static_cast< ::MsgProto::EKeyType >(m_etype_);
}
inline void Suint32Pair::set_m_etype(::MsgProto::EKeyType value) {
  assert(::MsgProto::EKeyType_IsValid(value));
  set_has_m_etype();
  m_etype_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.Suint32Pair.m_eType)
}

// optional uint32 m_uValue = 2 [default = 0];
inline bool Suint32Pair::has_m_uvalue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Suint32Pair::set_has_m_uvalue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Suint32Pair::clear_has_m_uvalue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Suint32Pair::clear_m_uvalue() {
  m_uvalue_ = 0u;
  clear_has_m_uvalue();
}
inline ::google::protobuf::uint32 Suint32Pair::m_uvalue() const {
  // @@protoc_insertion_point(field_get:MsgProto.Suint32Pair.m_uValue)
  return m_uvalue_;
}
inline void Suint32Pair::set_m_uvalue(::google::protobuf::uint32 value) {
  set_has_m_uvalue();
  m_uvalue_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.Suint32Pair.m_uValue)
}

// -------------------------------------------------------------------

// SKeyValuePair

// optional uint32 m_uKey = 1 [default = 0];
inline bool SKeyValuePair::has_m_ukey() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SKeyValuePair::set_has_m_ukey() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SKeyValuePair::clear_has_m_ukey() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SKeyValuePair::clear_m_ukey() {
  m_ukey_ = 0u;
  clear_has_m_ukey();
}
inline ::google::protobuf::uint32 SKeyValuePair::m_ukey() const {
  // @@protoc_insertion_point(field_get:MsgProto.SKeyValuePair.m_uKey)
  return m_ukey_;
}
inline void SKeyValuePair::set_m_ukey(::google::protobuf::uint32 value) {
  set_has_m_ukey();
  m_ukey_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.SKeyValuePair.m_uKey)
}

// optional uint32 m_uValue = 2 [default = 0];
inline bool SKeyValuePair::has_m_uvalue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SKeyValuePair::set_has_m_uvalue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SKeyValuePair::clear_has_m_uvalue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SKeyValuePair::clear_m_uvalue() {
  m_uvalue_ = 0u;
  clear_has_m_uvalue();
}
inline ::google::protobuf::uint32 SKeyValuePair::m_uvalue() const {
  // @@protoc_insertion_point(field_get:MsgProto.SKeyValuePair.m_uValue)
  return m_uvalue_;
}
inline void SKeyValuePair::set_m_uvalue(::google::protobuf::uint32 value) {
  set_has_m_uvalue();
  m_uvalue_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.SKeyValuePair.m_uValue)
}

// -------------------------------------------------------------------

// RoleData

// optional uint32 m_uID = 1 [default = 0];
inline bool RoleData::has_m_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleData::set_has_m_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleData::clear_has_m_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleData::clear_m_uid() {
  m_uid_ = 0u;
  clear_has_m_uid();
}
inline ::google::protobuf::uint32 RoleData::m_uid() const {
  // @@protoc_insertion_point(field_get:MsgProto.RoleData.m_uID)
  return m_uid_;
}
inline void RoleData::set_m_uid(::google::protobuf::uint32 value) {
  set_has_m_uid();
  m_uid_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.RoleData.m_uID)
}

// optional uint32 m_uLastLoing = 2 [default = 0];
inline bool RoleData::has_m_ulastloing() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleData::set_has_m_ulastloing() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleData::clear_has_m_ulastloing() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleData::clear_m_ulastloing() {
  m_ulastloing_ = 0u;
  clear_has_m_ulastloing();
}
inline ::google::protobuf::uint32 RoleData::m_ulastloing() const {
  // @@protoc_insertion_point(field_get:MsgProto.RoleData.m_uLastLoing)
  return m_ulastloing_;
}
inline void RoleData::set_m_ulastloing(::google::protobuf::uint32 value) {
  set_has_m_ulastloing();
  m_ulastloing_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.RoleData.m_uLastLoing)
}

// optional bytes m_strName = 3;
inline bool RoleData::has_m_strname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoleData::set_has_m_strname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoleData::clear_has_m_strname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoleData::clear_m_strname() {
  if (m_strname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    m_strname_->clear();
  }
  clear_has_m_strname();
}
inline const ::std::string& RoleData::m_strname() const {
  // @@protoc_insertion_point(field_get:MsgProto.RoleData.m_strName)
  return *m_strname_;
}
inline void RoleData::set_m_strname(const ::std::string& value) {
  set_has_m_strname();
  if (m_strname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    m_strname_ = new ::std::string;
  }
  m_strname_->assign(value);
  // @@protoc_insertion_point(field_set:MsgProto.RoleData.m_strName)
}
inline void RoleData::set_m_strname(const char* value) {
  set_has_m_strname();
  if (m_strname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    m_strname_ = new ::std::string;
  }
  m_strname_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgProto.RoleData.m_strName)
}
inline void RoleData::set_m_strname(const void* value, size_t size) {
  set_has_m_strname();
  if (m_strname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    m_strname_ = new ::std::string;
  }
  m_strname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgProto.RoleData.m_strName)
}
inline ::std::string* RoleData::mutable_m_strname() {
  set_has_m_strname();
  if (m_strname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    m_strname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgProto.RoleData.m_strName)
  return m_strname_;
}
inline ::std::string* RoleData::release_m_strname() {
  clear_has_m_strname();
  if (m_strname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = m_strname_;
    m_strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RoleData::set_allocated_m_strname(::std::string* m_strname) {
  if (m_strname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete m_strname_;
  }
  if (m_strname) {
    set_has_m_strname();
    m_strname_ = m_strname;
  } else {
    clear_has_m_strname();
    m_strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgProto.RoleData.m_strName)
}

// optional uint32 m_cityid = 4 [default = 0];
inline bool RoleData::has_m_cityid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RoleData::set_has_m_cityid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RoleData::clear_has_m_cityid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RoleData::clear_m_cityid() {
  m_cityid_ = 0u;
  clear_has_m_cityid();
}
inline ::google::protobuf::uint32 RoleData::m_cityid() const {
  // @@protoc_insertion_point(field_get:MsgProto.RoleData.m_cityid)
  return m_cityid_;
}
inline void RoleData::set_m_cityid(::google::protobuf::uint32 value) {
  set_has_m_cityid();
  m_cityid_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.RoleData.m_cityid)
}

// optional uint32 m_gold = 8 [default = 0];
inline bool RoleData::has_m_gold() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RoleData::set_has_m_gold() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RoleData::clear_has_m_gold() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RoleData::clear_m_gold() {
  m_gold_ = 0u;
  clear_has_m_gold();
}
inline ::google::protobuf::uint32 RoleData::m_gold() const {
  // @@protoc_insertion_point(field_get:MsgProto.RoleData.m_gold)
  return m_gold_;
}
inline void RoleData::set_m_gold(::google::protobuf::uint32 value) {
  set_has_m_gold();
  m_gold_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.RoleData.m_gold)
}

// optional uint32 m_attackpower = 9 [default = 0];
inline bool RoleData::has_m_attackpower() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RoleData::set_has_m_attackpower() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RoleData::clear_has_m_attackpower() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RoleData::clear_m_attackpower() {
  m_attackpower_ = 0u;
  clear_has_m_attackpower();
}
inline ::google::protobuf::uint32 RoleData::m_attackpower() const {
  // @@protoc_insertion_point(field_get:MsgProto.RoleData.m_attackpower)
  return m_attackpower_;
}
inline void RoleData::set_m_attackpower(::google::protobuf::uint32 value) {
  set_has_m_attackpower();
  m_attackpower_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.RoleData.m_attackpower)
}

// optional uint32 m_sex = 10 [default = 0];
inline bool RoleData::has_m_sex() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RoleData::set_has_m_sex() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RoleData::clear_has_m_sex() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RoleData::clear_m_sex() {
  m_sex_ = 0u;
  clear_has_m_sex();
}
inline ::google::protobuf::uint32 RoleData::m_sex() const {
  // @@protoc_insertion_point(field_get:MsgProto.RoleData.m_sex)
  return m_sex_;
}
inline void RoleData::set_m_sex(::google::protobuf::uint32 value) {
  set_has_m_sex();
  m_sex_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.RoleData.m_sex)
}

// optional uint32 m_photoid = 11 [default = 0];
inline bool RoleData::has_m_photoid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RoleData::set_has_m_photoid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RoleData::clear_has_m_photoid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RoleData::clear_m_photoid() {
  m_photoid_ = 0u;
  clear_has_m_photoid();
}
inline ::google::protobuf::uint32 RoleData::m_photoid() const {
  // @@protoc_insertion_point(field_get:MsgProto.RoleData.m_photoid)
  return m_photoid_;
}
inline void RoleData::set_m_photoid(::google::protobuf::uint32 value) {
  set_has_m_photoid();
  m_photoid_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.RoleData.m_photoid)
}

// optional uint32 m_level = 12 [default = 0];
inline bool RoleData::has_m_level() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RoleData::set_has_m_level() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RoleData::clear_has_m_level() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RoleData::clear_m_level() {
  m_level_ = 0u;
  clear_has_m_level();
}
inline ::google::protobuf::uint32 RoleData::m_level() const {
  // @@protoc_insertion_point(field_get:MsgProto.RoleData.m_level)
  return m_level_;
}
inline void RoleData::set_m_level(::google::protobuf::uint32 value) {
  set_has_m_level();
  m_level_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.RoleData.m_level)
}

// optional uint32 m_vip = 13 [default = 0];
inline bool RoleData::has_m_vip() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void RoleData::set_has_m_vip() {
  _has_bits_[0] |= 0x00000200u;
}
inline void RoleData::clear_has_m_vip() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void RoleData::clear_m_vip() {
  m_vip_ = 0u;
  clear_has_m_vip();
}
inline ::google::protobuf::uint32 RoleData::m_vip() const {
  // @@protoc_insertion_point(field_get:MsgProto.RoleData.m_vip)
  return m_vip_;
}
inline void RoleData::set_m_vip(::google::protobuf::uint32 value) {
  set_has_m_vip();
  m_vip_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.RoleData.m_vip)
}

// optional uint32 m_exp_level = 14 [default = 0];
inline bool RoleData::has_m_exp_level() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void RoleData::set_has_m_exp_level() {
  _has_bits_[0] |= 0x00000400u;
}
inline void RoleData::clear_has_m_exp_level() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void RoleData::clear_m_exp_level() {
  m_exp_level_ = 0u;
  clear_has_m_exp_level();
}
inline ::google::protobuf::uint32 RoleData::m_exp_level() const {
  // @@protoc_insertion_point(field_get:MsgProto.RoleData.m_exp_level)
  return m_exp_level_;
}
inline void RoleData::set_m_exp_level(::google::protobuf::uint32 value) {
  set_has_m_exp_level();
  m_exp_level_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.RoleData.m_exp_level)
}

// optional uint32 m_exp_vip = 15 [default = 0];
inline bool RoleData::has_m_exp_vip() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void RoleData::set_has_m_exp_vip() {
  _has_bits_[0] |= 0x00000800u;
}
inline void RoleData::clear_has_m_exp_vip() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void RoleData::clear_m_exp_vip() {
  m_exp_vip_ = 0u;
  clear_has_m_exp_vip();
}
inline ::google::protobuf::uint32 RoleData::m_exp_vip() const {
  // @@protoc_insertion_point(field_get:MsgProto.RoleData.m_exp_vip)
  return m_exp_vip_;
}
inline void RoleData::set_m_exp_vip(::google::protobuf::uint32 value) {
  set_has_m_exp_vip();
  m_exp_vip_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.RoleData.m_exp_vip)
}

// -------------------------------------------------------------------

// TimeInfo

// optional uint32 m_leftsecond = 1 [default = 0];
inline bool TimeInfo::has_m_leftsecond() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TimeInfo::set_has_m_leftsecond() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TimeInfo::clear_has_m_leftsecond() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TimeInfo::clear_m_leftsecond() {
  m_leftsecond_ = 0u;
  clear_has_m_leftsecond();
}
inline ::google::protobuf::uint32 TimeInfo::m_leftsecond() const {
  // @@protoc_insertion_point(field_get:MsgProto.TimeInfo.m_leftsecond)
  return m_leftsecond_;
}
inline void TimeInfo::set_m_leftsecond(::google::protobuf::uint32 value) {
  set_has_m_leftsecond();
  m_leftsecond_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.TimeInfo.m_leftsecond)
}

// optional uint32 m_dsttime = 2 [default = 0];
inline bool TimeInfo::has_m_dsttime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TimeInfo::set_has_m_dsttime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TimeInfo::clear_has_m_dsttime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TimeInfo::clear_m_dsttime() {
  m_dsttime_ = 0u;
  clear_has_m_dsttime();
}
inline ::google::protobuf::uint32 TimeInfo::m_dsttime() const {
  // @@protoc_insertion_point(field_get:MsgProto.TimeInfo.m_dsttime)
  return m_dsttime_;
}
inline void TimeInfo::set_m_dsttime(::google::protobuf::uint32 value) {
  set_has_m_dsttime();
  m_dsttime_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.TimeInfo.m_dsttime)
}

// -------------------------------------------------------------------

// WorldPos

// optional uint32 m_x = 1 [default = 0];
inline bool WorldPos::has_m_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorldPos::set_has_m_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorldPos::clear_has_m_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorldPos::clear_m_x() {
  m_x_ = 0u;
  clear_has_m_x();
}
inline ::google::protobuf::uint32 WorldPos::m_x() const {
  // @@protoc_insertion_point(field_get:MsgProto.WorldPos.m_x)
  return m_x_;
}
inline void WorldPos::set_m_x(::google::protobuf::uint32 value) {
  set_has_m_x();
  m_x_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.WorldPos.m_x)
}

// optional uint32 m_y = 2 [default = 0];
inline bool WorldPos::has_m_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorldPos::set_has_m_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorldPos::clear_has_m_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorldPos::clear_m_y() {
  m_y_ = 0u;
  clear_has_m_y();
}
inline ::google::protobuf::uint32 WorldPos::m_y() const {
  // @@protoc_insertion_point(field_get:MsgProto.WorldPos.m_y)
  return m_y_;
}
inline void WorldPos::set_m_y(::google::protobuf::uint32 value) {
  set_has_m_y();
  m_y_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.WorldPos.m_y)
}

// -------------------------------------------------------------------

// WorldView

// optional .MsgProto.WorldPos m_pos_from = 1;
inline bool WorldView::has_m_pos_from() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorldView::set_has_m_pos_from() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorldView::clear_has_m_pos_from() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorldView::clear_m_pos_from() {
  if (m_pos_from_ != NULL) m_pos_from_->::MsgProto::WorldPos::Clear();
  clear_has_m_pos_from();
}
inline const ::MsgProto::WorldPos& WorldView::m_pos_from() const {
  // @@protoc_insertion_point(field_get:MsgProto.WorldView.m_pos_from)
  return m_pos_from_ != NULL ? *m_pos_from_ : *default_instance_->m_pos_from_;
}
inline ::MsgProto::WorldPos* WorldView::mutable_m_pos_from() {
  set_has_m_pos_from();
  if (m_pos_from_ == NULL) m_pos_from_ = new ::MsgProto::WorldPos;
  // @@protoc_insertion_point(field_mutable:MsgProto.WorldView.m_pos_from)
  return m_pos_from_;
}
inline ::MsgProto::WorldPos* WorldView::release_m_pos_from() {
  clear_has_m_pos_from();
  ::MsgProto::WorldPos* temp = m_pos_from_;
  m_pos_from_ = NULL;
  return temp;
}
inline void WorldView::set_allocated_m_pos_from(::MsgProto::WorldPos* m_pos_from) {
  delete m_pos_from_;
  m_pos_from_ = m_pos_from;
  if (m_pos_from) {
    set_has_m_pos_from();
  } else {
    clear_has_m_pos_from();
  }
  // @@protoc_insertion_point(field_set_allocated:MsgProto.WorldView.m_pos_from)
}

// optional .MsgProto.WorldPos m_pos_to = 2;
inline bool WorldView::has_m_pos_to() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorldView::set_has_m_pos_to() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorldView::clear_has_m_pos_to() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorldView::clear_m_pos_to() {
  if (m_pos_to_ != NULL) m_pos_to_->::MsgProto::WorldPos::Clear();
  clear_has_m_pos_to();
}
inline const ::MsgProto::WorldPos& WorldView::m_pos_to() const {
  // @@protoc_insertion_point(field_get:MsgProto.WorldView.m_pos_to)
  return m_pos_to_ != NULL ? *m_pos_to_ : *default_instance_->m_pos_to_;
}
inline ::MsgProto::WorldPos* WorldView::mutable_m_pos_to() {
  set_has_m_pos_to();
  if (m_pos_to_ == NULL) m_pos_to_ = new ::MsgProto::WorldPos;
  // @@protoc_insertion_point(field_mutable:MsgProto.WorldView.m_pos_to)
  return m_pos_to_;
}
inline ::MsgProto::WorldPos* WorldView::release_m_pos_to() {
  clear_has_m_pos_to();
  ::MsgProto::WorldPos* temp = m_pos_to_;
  m_pos_to_ = NULL;
  return temp;
}
inline void WorldView::set_allocated_m_pos_to(::MsgProto::WorldPos* m_pos_to) {
  delete m_pos_to_;
  m_pos_to_ = m_pos_to;
  if (m_pos_to) {
    set_has_m_pos_to();
  } else {
    clear_has_m_pos_to();
  }
  // @@protoc_insertion_point(field_set_allocated:MsgProto.WorldView.m_pos_to)
}

// -------------------------------------------------------------------

// WorldNodeHandler

// optional .MsgProto.EObjectType m_etype = 1 [default = E_army];
inline bool WorldNodeHandler::has_m_etype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorldNodeHandler::set_has_m_etype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorldNodeHandler::clear_has_m_etype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorldNodeHandler::clear_m_etype() {
  m_etype_ = 1;
  clear_has_m_etype();
}
inline ::MsgProto::EObjectType WorldNodeHandler::m_etype() const {
  // @@protoc_insertion_point(field_get:MsgProto.WorldNodeHandler.m_etype)
  return static_cast< ::MsgProto::EObjectType >(m_etype_);
}
inline void WorldNodeHandler::set_m_etype(::MsgProto::EObjectType value) {
  assert(::MsgProto::EObjectType_IsValid(value));
  set_has_m_etype();
  m_etype_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.WorldNodeHandler.m_etype)
}

// optional uint32 m_id = 2 [default = 0];
inline bool WorldNodeHandler::has_m_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorldNodeHandler::set_has_m_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorldNodeHandler::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorldNodeHandler::clear_m_id() {
  m_id_ = 0u;
  clear_has_m_id();
}
inline ::google::protobuf::uint32 WorldNodeHandler::m_id() const {
  // @@protoc_insertion_point(field_get:MsgProto.WorldNodeHandler.m_id)
  return m_id_;
}
inline void WorldNodeHandler::set_m_id(::google::protobuf::uint32 value) {
  set_has_m_id();
  m_id_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.WorldNodeHandler.m_id)
}

// optional uint32 m_tableid = 3 [default = 0];
inline bool WorldNodeHandler::has_m_tableid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WorldNodeHandler::set_has_m_tableid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WorldNodeHandler::clear_has_m_tableid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WorldNodeHandler::clear_m_tableid() {
  m_tableid_ = 0u;
  clear_has_m_tableid();
}
inline ::google::protobuf::uint32 WorldNodeHandler::m_tableid() const {
  // @@protoc_insertion_point(field_get:MsgProto.WorldNodeHandler.m_tableid)
  return m_tableid_;
}
inline void WorldNodeHandler::set_m_tableid(::google::protobuf::uint32 value) {
  set_has_m_tableid();
  m_tableid_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.WorldNodeHandler.m_tableid)
}

// optional uint32 m_roleid = 4 [default = 0];
inline bool WorldNodeHandler::has_m_roleid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WorldNodeHandler::set_has_m_roleid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WorldNodeHandler::clear_has_m_roleid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WorldNodeHandler::clear_m_roleid() {
  m_roleid_ = 0u;
  clear_has_m_roleid();
}
inline ::google::protobuf::uint32 WorldNodeHandler::m_roleid() const {
  // @@protoc_insertion_point(field_get:MsgProto.WorldNodeHandler.m_roleid)
  return m_roleid_;
}
inline void WorldNodeHandler::set_m_roleid(::google::protobuf::uint32 value) {
  set_has_m_roleid();
  m_roleid_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.WorldNodeHandler.m_roleid)
}

// optional .MsgProto.WorldView m_view = 5;
inline bool WorldNodeHandler::has_m_view() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WorldNodeHandler::set_has_m_view() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WorldNodeHandler::clear_has_m_view() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WorldNodeHandler::clear_m_view() {
  if (m_view_ != NULL) m_view_->::MsgProto::WorldView::Clear();
  clear_has_m_view();
}
inline const ::MsgProto::WorldView& WorldNodeHandler::m_view() const {
  // @@protoc_insertion_point(field_get:MsgProto.WorldNodeHandler.m_view)
  return m_view_ != NULL ? *m_view_ : *default_instance_->m_view_;
}
inline ::MsgProto::WorldView* WorldNodeHandler::mutable_m_view() {
  set_has_m_view();
  if (m_view_ == NULL) m_view_ = new ::MsgProto::WorldView;
  // @@protoc_insertion_point(field_mutable:MsgProto.WorldNodeHandler.m_view)
  return m_view_;
}
inline ::MsgProto::WorldView* WorldNodeHandler::release_m_view() {
  clear_has_m_view();
  ::MsgProto::WorldView* temp = m_view_;
  m_view_ = NULL;
  return temp;
}
inline void WorldNodeHandler::set_allocated_m_view(::MsgProto::WorldView* m_view) {
  delete m_view_;
  m_view_ = m_view;
  if (m_view) {
    set_has_m_view();
  } else {
    clear_has_m_view();
  }
  // @@protoc_insertion_point(field_set_allocated:MsgProto.WorldNodeHandler.m_view)
}

// optional uint32 m_hp = 6 [default = 0];
inline bool WorldNodeHandler::has_m_hp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WorldNodeHandler::set_has_m_hp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void WorldNodeHandler::clear_has_m_hp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void WorldNodeHandler::clear_m_hp() {
  m_hp_ = 0u;
  clear_has_m_hp();
}
inline ::google::protobuf::uint32 WorldNodeHandler::m_hp() const {
  // @@protoc_insertion_point(field_get:MsgProto.WorldNodeHandler.m_hp)
  return m_hp_;
}
inline void WorldNodeHandler::set_m_hp(::google::protobuf::uint32 value) {
  set_has_m_hp();
  m_hp_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.WorldNodeHandler.m_hp)
}

// repeated uint32 m_army_ids = 7;
inline int WorldNodeHandler::m_army_ids_size() const {
  return m_army_ids_.size();
}
inline void WorldNodeHandler::clear_m_army_ids() {
  m_army_ids_.Clear();
}
inline ::google::protobuf::uint32 WorldNodeHandler::m_army_ids(int index) const {
  // @@protoc_insertion_point(field_get:MsgProto.WorldNodeHandler.m_army_ids)
  return m_army_ids_.Get(index);
}
inline void WorldNodeHandler::set_m_army_ids(int index, ::google::protobuf::uint32 value) {
  m_army_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:MsgProto.WorldNodeHandler.m_army_ids)
}
inline void WorldNodeHandler::add_m_army_ids(::google::protobuf::uint32 value) {
  m_army_ids_.Add(value);
  // @@protoc_insertion_point(field_add:MsgProto.WorldNodeHandler.m_army_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
WorldNodeHandler::m_army_ids() const {
  // @@protoc_insertion_point(field_list:MsgProto.WorldNodeHandler.m_army_ids)
  return m_army_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
WorldNodeHandler::mutable_m_army_ids() {
  // @@protoc_insertion_point(field_mutable_list:MsgProto.WorldNodeHandler.m_army_ids)
  return &m_army_ids_;
}

// -------------------------------------------------------------------

// WorldNodeVector

// repeated .MsgProto.WorldNodeHandler m_nodes = 9;
inline int WorldNodeVector::m_nodes_size() const {
  return m_nodes_.size();
}
inline void WorldNodeVector::clear_m_nodes() {
  m_nodes_.Clear();
}
inline const ::MsgProto::WorldNodeHandler& WorldNodeVector::m_nodes(int index) const {
  // @@protoc_insertion_point(field_get:MsgProto.WorldNodeVector.m_nodes)
  return m_nodes_.Get(index);
}
inline ::MsgProto::WorldNodeHandler* WorldNodeVector::mutable_m_nodes(int index) {
  // @@protoc_insertion_point(field_mutable:MsgProto.WorldNodeVector.m_nodes)
  return m_nodes_.Mutable(index);
}
inline ::MsgProto::WorldNodeHandler* WorldNodeVector::add_m_nodes() {
  // @@protoc_insertion_point(field_add:MsgProto.WorldNodeVector.m_nodes)
  return m_nodes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgProto::WorldNodeHandler >&
WorldNodeVector::m_nodes() const {
  // @@protoc_insertion_point(field_list:MsgProto.WorldNodeVector.m_nodes)
  return m_nodes_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgProto::WorldNodeHandler >*
WorldNodeVector::mutable_m_nodes() {
  // @@protoc_insertion_point(field_mutable_list:MsgProto.WorldNodeVector.m_nodes)
  return &m_nodes_;
}

// -------------------------------------------------------------------

// WorldArmy

// optional uint32 m_uArmyID = 1 [default = 0];
inline bool WorldArmy::has_m_uarmyid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorldArmy::set_has_m_uarmyid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorldArmy::clear_has_m_uarmyid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorldArmy::clear_m_uarmyid() {
  m_uarmyid_ = 0u;
  clear_has_m_uarmyid();
}
inline ::google::protobuf::uint32 WorldArmy::m_uarmyid() const {
  // @@protoc_insertion_point(field_get:MsgProto.WorldArmy.m_uArmyID)
  return m_uarmyid_;
}
inline void WorldArmy::set_m_uarmyid(::google::protobuf::uint32 value) {
  set_has_m_uarmyid();
  m_uarmyid_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.WorldArmy.m_uArmyID)
}

// optional uint32 m_uRoleID = 2 [default = 0];
inline bool WorldArmy::has_m_uroleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorldArmy::set_has_m_uroleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorldArmy::clear_has_m_uroleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorldArmy::clear_m_uroleid() {
  m_uroleid_ = 0u;
  clear_has_m_uroleid();
}
inline ::google::protobuf::uint32 WorldArmy::m_uroleid() const {
  // @@protoc_insertion_point(field_get:MsgProto.WorldArmy.m_uRoleID)
  return m_uroleid_;
}
inline void WorldArmy::set_m_uroleid(::google::protobuf::uint32 value) {
  set_has_m_uroleid();
  m_uroleid_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.WorldArmy.m_uRoleID)
}

// optional uint32 m_uCityID = 3 [default = 0];
inline bool WorldArmy::has_m_ucityid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WorldArmy::set_has_m_ucityid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WorldArmy::clear_has_m_ucityid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WorldArmy::clear_m_ucityid() {
  m_ucityid_ = 0u;
  clear_has_m_ucityid();
}
inline ::google::protobuf::uint32 WorldArmy::m_ucityid() const {
  // @@protoc_insertion_point(field_get:MsgProto.WorldArmy.m_uCityID)
  return m_ucityid_;
}
inline void WorldArmy::set_m_ucityid(::google::protobuf::uint32 value) {
  set_has_m_ucityid();
  m_ucityid_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.WorldArmy.m_uCityID)
}

// optional .MsgProto.WorldArmy.EState m_eState = 4 [default = E_MoveTo];
inline bool WorldArmy::has_m_estate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WorldArmy::set_has_m_estate() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WorldArmy::clear_has_m_estate() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WorldArmy::clear_m_estate() {
  m_estate_ = 0;
  clear_has_m_estate();
}
inline ::MsgProto::WorldArmy_EState WorldArmy::m_estate() const {
  // @@protoc_insertion_point(field_get:MsgProto.WorldArmy.m_eState)
  return static_cast< ::MsgProto::WorldArmy_EState >(m_estate_);
}
inline void WorldArmy::set_m_estate(::MsgProto::WorldArmy_EState value) {
  assert(::MsgProto::WorldArmy_EState_IsValid(value));
  set_has_m_estate();
  m_estate_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.WorldArmy.m_eState)
}

// optional .MsgProto.WorldView m_view_from = 5;
inline bool WorldArmy::has_m_view_from() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WorldArmy::set_has_m_view_from() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WorldArmy::clear_has_m_view_from() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WorldArmy::clear_m_view_from() {
  if (m_view_from_ != NULL) m_view_from_->::MsgProto::WorldView::Clear();
  clear_has_m_view_from();
}
inline const ::MsgProto::WorldView& WorldArmy::m_view_from() const {
  // @@protoc_insertion_point(field_get:MsgProto.WorldArmy.m_view_from)
  return m_view_from_ != NULL ? *m_view_from_ : *default_instance_->m_view_from_;
}
inline ::MsgProto::WorldView* WorldArmy::mutable_m_view_from() {
  set_has_m_view_from();
  if (m_view_from_ == NULL) m_view_from_ = new ::MsgProto::WorldView;
  // @@protoc_insertion_point(field_mutable:MsgProto.WorldArmy.m_view_from)
  return m_view_from_;
}
inline ::MsgProto::WorldView* WorldArmy::release_m_view_from() {
  clear_has_m_view_from();
  ::MsgProto::WorldView* temp = m_view_from_;
  m_view_from_ = NULL;
  return temp;
}
inline void WorldArmy::set_allocated_m_view_from(::MsgProto::WorldView* m_view_from) {
  delete m_view_from_;
  m_view_from_ = m_view_from;
  if (m_view_from) {
    set_has_m_view_from();
  } else {
    clear_has_m_view_from();
  }
  // @@protoc_insertion_point(field_set_allocated:MsgProto.WorldArmy.m_view_from)
}

// optional .MsgProto.WorldView m_view_to = 6;
inline bool WorldArmy::has_m_view_to() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WorldArmy::set_has_m_view_to() {
  _has_bits_[0] |= 0x00000020u;
}
inline void WorldArmy::clear_has_m_view_to() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void WorldArmy::clear_m_view_to() {
  if (m_view_to_ != NULL) m_view_to_->::MsgProto::WorldView::Clear();
  clear_has_m_view_to();
}
inline const ::MsgProto::WorldView& WorldArmy::m_view_to() const {
  // @@protoc_insertion_point(field_get:MsgProto.WorldArmy.m_view_to)
  return m_view_to_ != NULL ? *m_view_to_ : *default_instance_->m_view_to_;
}
inline ::MsgProto::WorldView* WorldArmy::mutable_m_view_to() {
  set_has_m_view_to();
  if (m_view_to_ == NULL) m_view_to_ = new ::MsgProto::WorldView;
  // @@protoc_insertion_point(field_mutable:MsgProto.WorldArmy.m_view_to)
  return m_view_to_;
}
inline ::MsgProto::WorldView* WorldArmy::release_m_view_to() {
  clear_has_m_view_to();
  ::MsgProto::WorldView* temp = m_view_to_;
  m_view_to_ = NULL;
  return temp;
}
inline void WorldArmy::set_allocated_m_view_to(::MsgProto::WorldView* m_view_to) {
  delete m_view_to_;
  m_view_to_ = m_view_to;
  if (m_view_to) {
    set_has_m_view_to();
  } else {
    clear_has_m_view_to();
  }
  // @@protoc_insertion_point(field_set_allocated:MsgProto.WorldArmy.m_view_to)
}

// optional uint32 m_uMoveSpeed = 7 [default = 0];
inline bool WorldArmy::has_m_umovespeed() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void WorldArmy::set_has_m_umovespeed() {
  _has_bits_[0] |= 0x00000040u;
}
inline void WorldArmy::clear_has_m_umovespeed() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void WorldArmy::clear_m_umovespeed() {
  m_umovespeed_ = 0u;
  clear_has_m_umovespeed();
}
inline ::google::protobuf::uint32 WorldArmy::m_umovespeed() const {
  // @@protoc_insertion_point(field_get:MsgProto.WorldArmy.m_uMoveSpeed)
  return m_umovespeed_;
}
inline void WorldArmy::set_m_umovespeed(::google::protobuf::uint32 value) {
  set_has_m_umovespeed();
  m_umovespeed_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.WorldArmy.m_uMoveSpeed)
}

// optional .MsgProto.TimeInfo m_time = 8;
inline bool WorldArmy::has_m_time() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void WorldArmy::set_has_m_time() {
  _has_bits_[0] |= 0x00000080u;
}
inline void WorldArmy::clear_has_m_time() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void WorldArmy::clear_m_time() {
  if (m_time_ != NULL) m_time_->::MsgProto::TimeInfo::Clear();
  clear_has_m_time();
}
inline const ::MsgProto::TimeInfo& WorldArmy::m_time() const {
  // @@protoc_insertion_point(field_get:MsgProto.WorldArmy.m_time)
  return m_time_ != NULL ? *m_time_ : *default_instance_->m_time_;
}
inline ::MsgProto::TimeInfo* WorldArmy::mutable_m_time() {
  set_has_m_time();
  if (m_time_ == NULL) m_time_ = new ::MsgProto::TimeInfo;
  // @@protoc_insertion_point(field_mutable:MsgProto.WorldArmy.m_time)
  return m_time_;
}
inline ::MsgProto::TimeInfo* WorldArmy::release_m_time() {
  clear_has_m_time();
  ::MsgProto::TimeInfo* temp = m_time_;
  m_time_ = NULL;
  return temp;
}
inline void WorldArmy::set_allocated_m_time(::MsgProto::TimeInfo* m_time) {
  delete m_time_;
  m_time_ = m_time;
  if (m_time) {
    set_has_m_time();
  } else {
    clear_has_m_time();
  }
  // @@protoc_insertion_point(field_set_allocated:MsgProto.WorldArmy.m_time)
}

// repeated .MsgProto.SKeyValuePair m_res = 9;
inline int WorldArmy::m_res_size() const {
  return m_res_.size();
}
inline void WorldArmy::clear_m_res() {
  m_res_.Clear();
}
inline const ::MsgProto::SKeyValuePair& WorldArmy::m_res(int index) const {
  // @@protoc_insertion_point(field_get:MsgProto.WorldArmy.m_res)
  return m_res_.Get(index);
}
inline ::MsgProto::SKeyValuePair* WorldArmy::mutable_m_res(int index) {
  // @@protoc_insertion_point(field_mutable:MsgProto.WorldArmy.m_res)
  return m_res_.Mutable(index);
}
inline ::MsgProto::SKeyValuePair* WorldArmy::add_m_res() {
  // @@protoc_insertion_point(field_add:MsgProto.WorldArmy.m_res)
  return m_res_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgProto::SKeyValuePair >&
WorldArmy::m_res() const {
  // @@protoc_insertion_point(field_list:MsgProto.WorldArmy.m_res)
  return m_res_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgProto::SKeyValuePair >*
WorldArmy::mutable_m_res() {
  // @@protoc_insertion_point(field_mutable_list:MsgProto.WorldArmy.m_res)
  return &m_res_;
}

// optional .MsgProto.EResOwner m_owner = 10 [default = E_None];
inline bool WorldArmy::has_m_owner() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void WorldArmy::set_has_m_owner() {
  _has_bits_[0] |= 0x00000200u;
}
inline void WorldArmy::clear_has_m_owner() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void WorldArmy::clear_m_owner() {
  m_owner_ = 0;
  clear_has_m_owner();
}
inline ::MsgProto::EResOwner WorldArmy::m_owner() const {
  // @@protoc_insertion_point(field_get:MsgProto.WorldArmy.m_owner)
  return static_cast< ::MsgProto::EResOwner >(m_owner_);
}
inline void WorldArmy::set_m_owner(::MsgProto::EResOwner value) {
  assert(::MsgProto::EResOwner_IsValid(value));
  set_has_m_owner();
  m_owner_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.WorldArmy.m_owner)
}

// optional .MsgProto.WorldArmy.MoveType m_mt = 11 [default = mt_fight];
inline bool WorldArmy::has_m_mt() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void WorldArmy::set_has_m_mt() {
  _has_bits_[0] |= 0x00000400u;
}
inline void WorldArmy::clear_has_m_mt() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void WorldArmy::clear_m_mt() {
  m_mt_ = 0;
  clear_has_m_mt();
}
inline ::MsgProto::WorldArmy_MoveType WorldArmy::m_mt() const {
  // @@protoc_insertion_point(field_get:MsgProto.WorldArmy.m_mt)
  return static_cast< ::MsgProto::WorldArmy_MoveType >(m_mt_);
}
inline void WorldArmy::set_m_mt(::MsgProto::WorldArmy_MoveType value) {
  assert(::MsgProto::WorldArmy_MoveType_IsValid(value));
  set_has_m_mt();
  m_mt_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.WorldArmy.m_mt)
}

// optional uint32 m_fight_res = 12 [default = 0];
inline bool WorldArmy::has_m_fight_res() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void WorldArmy::set_has_m_fight_res() {
  _has_bits_[0] |= 0x00000800u;
}
inline void WorldArmy::clear_has_m_fight_res() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void WorldArmy::clear_m_fight_res() {
  m_fight_res_ = 0u;
  clear_has_m_fight_res();
}
inline ::google::protobuf::uint32 WorldArmy::m_fight_res() const {
  // @@protoc_insertion_point(field_get:MsgProto.WorldArmy.m_fight_res)
  return m_fight_res_;
}
inline void WorldArmy::set_m_fight_res(::google::protobuf::uint32 value) {
  set_has_m_fight_res();
  m_fight_res_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.WorldArmy.m_fight_res)
}

// -------------------------------------------------------------------

// WorldMine

// optional .MsgProto.WorldMine.EState m_etype = 1 [default = E_Free];
inline bool WorldMine::has_m_etype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorldMine::set_has_m_etype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorldMine::clear_has_m_etype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorldMine::clear_m_etype() {
  m_etype_ = 0;
  clear_has_m_etype();
}
inline ::MsgProto::WorldMine_EState WorldMine::m_etype() const {
  // @@protoc_insertion_point(field_get:MsgProto.WorldMine.m_etype)
  return static_cast< ::MsgProto::WorldMine_EState >(m_etype_);
}
inline void WorldMine::set_m_etype(::MsgProto::WorldMine_EState value) {
  assert(::MsgProto::WorldMine_EState_IsValid(value));
  set_has_m_etype();
  m_etype_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.WorldMine.m_etype)
}

// optional .MsgProto.WorldView m_pos = 2;
inline bool WorldMine::has_m_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorldMine::set_has_m_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorldMine::clear_has_m_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorldMine::clear_m_pos() {
  if (m_pos_ != NULL) m_pos_->::MsgProto::WorldView::Clear();
  clear_has_m_pos();
}
inline const ::MsgProto::WorldView& WorldMine::m_pos() const {
  // @@protoc_insertion_point(field_get:MsgProto.WorldMine.m_pos)
  return m_pos_ != NULL ? *m_pos_ : *default_instance_->m_pos_;
}
inline ::MsgProto::WorldView* WorldMine::mutable_m_pos() {
  set_has_m_pos();
  if (m_pos_ == NULL) m_pos_ = new ::MsgProto::WorldView;
  // @@protoc_insertion_point(field_mutable:MsgProto.WorldMine.m_pos)
  return m_pos_;
}
inline ::MsgProto::WorldView* WorldMine::release_m_pos() {
  clear_has_m_pos();
  ::MsgProto::WorldView* temp = m_pos_;
  m_pos_ = NULL;
  return temp;
}
inline void WorldMine::set_allocated_m_pos(::MsgProto::WorldView* m_pos) {
  delete m_pos_;
  m_pos_ = m_pos;
  if (m_pos) {
    set_has_m_pos();
  } else {
    clear_has_m_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:MsgProto.WorldMine.m_pos)
}

// optional uint32 m_uMineID = 3 [default = 0];
inline bool WorldMine::has_m_umineid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WorldMine::set_has_m_umineid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WorldMine::clear_has_m_umineid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WorldMine::clear_m_umineid() {
  m_umineid_ = 0u;
  clear_has_m_umineid();
}
inline ::google::protobuf::uint32 WorldMine::m_umineid() const {
  // @@protoc_insertion_point(field_get:MsgProto.WorldMine.m_uMineID)
  return m_umineid_;
}
inline void WorldMine::set_m_umineid(::google::protobuf::uint32 value) {
  set_has_m_umineid();
  m_umineid_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.WorldMine.m_uMineID)
}

// optional uint32 m_uTableID = 4 [default = 0];
inline bool WorldMine::has_m_utableid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WorldMine::set_has_m_utableid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WorldMine::clear_has_m_utableid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WorldMine::clear_m_utableid() {
  m_utableid_ = 0u;
  clear_has_m_utableid();
}
inline ::google::protobuf::uint32 WorldMine::m_utableid() const {
  // @@protoc_insertion_point(field_get:MsgProto.WorldMine.m_uTableID)
  return m_utableid_;
}
inline void WorldMine::set_m_utableid(::google::protobuf::uint32 value) {
  set_has_m_utableid();
  m_utableid_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.WorldMine.m_uTableID)
}

// optional uint32 m_hp = 5 [default = 0];
inline bool WorldMine::has_m_hp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WorldMine::set_has_m_hp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WorldMine::clear_has_m_hp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WorldMine::clear_m_hp() {
  m_hp_ = 0u;
  clear_has_m_hp();
}
inline ::google::protobuf::uint32 WorldMine::m_hp() const {
  // @@protoc_insertion_point(field_get:MsgProto.WorldMine.m_hp)
  return m_hp_;
}
inline void WorldMine::set_m_hp(::google::protobuf::uint32 value) {
  set_has_m_hp();
  m_hp_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.WorldMine.m_hp)
}

// optional .MsgProto.EResOwner m_owner = 6 [default = E_None];
inline bool WorldMine::has_m_owner() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WorldMine::set_has_m_owner() {
  _has_bits_[0] |= 0x00000020u;
}
inline void WorldMine::clear_has_m_owner() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void WorldMine::clear_m_owner() {
  m_owner_ = 0;
  clear_has_m_owner();
}
inline ::MsgProto::EResOwner WorldMine::m_owner() const {
  // @@protoc_insertion_point(field_get:MsgProto.WorldMine.m_owner)
  return static_cast< ::MsgProto::EResOwner >(m_owner_);
}
inline void WorldMine::set_m_owner(::MsgProto::EResOwner value) {
  assert(::MsgProto::EResOwner_IsValid(value));
  set_has_m_owner();
  m_owner_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.WorldMine.m_owner)
}

// -------------------------------------------------------------------

// WorldNpc

// optional .MsgProto.WorldView m_pos = 1;
inline bool WorldNpc::has_m_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorldNpc::set_has_m_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorldNpc::clear_has_m_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorldNpc::clear_m_pos() {
  if (m_pos_ != NULL) m_pos_->::MsgProto::WorldView::Clear();
  clear_has_m_pos();
}
inline const ::MsgProto::WorldView& WorldNpc::m_pos() const {
  // @@protoc_insertion_point(field_get:MsgProto.WorldNpc.m_pos)
  return m_pos_ != NULL ? *m_pos_ : *default_instance_->m_pos_;
}
inline ::MsgProto::WorldView* WorldNpc::mutable_m_pos() {
  set_has_m_pos();
  if (m_pos_ == NULL) m_pos_ = new ::MsgProto::WorldView;
  // @@protoc_insertion_point(field_mutable:MsgProto.WorldNpc.m_pos)
  return m_pos_;
}
inline ::MsgProto::WorldView* WorldNpc::release_m_pos() {
  clear_has_m_pos();
  ::MsgProto::WorldView* temp = m_pos_;
  m_pos_ = NULL;
  return temp;
}
inline void WorldNpc::set_allocated_m_pos(::MsgProto::WorldView* m_pos) {
  delete m_pos_;
  m_pos_ = m_pos;
  if (m_pos) {
    set_has_m_pos();
  } else {
    clear_has_m_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:MsgProto.WorldNpc.m_pos)
}

// optional uint32 m_uNpcID = 2 [default = 0];
inline bool WorldNpc::has_m_unpcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorldNpc::set_has_m_unpcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorldNpc::clear_has_m_unpcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorldNpc::clear_m_unpcid() {
  m_unpcid_ = 0u;
  clear_has_m_unpcid();
}
inline ::google::protobuf::uint32 WorldNpc::m_unpcid() const {
  // @@protoc_insertion_point(field_get:MsgProto.WorldNpc.m_uNpcID)
  return m_unpcid_;
}
inline void WorldNpc::set_m_unpcid(::google::protobuf::uint32 value) {
  set_has_m_unpcid();
  m_unpcid_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.WorldNpc.m_uNpcID)
}

// optional uint32 m_uTableID = 3 [default = 0];
inline bool WorldNpc::has_m_utableid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WorldNpc::set_has_m_utableid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WorldNpc::clear_has_m_utableid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WorldNpc::clear_m_utableid() {
  m_utableid_ = 0u;
  clear_has_m_utableid();
}
inline ::google::protobuf::uint32 WorldNpc::m_utableid() const {
  // @@protoc_insertion_point(field_get:MsgProto.WorldNpc.m_uTableID)
  return m_utableid_;
}
inline void WorldNpc::set_m_utableid(::google::protobuf::uint32 value) {
  set_has_m_utableid();
  m_utableid_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.WorldNpc.m_uTableID)
}

// optional .MsgProto.EResOwner m_owner = 4 [default = E_None];
inline bool WorldNpc::has_m_owner() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WorldNpc::set_has_m_owner() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WorldNpc::clear_has_m_owner() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WorldNpc::clear_m_owner() {
  m_owner_ = 0;
  clear_has_m_owner();
}
inline ::MsgProto::EResOwner WorldNpc::m_owner() const {
  // @@protoc_insertion_point(field_get:MsgProto.WorldNpc.m_owner)
  return static_cast< ::MsgProto::EResOwner >(m_owner_);
}
inline void WorldNpc::set_m_owner(::MsgProto::EResOwner value) {
  assert(::MsgProto::EResOwner_IsValid(value));
  set_has_m_owner();
  m_owner_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.WorldNpc.m_owner)
}

// -------------------------------------------------------------------

// WorldCity

// optional .MsgProto.WorldView m_pos = 1;
inline bool WorldCity::has_m_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorldCity::set_has_m_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorldCity::clear_has_m_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorldCity::clear_m_pos() {
  if (m_pos_ != NULL) m_pos_->::MsgProto::WorldView::Clear();
  clear_has_m_pos();
}
inline const ::MsgProto::WorldView& WorldCity::m_pos() const {
  // @@protoc_insertion_point(field_get:MsgProto.WorldCity.m_pos)
  return m_pos_ != NULL ? *m_pos_ : *default_instance_->m_pos_;
}
inline ::MsgProto::WorldView* WorldCity::mutable_m_pos() {
  set_has_m_pos();
  if (m_pos_ == NULL) m_pos_ = new ::MsgProto::WorldView;
  // @@protoc_insertion_point(field_mutable:MsgProto.WorldCity.m_pos)
  return m_pos_;
}
inline ::MsgProto::WorldView* WorldCity::release_m_pos() {
  clear_has_m_pos();
  ::MsgProto::WorldView* temp = m_pos_;
  m_pos_ = NULL;
  return temp;
}
inline void WorldCity::set_allocated_m_pos(::MsgProto::WorldView* m_pos) {
  delete m_pos_;
  m_pos_ = m_pos;
  if (m_pos) {
    set_has_m_pos();
  } else {
    clear_has_m_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:MsgProto.WorldCity.m_pos)
}

// optional uint32 m_uCityID = 2 [default = 0];
inline bool WorldCity::has_m_ucityid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorldCity::set_has_m_ucityid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorldCity::clear_has_m_ucityid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorldCity::clear_m_ucityid() {
  m_ucityid_ = 0u;
  clear_has_m_ucityid();
}
inline ::google::protobuf::uint32 WorldCity::m_ucityid() const {
  // @@protoc_insertion_point(field_get:MsgProto.WorldCity.m_uCityID)
  return m_ucityid_;
}
inline void WorldCity::set_m_ucityid(::google::protobuf::uint32 value) {
  set_has_m_ucityid();
  m_ucityid_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.WorldCity.m_uCityID)
}

// optional uint32 m_uTableID = 3 [default = 0];
inline bool WorldCity::has_m_utableid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WorldCity::set_has_m_utableid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WorldCity::clear_has_m_utableid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WorldCity::clear_m_utableid() {
  m_utableid_ = 0u;
  clear_has_m_utableid();
}
inline ::google::protobuf::uint32 WorldCity::m_utableid() const {
  // @@protoc_insertion_point(field_get:MsgProto.WorldCity.m_uTableID)
  return m_utableid_;
}
inline void WorldCity::set_m_utableid(::google::protobuf::uint32 value) {
  set_has_m_utableid();
  m_utableid_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.WorldCity.m_uTableID)
}

// optional uint32 m_uRoleID = 4 [default = 0];
inline bool WorldCity::has_m_uroleid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WorldCity::set_has_m_uroleid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WorldCity::clear_has_m_uroleid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WorldCity::clear_m_uroleid() {
  m_uroleid_ = 0u;
  clear_has_m_uroleid();
}
inline ::google::protobuf::uint32 WorldCity::m_uroleid() const {
  // @@protoc_insertion_point(field_get:MsgProto.WorldCity.m_uRoleID)
  return m_uroleid_;
}
inline void WorldCity::set_m_uroleid(::google::protobuf::uint32 value) {
  set_has_m_uroleid();
  m_uroleid_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.WorldCity.m_uRoleID)
}

// optional bytes m_strName = 5;
inline bool WorldCity::has_m_strname() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WorldCity::set_has_m_strname() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WorldCity::clear_has_m_strname() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WorldCity::clear_m_strname() {
  if (m_strname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    m_strname_->clear();
  }
  clear_has_m_strname();
}
inline const ::std::string& WorldCity::m_strname() const {
  // @@protoc_insertion_point(field_get:MsgProto.WorldCity.m_strName)
  return *m_strname_;
}
inline void WorldCity::set_m_strname(const ::std::string& value) {
  set_has_m_strname();
  if (m_strname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    m_strname_ = new ::std::string;
  }
  m_strname_->assign(value);
  // @@protoc_insertion_point(field_set:MsgProto.WorldCity.m_strName)
}
inline void WorldCity::set_m_strname(const char* value) {
  set_has_m_strname();
  if (m_strname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    m_strname_ = new ::std::string;
  }
  m_strname_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgProto.WorldCity.m_strName)
}
inline void WorldCity::set_m_strname(const void* value, size_t size) {
  set_has_m_strname();
  if (m_strname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    m_strname_ = new ::std::string;
  }
  m_strname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgProto.WorldCity.m_strName)
}
inline ::std::string* WorldCity::mutable_m_strname() {
  set_has_m_strname();
  if (m_strname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    m_strname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgProto.WorldCity.m_strName)
  return m_strname_;
}
inline ::std::string* WorldCity::release_m_strname() {
  clear_has_m_strname();
  if (m_strname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = m_strname_;
    m_strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void WorldCity::set_allocated_m_strname(::std::string* m_strname) {
  if (m_strname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete m_strname_;
  }
  if (m_strname) {
    set_has_m_strname();
    m_strname_ = m_strname;
  } else {
    clear_has_m_strname();
    m_strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgProto.WorldCity.m_strName)
}

// optional uint32 m_sLevel = 6 [default = 0];
inline bool WorldCity::has_m_slevel() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WorldCity::set_has_m_slevel() {
  _has_bits_[0] |= 0x00000020u;
}
inline void WorldCity::clear_has_m_slevel() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void WorldCity::clear_m_slevel() {
  m_slevel_ = 0u;
  clear_has_m_slevel();
}
inline ::google::protobuf::uint32 WorldCity::m_slevel() const {
  // @@protoc_insertion_point(field_get:MsgProto.WorldCity.m_sLevel)
  return m_slevel_;
}
inline void WorldCity::set_m_slevel(::google::protobuf::uint32 value) {
  set_has_m_slevel();
  m_slevel_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.WorldCity.m_sLevel)
}

// optional .MsgProto.EResOwner m_owner = 7 [default = E_None];
inline bool WorldCity::has_m_owner() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void WorldCity::set_has_m_owner() {
  _has_bits_[0] |= 0x00000040u;
}
inline void WorldCity::clear_has_m_owner() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void WorldCity::clear_m_owner() {
  m_owner_ = 0;
  clear_has_m_owner();
}
inline ::MsgProto::EResOwner WorldCity::m_owner() const {
  // @@protoc_insertion_point(field_get:MsgProto.WorldCity.m_owner)
  return static_cast< ::MsgProto::EResOwner >(m_owner_);
}
inline void WorldCity::set_m_owner(::MsgProto::EResOwner value) {
  assert(::MsgProto::EResOwner_IsValid(value));
  set_has_m_owner();
  m_owner_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.WorldCity.m_owner)
}

// -------------------------------------------------------------------

// WorldTower

// optional .MsgProto.WorldView m_pos = 1;
inline bool WorldTower::has_m_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorldTower::set_has_m_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorldTower::clear_has_m_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorldTower::clear_m_pos() {
  if (m_pos_ != NULL) m_pos_->::MsgProto::WorldView::Clear();
  clear_has_m_pos();
}
inline const ::MsgProto::WorldView& WorldTower::m_pos() const {
  // @@protoc_insertion_point(field_get:MsgProto.WorldTower.m_pos)
  return m_pos_ != NULL ? *m_pos_ : *default_instance_->m_pos_;
}
inline ::MsgProto::WorldView* WorldTower::mutable_m_pos() {
  set_has_m_pos();
  if (m_pos_ == NULL) m_pos_ = new ::MsgProto::WorldView;
  // @@protoc_insertion_point(field_mutable:MsgProto.WorldTower.m_pos)
  return m_pos_;
}
inline ::MsgProto::WorldView* WorldTower::release_m_pos() {
  clear_has_m_pos();
  ::MsgProto::WorldView* temp = m_pos_;
  m_pos_ = NULL;
  return temp;
}
inline void WorldTower::set_allocated_m_pos(::MsgProto::WorldView* m_pos) {
  delete m_pos_;
  m_pos_ = m_pos;
  if (m_pos) {
    set_has_m_pos();
  } else {
    clear_has_m_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:MsgProto.WorldTower.m_pos)
}

// optional uint32 m_gid = 2 [default = 0];
inline bool WorldTower::has_m_gid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorldTower::set_has_m_gid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorldTower::clear_has_m_gid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorldTower::clear_m_gid() {
  m_gid_ = 0u;
  clear_has_m_gid();
}
inline ::google::protobuf::uint32 WorldTower::m_gid() const {
  // @@protoc_insertion_point(field_get:MsgProto.WorldTower.m_gid)
  return m_gid_;
}
inline void WorldTower::set_m_gid(::google::protobuf::uint32 value) {
  set_has_m_gid();
  m_gid_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.WorldTower.m_gid)
}

// optional uint32 m_tid = 3 [default = 0];
inline bool WorldTower::has_m_tid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WorldTower::set_has_m_tid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WorldTower::clear_has_m_tid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WorldTower::clear_m_tid() {
  m_tid_ = 0u;
  clear_has_m_tid();
}
inline ::google::protobuf::uint32 WorldTower::m_tid() const {
  // @@protoc_insertion_point(field_get:MsgProto.WorldTower.m_tid)
  return m_tid_;
}
inline void WorldTower::set_m_tid(::google::protobuf::uint32 value) {
  set_has_m_tid();
  m_tid_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.WorldTower.m_tid)
}

// repeated uint32 m_army_ids = 4;
inline int WorldTower::m_army_ids_size() const {
  return m_army_ids_.size();
}
inline void WorldTower::clear_m_army_ids() {
  m_army_ids_.Clear();
}
inline ::google::protobuf::uint32 WorldTower::m_army_ids(int index) const {
  // @@protoc_insertion_point(field_get:MsgProto.WorldTower.m_army_ids)
  return m_army_ids_.Get(index);
}
inline void WorldTower::set_m_army_ids(int index, ::google::protobuf::uint32 value) {
  m_army_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:MsgProto.WorldTower.m_army_ids)
}
inline void WorldTower::add_m_army_ids(::google::protobuf::uint32 value) {
  m_army_ids_.Add(value);
  // @@protoc_insertion_point(field_add:MsgProto.WorldTower.m_army_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
WorldTower::m_army_ids() const {
  // @@protoc_insertion_point(field_list:MsgProto.WorldTower.m_army_ids)
  return m_army_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
WorldTower::mutable_m_army_ids() {
  // @@protoc_insertion_point(field_mutable_list:MsgProto.WorldTower.m_army_ids)
  return &m_army_ids_;
}

// optional .MsgProto.EResOwner m_owner = 7 [default = E_None];
inline bool WorldTower::has_m_owner() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WorldTower::set_has_m_owner() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WorldTower::clear_has_m_owner() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WorldTower::clear_m_owner() {
  m_owner_ = 0;
  clear_has_m_owner();
}
inline ::MsgProto::EResOwner WorldTower::m_owner() const {
  // @@protoc_insertion_point(field_get:MsgProto.WorldTower.m_owner)
  return static_cast< ::MsgProto::EResOwner >(m_owner_);
}
inline void WorldTower::set_m_owner(::MsgProto::EResOwner value) {
  assert(::MsgProto::EResOwner_IsValid(value));
  set_has_m_owner();
  m_owner_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.WorldTower.m_owner)
}

// -------------------------------------------------------------------

// WorldBoss

// optional .MsgProto.WorldView m_pos = 1;
inline bool WorldBoss::has_m_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorldBoss::set_has_m_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorldBoss::clear_has_m_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorldBoss::clear_m_pos() {
  if (m_pos_ != NULL) m_pos_->::MsgProto::WorldView::Clear();
  clear_has_m_pos();
}
inline const ::MsgProto::WorldView& WorldBoss::m_pos() const {
  // @@protoc_insertion_point(field_get:MsgProto.WorldBoss.m_pos)
  return m_pos_ != NULL ? *m_pos_ : *default_instance_->m_pos_;
}
inline ::MsgProto::WorldView* WorldBoss::mutable_m_pos() {
  set_has_m_pos();
  if (m_pos_ == NULL) m_pos_ = new ::MsgProto::WorldView;
  // @@protoc_insertion_point(field_mutable:MsgProto.WorldBoss.m_pos)
  return m_pos_;
}
inline ::MsgProto::WorldView* WorldBoss::release_m_pos() {
  clear_has_m_pos();
  ::MsgProto::WorldView* temp = m_pos_;
  m_pos_ = NULL;
  return temp;
}
inline void WorldBoss::set_allocated_m_pos(::MsgProto::WorldView* m_pos) {
  delete m_pos_;
  m_pos_ = m_pos;
  if (m_pos) {
    set_has_m_pos();
  } else {
    clear_has_m_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:MsgProto.WorldBoss.m_pos)
}

// optional uint32 m_gid = 2 [default = 0];
inline bool WorldBoss::has_m_gid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorldBoss::set_has_m_gid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorldBoss::clear_has_m_gid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorldBoss::clear_m_gid() {
  m_gid_ = 0u;
  clear_has_m_gid();
}
inline ::google::protobuf::uint32 WorldBoss::m_gid() const {
  // @@protoc_insertion_point(field_get:MsgProto.WorldBoss.m_gid)
  return m_gid_;
}
inline void WorldBoss::set_m_gid(::google::protobuf::uint32 value) {
  set_has_m_gid();
  m_gid_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.WorldBoss.m_gid)
}

// optional uint32 m_tid = 3 [default = 0];
inline bool WorldBoss::has_m_tid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WorldBoss::set_has_m_tid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WorldBoss::clear_has_m_tid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WorldBoss::clear_m_tid() {
  m_tid_ = 0u;
  clear_has_m_tid();
}
inline ::google::protobuf::uint32 WorldBoss::m_tid() const {
  // @@protoc_insertion_point(field_get:MsgProto.WorldBoss.m_tid)
  return m_tid_;
}
inline void WorldBoss::set_m_tid(::google::protobuf::uint32 value) {
  set_has_m_tid();
  m_tid_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.WorldBoss.m_tid)
}

// optional uint32 m_hp = 4 [default = 0];
inline bool WorldBoss::has_m_hp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WorldBoss::set_has_m_hp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WorldBoss::clear_has_m_hp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WorldBoss::clear_m_hp() {
  m_hp_ = 0u;
  clear_has_m_hp();
}
inline ::google::protobuf::uint32 WorldBoss::m_hp() const {
  // @@protoc_insertion_point(field_get:MsgProto.WorldBoss.m_hp)
  return m_hp_;
}
inline void WorldBoss::set_m_hp(::google::protobuf::uint32 value) {
  set_has_m_hp();
  m_hp_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.WorldBoss.m_hp)
}

// -------------------------------------------------------------------

// RoleSoldier

// optional uint32 m_uSoldierID = 1 [default = 0];
inline bool RoleSoldier::has_m_usoldierid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleSoldier::set_has_m_usoldierid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleSoldier::clear_has_m_usoldierid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleSoldier::clear_m_usoldierid() {
  m_usoldierid_ = 0u;
  clear_has_m_usoldierid();
}
inline ::google::protobuf::uint32 RoleSoldier::m_usoldierid() const {
  // @@protoc_insertion_point(field_get:MsgProto.RoleSoldier.m_uSoldierID)
  return m_usoldierid_;
}
inline void RoleSoldier::set_m_usoldierid(::google::protobuf::uint32 value) {
  set_has_m_usoldierid();
  m_usoldierid_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.RoleSoldier.m_uSoldierID)
}

// optional uint32 m_uSoldierNum = 2 [default = 0];
inline bool RoleSoldier::has_m_usoldiernum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleSoldier::set_has_m_usoldiernum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleSoldier::clear_has_m_usoldiernum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleSoldier::clear_m_usoldiernum() {
  m_usoldiernum_ = 0u;
  clear_has_m_usoldiernum();
}
inline ::google::protobuf::uint32 RoleSoldier::m_usoldiernum() const {
  // @@protoc_insertion_point(field_get:MsgProto.RoleSoldier.m_uSoldierNum)
  return m_usoldiernum_;
}
inline void RoleSoldier::set_m_usoldiernum(::google::protobuf::uint32 value) {
  set_has_m_usoldiernum();
  m_usoldiernum_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.RoleSoldier.m_uSoldierNum)
}

// -------------------------------------------------------------------

// RoleArmy

// optional .MsgProto.WorldArmy m_move = 1;
inline bool RoleArmy::has_m_move() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleArmy::set_has_m_move() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleArmy::clear_has_m_move() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleArmy::clear_m_move() {
  if (m_move_ != NULL) m_move_->::MsgProto::WorldArmy::Clear();
  clear_has_m_move();
}
inline const ::MsgProto::WorldArmy& RoleArmy::m_move() const {
  // @@protoc_insertion_point(field_get:MsgProto.RoleArmy.m_move)
  return m_move_ != NULL ? *m_move_ : *default_instance_->m_move_;
}
inline ::MsgProto::WorldArmy* RoleArmy::mutable_m_move() {
  set_has_m_move();
  if (m_move_ == NULL) m_move_ = new ::MsgProto::WorldArmy;
  // @@protoc_insertion_point(field_mutable:MsgProto.RoleArmy.m_move)
  return m_move_;
}
inline ::MsgProto::WorldArmy* RoleArmy::release_m_move() {
  clear_has_m_move();
  ::MsgProto::WorldArmy* temp = m_move_;
  m_move_ = NULL;
  return temp;
}
inline void RoleArmy::set_allocated_m_move(::MsgProto::WorldArmy* m_move) {
  delete m_move_;
  m_move_ = m_move;
  if (m_move) {
    set_has_m_move();
  } else {
    clear_has_m_move();
  }
  // @@protoc_insertion_point(field_set_allocated:MsgProto.RoleArmy.m_move)
}

// repeated .MsgProto.RoleSoldier m_soldier = 2;
inline int RoleArmy::m_soldier_size() const {
  return m_soldier_.size();
}
inline void RoleArmy::clear_m_soldier() {
  m_soldier_.Clear();
}
inline const ::MsgProto::RoleSoldier& RoleArmy::m_soldier(int index) const {
  // @@protoc_insertion_point(field_get:MsgProto.RoleArmy.m_soldier)
  return m_soldier_.Get(index);
}
inline ::MsgProto::RoleSoldier* RoleArmy::mutable_m_soldier(int index) {
  // @@protoc_insertion_point(field_mutable:MsgProto.RoleArmy.m_soldier)
  return m_soldier_.Mutable(index);
}
inline ::MsgProto::RoleSoldier* RoleArmy::add_m_soldier() {
  // @@protoc_insertion_point(field_add:MsgProto.RoleArmy.m_soldier)
  return m_soldier_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgProto::RoleSoldier >&
RoleArmy::m_soldier() const {
  // @@protoc_insertion_point(field_list:MsgProto.RoleArmy.m_soldier)
  return m_soldier_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgProto::RoleSoldier >*
RoleArmy::mutable_m_soldier() {
  // @@protoc_insertion_point(field_mutable_list:MsgProto.RoleArmy.m_soldier)
  return &m_soldier_;
}

// optional uint32 m_load_base = 3;
inline bool RoleArmy::has_m_load_base() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoleArmy::set_has_m_load_base() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoleArmy::clear_has_m_load_base() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoleArmy::clear_m_load_base() {
  m_load_base_ = 0u;
  clear_has_m_load_base();
}
inline ::google::protobuf::uint32 RoleArmy::m_load_base() const {
  // @@protoc_insertion_point(field_get:MsgProto.RoleArmy.m_load_base)
  return m_load_base_;
}
inline void RoleArmy::set_m_load_base(::google::protobuf::uint32 value) {
  set_has_m_load_base();
  m_load_base_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.RoleArmy.m_load_base)
}

// optional uint32 m_res_id = 4;
inline bool RoleArmy::has_m_res_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RoleArmy::set_has_m_res_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RoleArmy::clear_has_m_res_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RoleArmy::clear_m_res_id() {
  m_res_id_ = 0u;
  clear_has_m_res_id();
}
inline ::google::protobuf::uint32 RoleArmy::m_res_id() const {
  // @@protoc_insertion_point(field_get:MsgProto.RoleArmy.m_res_id)
  return m_res_id_;
}
inline void RoleArmy::set_m_res_id(::google::protobuf::uint32 value) {
  set_has_m_res_id();
  m_res_id_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.RoleArmy.m_res_id)
}

// optional uint32 m_res_num = 5;
inline bool RoleArmy::has_m_res_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RoleArmy::set_has_m_res_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RoleArmy::clear_has_m_res_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RoleArmy::clear_m_res_num() {
  m_res_num_ = 0u;
  clear_has_m_res_num();
}
inline ::google::protobuf::uint32 RoleArmy::m_res_num() const {
  // @@protoc_insertion_point(field_get:MsgProto.RoleArmy.m_res_num)
  return m_res_num_;
}
inline void RoleArmy::set_m_res_num(::google::protobuf::uint32 value) {
  set_has_m_res_num();
  m_res_num_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.RoleArmy.m_res_num)
}

// optional uint32 m_res_speed = 6;
inline bool RoleArmy::has_m_res_speed() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RoleArmy::set_has_m_res_speed() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RoleArmy::clear_has_m_res_speed() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RoleArmy::clear_m_res_speed() {
  m_res_speed_ = 0u;
  clear_has_m_res_speed();
}
inline ::google::protobuf::uint32 RoleArmy::m_res_speed() const {
  // @@protoc_insertion_point(field_get:MsgProto.RoleArmy.m_res_speed)
  return m_res_speed_;
}
inline void RoleArmy::set_m_res_speed(::google::protobuf::uint32 value) {
  set_has_m_res_speed();
  m_res_speed_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.RoleArmy.m_res_speed)
}

// optional float m_move_length = 7;
inline bool RoleArmy::has_m_move_length() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RoleArmy::set_has_m_move_length() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RoleArmy::clear_has_m_move_length() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RoleArmy::clear_m_move_length() {
  m_move_length_ = 0;
  clear_has_m_move_length();
}
inline float RoleArmy::m_move_length() const {
  // @@protoc_insertion_point(field_get:MsgProto.RoleArmy.m_move_length)
  return m_move_length_;
}
inline void RoleArmy::set_m_move_length(float value) {
  set_has_m_move_length();
  m_move_length_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.RoleArmy.m_move_length)
}

// optional uint32 m_build_resid = 8 [default = 0];
inline bool RoleArmy::has_m_build_resid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RoleArmy::set_has_m_build_resid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RoleArmy::clear_has_m_build_resid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RoleArmy::clear_m_build_resid() {
  m_build_resid_ = 0u;
  clear_has_m_build_resid();
}
inline ::google::protobuf::uint32 RoleArmy::m_build_resid() const {
  // @@protoc_insertion_point(field_get:MsgProto.RoleArmy.m_build_resid)
  return m_build_resid_;
}
inline void RoleArmy::set_m_build_resid(::google::protobuf::uint32 value) {
  set_has_m_build_resid();
  m_build_resid_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.RoleArmy.m_build_resid)
}

// optional .MsgProto.InvestigationReport m_invest = 9;
inline bool RoleArmy::has_m_invest() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RoleArmy::set_has_m_invest() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RoleArmy::clear_has_m_invest() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RoleArmy::clear_m_invest() {
  if (m_invest_ != NULL) m_invest_->::MsgProto::InvestigationReport::Clear();
  clear_has_m_invest();
}
inline const ::MsgProto::InvestigationReport& RoleArmy::m_invest() const {
  // @@protoc_insertion_point(field_get:MsgProto.RoleArmy.m_invest)
  return m_invest_ != NULL ? *m_invest_ : *default_instance_->m_invest_;
}
inline ::MsgProto::InvestigationReport* RoleArmy::mutable_m_invest() {
  set_has_m_invest();
  if (m_invest_ == NULL) m_invest_ = new ::MsgProto::InvestigationReport;
  // @@protoc_insertion_point(field_mutable:MsgProto.RoleArmy.m_invest)
  return m_invest_;
}
inline ::MsgProto::InvestigationReport* RoleArmy::release_m_invest() {
  clear_has_m_invest();
  ::MsgProto::InvestigationReport* temp = m_invest_;
  m_invest_ = NULL;
  return temp;
}
inline void RoleArmy::set_allocated_m_invest(::MsgProto::InvestigationReport* m_invest) {
  delete m_invest_;
  m_invest_ = m_invest;
  if (m_invest) {
    set_has_m_invest();
  } else {
    clear_has_m_invest();
  }
  // @@protoc_insertion_point(field_set_allocated:MsgProto.RoleArmy.m_invest)
}

// -------------------------------------------------------------------

// RoleBuild

// optional uint32 m_buildid = 1 [default = 0];
inline bool RoleBuild::has_m_buildid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleBuild::set_has_m_buildid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleBuild::clear_has_m_buildid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleBuild::clear_m_buildid() {
  m_buildid_ = 0u;
  clear_has_m_buildid();
}
inline ::google::protobuf::uint32 RoleBuild::m_buildid() const {
  // @@protoc_insertion_point(field_get:MsgProto.RoleBuild.m_buildid)
  return m_buildid_;
}
inline void RoleBuild::set_m_buildid(::google::protobuf::uint32 value) {
  set_has_m_buildid();
  m_buildid_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.RoleBuild.m_buildid)
}

// optional .MsgProto.TimeInfo m_finishtime = 2;
inline bool RoleBuild::has_m_finishtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleBuild::set_has_m_finishtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleBuild::clear_has_m_finishtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleBuild::clear_m_finishtime() {
  if (m_finishtime_ != NULL) m_finishtime_->::MsgProto::TimeInfo::Clear();
  clear_has_m_finishtime();
}
inline const ::MsgProto::TimeInfo& RoleBuild::m_finishtime() const {
  // @@protoc_insertion_point(field_get:MsgProto.RoleBuild.m_finishtime)
  return m_finishtime_ != NULL ? *m_finishtime_ : *default_instance_->m_finishtime_;
}
inline ::MsgProto::TimeInfo* RoleBuild::mutable_m_finishtime() {
  set_has_m_finishtime();
  if (m_finishtime_ == NULL) m_finishtime_ = new ::MsgProto::TimeInfo;
  // @@protoc_insertion_point(field_mutable:MsgProto.RoleBuild.m_finishtime)
  return m_finishtime_;
}
inline ::MsgProto::TimeInfo* RoleBuild::release_m_finishtime() {
  clear_has_m_finishtime();
  ::MsgProto::TimeInfo* temp = m_finishtime_;
  m_finishtime_ = NULL;
  return temp;
}
inline void RoleBuild::set_allocated_m_finishtime(::MsgProto::TimeInfo* m_finishtime) {
  delete m_finishtime_;
  m_finishtime_ = m_finishtime;
  if (m_finishtime) {
    set_has_m_finishtime();
  } else {
    clear_has_m_finishtime();
  }
  // @@protoc_insertion_point(field_set_allocated:MsgProto.RoleBuild.m_finishtime)
}

// optional .MsgProto.TimeInfo m_buildtime = 3;
inline bool RoleBuild::has_m_buildtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoleBuild::set_has_m_buildtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoleBuild::clear_has_m_buildtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoleBuild::clear_m_buildtime() {
  if (m_buildtime_ != NULL) m_buildtime_->::MsgProto::TimeInfo::Clear();
  clear_has_m_buildtime();
}
inline const ::MsgProto::TimeInfo& RoleBuild::m_buildtime() const {
  // @@protoc_insertion_point(field_get:MsgProto.RoleBuild.m_buildtime)
  return m_buildtime_ != NULL ? *m_buildtime_ : *default_instance_->m_buildtime_;
}
inline ::MsgProto::TimeInfo* RoleBuild::mutable_m_buildtime() {
  set_has_m_buildtime();
  if (m_buildtime_ == NULL) m_buildtime_ = new ::MsgProto::TimeInfo;
  // @@protoc_insertion_point(field_mutable:MsgProto.RoleBuild.m_buildtime)
  return m_buildtime_;
}
inline ::MsgProto::TimeInfo* RoleBuild::release_m_buildtime() {
  clear_has_m_buildtime();
  ::MsgProto::TimeInfo* temp = m_buildtime_;
  m_buildtime_ = NULL;
  return temp;
}
inline void RoleBuild::set_allocated_m_buildtime(::MsgProto::TimeInfo* m_buildtime) {
  delete m_buildtime_;
  m_buildtime_ = m_buildtime;
  if (m_buildtime) {
    set_has_m_buildtime();
  } else {
    clear_has_m_buildtime();
  }
  // @@protoc_insertion_point(field_set_allocated:MsgProto.RoleBuild.m_buildtime)
}

// optional uint32 m_builditem = 5 [default = 0];
inline bool RoleBuild::has_m_builditem() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RoleBuild::set_has_m_builditem() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RoleBuild::clear_has_m_builditem() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RoleBuild::clear_m_builditem() {
  m_builditem_ = 0u;
  clear_has_m_builditem();
}
inline ::google::protobuf::uint32 RoleBuild::m_builditem() const {
  // @@protoc_insertion_point(field_get:MsgProto.RoleBuild.m_builditem)
  return m_builditem_;
}
inline void RoleBuild::set_m_builditem(::google::protobuf::uint32 value) {
  set_has_m_builditem();
  m_builditem_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.RoleBuild.m_builditem)
}

// optional uint32 m_builditemnum = 6 [default = 0];
inline bool RoleBuild::has_m_builditemnum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RoleBuild::set_has_m_builditemnum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RoleBuild::clear_has_m_builditemnum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RoleBuild::clear_m_builditemnum() {
  m_builditemnum_ = 0u;
  clear_has_m_builditemnum();
}
inline ::google::protobuf::uint32 RoleBuild::m_builditemnum() const {
  // @@protoc_insertion_point(field_get:MsgProto.RoleBuild.m_builditemnum)
  return m_builditemnum_;
}
inline void RoleBuild::set_m_builditemnum(::google::protobuf::uint32 value) {
  set_has_m_builditemnum();
  m_builditemnum_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.RoleBuild.m_builditemnum)
}

// optional uint32 m_hp = 7 [default = 0];
inline bool RoleBuild::has_m_hp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RoleBuild::set_has_m_hp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RoleBuild::clear_has_m_hp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RoleBuild::clear_m_hp() {
  m_hp_ = 0u;
  clear_has_m_hp();
}
inline ::google::protobuf::uint32 RoleBuild::m_hp() const {
  // @@protoc_insertion_point(field_get:MsgProto.RoleBuild.m_hp)
  return m_hp_;
}
inline void RoleBuild::set_m_hp(::google::protobuf::uint32 value) {
  set_has_m_hp();
  m_hp_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.RoleBuild.m_hp)
}

// -------------------------------------------------------------------

// RoleCity

// optional uint32 m_uCityID = 1 [default = 0];
inline bool RoleCity::has_m_ucityid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleCity::set_has_m_ucityid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleCity::clear_has_m_ucityid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleCity::clear_m_ucityid() {
  m_ucityid_ = 0u;
  clear_has_m_ucityid();
}
inline ::google::protobuf::uint32 RoleCity::m_ucityid() const {
  // @@protoc_insertion_point(field_get:MsgProto.RoleCity.m_uCityID)
  return m_ucityid_;
}
inline void RoleCity::set_m_ucityid(::google::protobuf::uint32 value) {
  set_has_m_ucityid();
  m_ucityid_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.RoleCity.m_uCityID)
}

// optional uint32 m_uRoleID = 2 [default = 0];
inline bool RoleCity::has_m_uroleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleCity::set_has_m_uroleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleCity::clear_has_m_uroleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleCity::clear_m_uroleid() {
  m_uroleid_ = 0u;
  clear_has_m_uroleid();
}
inline ::google::protobuf::uint32 RoleCity::m_uroleid() const {
  // @@protoc_insertion_point(field_get:MsgProto.RoleCity.m_uRoleID)
  return m_uroleid_;
}
inline void RoleCity::set_m_uroleid(::google::protobuf::uint32 value) {
  set_has_m_uroleid();
  m_uroleid_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.RoleCity.m_uRoleID)
}

// optional uint32 m_uTableID = 3 [default = 0];
inline bool RoleCity::has_m_utableid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoleCity::set_has_m_utableid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoleCity::clear_has_m_utableid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoleCity::clear_m_utableid() {
  m_utableid_ = 0u;
  clear_has_m_utableid();
}
inline ::google::protobuf::uint32 RoleCity::m_utableid() const {
  // @@protoc_insertion_point(field_get:MsgProto.RoleCity.m_uTableID)
  return m_utableid_;
}
inline void RoleCity::set_m_utableid(::google::protobuf::uint32 value) {
  set_has_m_utableid();
  m_utableid_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.RoleCity.m_uTableID)
}

// optional bytes m_strName = 4;
inline bool RoleCity::has_m_strname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RoleCity::set_has_m_strname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RoleCity::clear_has_m_strname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RoleCity::clear_m_strname() {
  if (m_strname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    m_strname_->clear();
  }
  clear_has_m_strname();
}
inline const ::std::string& RoleCity::m_strname() const {
  // @@protoc_insertion_point(field_get:MsgProto.RoleCity.m_strName)
  return *m_strname_;
}
inline void RoleCity::set_m_strname(const ::std::string& value) {
  set_has_m_strname();
  if (m_strname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    m_strname_ = new ::std::string;
  }
  m_strname_->assign(value);
  // @@protoc_insertion_point(field_set:MsgProto.RoleCity.m_strName)
}
inline void RoleCity::set_m_strname(const char* value) {
  set_has_m_strname();
  if (m_strname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    m_strname_ = new ::std::string;
  }
  m_strname_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgProto.RoleCity.m_strName)
}
inline void RoleCity::set_m_strname(const void* value, size_t size) {
  set_has_m_strname();
  if (m_strname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    m_strname_ = new ::std::string;
  }
  m_strname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgProto.RoleCity.m_strName)
}
inline ::std::string* RoleCity::mutable_m_strname() {
  set_has_m_strname();
  if (m_strname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    m_strname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgProto.RoleCity.m_strName)
  return m_strname_;
}
inline ::std::string* RoleCity::release_m_strname() {
  clear_has_m_strname();
  if (m_strname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = m_strname_;
    m_strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RoleCity::set_allocated_m_strname(::std::string* m_strname) {
  if (m_strname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete m_strname_;
  }
  if (m_strname) {
    set_has_m_strname();
    m_strname_ = m_strname;
  } else {
    clear_has_m_strname();
    m_strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgProto.RoleCity.m_strName)
}

// optional .MsgProto.WorldView m_pos = 5;
inline bool RoleCity::has_m_pos() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RoleCity::set_has_m_pos() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RoleCity::clear_has_m_pos() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RoleCity::clear_m_pos() {
  if (m_pos_ != NULL) m_pos_->::MsgProto::WorldView::Clear();
  clear_has_m_pos();
}
inline const ::MsgProto::WorldView& RoleCity::m_pos() const {
  // @@protoc_insertion_point(field_get:MsgProto.RoleCity.m_pos)
  return m_pos_ != NULL ? *m_pos_ : *default_instance_->m_pos_;
}
inline ::MsgProto::WorldView* RoleCity::mutable_m_pos() {
  set_has_m_pos();
  if (m_pos_ == NULL) m_pos_ = new ::MsgProto::WorldView;
  // @@protoc_insertion_point(field_mutable:MsgProto.RoleCity.m_pos)
  return m_pos_;
}
inline ::MsgProto::WorldView* RoleCity::release_m_pos() {
  clear_has_m_pos();
  ::MsgProto::WorldView* temp = m_pos_;
  m_pos_ = NULL;
  return temp;
}
inline void RoleCity::set_allocated_m_pos(::MsgProto::WorldView* m_pos) {
  delete m_pos_;
  m_pos_ = m_pos;
  if (m_pos) {
    set_has_m_pos();
  } else {
    clear_has_m_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:MsgProto.RoleCity.m_pos)
}

// optional uint32 m_food = 6 [default = 0];
inline bool RoleCity::has_m_food() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RoleCity::set_has_m_food() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RoleCity::clear_has_m_food() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RoleCity::clear_m_food() {
  m_food_ = 0u;
  clear_has_m_food();
}
inline ::google::protobuf::uint32 RoleCity::m_food() const {
  // @@protoc_insertion_point(field_get:MsgProto.RoleCity.m_food)
  return m_food_;
}
inline void RoleCity::set_m_food(::google::protobuf::uint32 value) {
  set_has_m_food();
  m_food_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.RoleCity.m_food)
}

// optional uint32 m_iron = 7 [default = 0];
inline bool RoleCity::has_m_iron() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RoleCity::set_has_m_iron() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RoleCity::clear_has_m_iron() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RoleCity::clear_m_iron() {
  m_iron_ = 0u;
  clear_has_m_iron();
}
inline ::google::protobuf::uint32 RoleCity::m_iron() const {
  // @@protoc_insertion_point(field_get:MsgProto.RoleCity.m_iron)
  return m_iron_;
}
inline void RoleCity::set_m_iron(::google::protobuf::uint32 value) {
  set_has_m_iron();
  m_iron_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.RoleCity.m_iron)
}

// optional uint32 m_crystal = 8 [default = 0];
inline bool RoleCity::has_m_crystal() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RoleCity::set_has_m_crystal() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RoleCity::clear_has_m_crystal() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RoleCity::clear_m_crystal() {
  m_crystal_ = 0u;
  clear_has_m_crystal();
}
inline ::google::protobuf::uint32 RoleCity::m_crystal() const {
  // @@protoc_insertion_point(field_get:MsgProto.RoleCity.m_crystal)
  return m_crystal_;
}
inline void RoleCity::set_m_crystal(::google::protobuf::uint32 value) {
  set_has_m_crystal();
  m_crystal_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.RoleCity.m_crystal)
}

// repeated .MsgProto.RoleArmy m_armys = 9;
inline int RoleCity::m_armys_size() const {
  return m_armys_.size();
}
inline void RoleCity::clear_m_armys() {
  m_armys_.Clear();
}
inline const ::MsgProto::RoleArmy& RoleCity::m_armys(int index) const {
  // @@protoc_insertion_point(field_get:MsgProto.RoleCity.m_armys)
  return m_armys_.Get(index);
}
inline ::MsgProto::RoleArmy* RoleCity::mutable_m_armys(int index) {
  // @@protoc_insertion_point(field_mutable:MsgProto.RoleCity.m_armys)
  return m_armys_.Mutable(index);
}
inline ::MsgProto::RoleArmy* RoleCity::add_m_armys() {
  // @@protoc_insertion_point(field_add:MsgProto.RoleCity.m_armys)
  return m_armys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgProto::RoleArmy >&
RoleCity::m_armys() const {
  // @@protoc_insertion_point(field_list:MsgProto.RoleCity.m_armys)
  return m_armys_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgProto::RoleArmy >*
RoleCity::mutable_m_armys() {
  // @@protoc_insertion_point(field_mutable_list:MsgProto.RoleCity.m_armys)
  return &m_armys_;
}

// repeated .MsgProto.RoleSoldier m_soldier = 10;
inline int RoleCity::m_soldier_size() const {
  return m_soldier_.size();
}
inline void RoleCity::clear_m_soldier() {
  m_soldier_.Clear();
}
inline const ::MsgProto::RoleSoldier& RoleCity::m_soldier(int index) const {
  // @@protoc_insertion_point(field_get:MsgProto.RoleCity.m_soldier)
  return m_soldier_.Get(index);
}
inline ::MsgProto::RoleSoldier* RoleCity::mutable_m_soldier(int index) {
  // @@protoc_insertion_point(field_mutable:MsgProto.RoleCity.m_soldier)
  return m_soldier_.Mutable(index);
}
inline ::MsgProto::RoleSoldier* RoleCity::add_m_soldier() {
  // @@protoc_insertion_point(field_add:MsgProto.RoleCity.m_soldier)
  return m_soldier_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgProto::RoleSoldier >&
RoleCity::m_soldier() const {
  // @@protoc_insertion_point(field_list:MsgProto.RoleCity.m_soldier)
  return m_soldier_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgProto::RoleSoldier >*
RoleCity::mutable_m_soldier() {
  // @@protoc_insertion_point(field_mutable_list:MsgProto.RoleCity.m_soldier)
  return &m_soldier_;
}

// repeated .MsgProto.RoleBuild m_build = 11;
inline int RoleCity::m_build_size() const {
  return m_build_.size();
}
inline void RoleCity::clear_m_build() {
  m_build_.Clear();
}
inline const ::MsgProto::RoleBuild& RoleCity::m_build(int index) const {
  // @@protoc_insertion_point(field_get:MsgProto.RoleCity.m_build)
  return m_build_.Get(index);
}
inline ::MsgProto::RoleBuild* RoleCity::mutable_m_build(int index) {
  // @@protoc_insertion_point(field_mutable:MsgProto.RoleCity.m_build)
  return m_build_.Mutable(index);
}
inline ::MsgProto::RoleBuild* RoleCity::add_m_build() {
  // @@protoc_insertion_point(field_add:MsgProto.RoleCity.m_build)
  return m_build_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgProto::RoleBuild >&
RoleCity::m_build() const {
  // @@protoc_insertion_point(field_list:MsgProto.RoleCity.m_build)
  return m_build_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgProto::RoleBuild >*
RoleCity::mutable_m_build() {
  // @@protoc_insertion_point(field_mutable_list:MsgProto.RoleCity.m_build)
  return &m_build_;
}

// -------------------------------------------------------------------

// RoleCityVector

// repeated .MsgProto.RoleCity m_citys = 1;
inline int RoleCityVector::m_citys_size() const {
  return m_citys_.size();
}
inline void RoleCityVector::clear_m_citys() {
  m_citys_.Clear();
}
inline const ::MsgProto::RoleCity& RoleCityVector::m_citys(int index) const {
  // @@protoc_insertion_point(field_get:MsgProto.RoleCityVector.m_citys)
  return m_citys_.Get(index);
}
inline ::MsgProto::RoleCity* RoleCityVector::mutable_m_citys(int index) {
  // @@protoc_insertion_point(field_mutable:MsgProto.RoleCityVector.m_citys)
  return m_citys_.Mutable(index);
}
inline ::MsgProto::RoleCity* RoleCityVector::add_m_citys() {
  // @@protoc_insertion_point(field_add:MsgProto.RoleCityVector.m_citys)
  return m_citys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgProto::RoleCity >&
RoleCityVector::m_citys() const {
  // @@protoc_insertion_point(field_list:MsgProto.RoleCityVector.m_citys)
  return m_citys_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgProto::RoleCity >*
RoleCityVector::mutable_m_citys() {
  // @@protoc_insertion_point(field_mutable_list:MsgProto.RoleCityVector.m_citys)
  return &m_citys_;
}

// -------------------------------------------------------------------

// RoleFightTitle

// optional bytes m_strName = 1;
inline bool RoleFightTitle::has_m_strname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleFightTitle::set_has_m_strname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleFightTitle::clear_has_m_strname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleFightTitle::clear_m_strname() {
  if (m_strname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    m_strname_->clear();
  }
  clear_has_m_strname();
}
inline const ::std::string& RoleFightTitle::m_strname() const {
  // @@protoc_insertion_point(field_get:MsgProto.RoleFightTitle.m_strName)
  return *m_strname_;
}
inline void RoleFightTitle::set_m_strname(const ::std::string& value) {
  set_has_m_strname();
  if (m_strname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    m_strname_ = new ::std::string;
  }
  m_strname_->assign(value);
  // @@protoc_insertion_point(field_set:MsgProto.RoleFightTitle.m_strName)
}
inline void RoleFightTitle::set_m_strname(const char* value) {
  set_has_m_strname();
  if (m_strname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    m_strname_ = new ::std::string;
  }
  m_strname_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgProto.RoleFightTitle.m_strName)
}
inline void RoleFightTitle::set_m_strname(const void* value, size_t size) {
  set_has_m_strname();
  if (m_strname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    m_strname_ = new ::std::string;
  }
  m_strname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgProto.RoleFightTitle.m_strName)
}
inline ::std::string* RoleFightTitle::mutable_m_strname() {
  set_has_m_strname();
  if (m_strname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    m_strname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgProto.RoleFightTitle.m_strName)
  return m_strname_;
}
inline ::std::string* RoleFightTitle::release_m_strname() {
  clear_has_m_strname();
  if (m_strname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = m_strname_;
    m_strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RoleFightTitle::set_allocated_m_strname(::std::string* m_strname) {
  if (m_strname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete m_strname_;
  }
  if (m_strname) {
    set_has_m_strname();
    m_strname_ = m_strname;
  } else {
    clear_has_m_strname();
    m_strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgProto.RoleFightTitle.m_strName)
}

// optional uint32 m_level = 2 [default = 0];
inline bool RoleFightTitle::has_m_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleFightTitle::set_has_m_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleFightTitle::clear_has_m_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleFightTitle::clear_m_level() {
  m_level_ = 0u;
  clear_has_m_level();
}
inline ::google::protobuf::uint32 RoleFightTitle::m_level() const {
  // @@protoc_insertion_point(field_get:MsgProto.RoleFightTitle.m_level)
  return m_level_;
}
inline void RoleFightTitle::set_m_level(::google::protobuf::uint32 value) {
  set_has_m_level();
  m_level_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.RoleFightTitle.m_level)
}

// optional .MsgProto.WorldPos m_pos = 3;
inline bool RoleFightTitle::has_m_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoleFightTitle::set_has_m_pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoleFightTitle::clear_has_m_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoleFightTitle::clear_m_pos() {
  if (m_pos_ != NULL) m_pos_->::MsgProto::WorldPos::Clear();
  clear_has_m_pos();
}
inline const ::MsgProto::WorldPos& RoleFightTitle::m_pos() const {
  // @@protoc_insertion_point(field_get:MsgProto.RoleFightTitle.m_pos)
  return m_pos_ != NULL ? *m_pos_ : *default_instance_->m_pos_;
}
inline ::MsgProto::WorldPos* RoleFightTitle::mutable_m_pos() {
  set_has_m_pos();
  if (m_pos_ == NULL) m_pos_ = new ::MsgProto::WorldPos;
  // @@protoc_insertion_point(field_mutable:MsgProto.RoleFightTitle.m_pos)
  return m_pos_;
}
inline ::MsgProto::WorldPos* RoleFightTitle::release_m_pos() {
  clear_has_m_pos();
  ::MsgProto::WorldPos* temp = m_pos_;
  m_pos_ = NULL;
  return temp;
}
inline void RoleFightTitle::set_allocated_m_pos(::MsgProto::WorldPos* m_pos) {
  delete m_pos_;
  m_pos_ = m_pos;
  if (m_pos) {
    set_has_m_pos();
  } else {
    clear_has_m_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:MsgProto.RoleFightTitle.m_pos)
}

// -------------------------------------------------------------------

// ResPlunder

// optional uint32 m_id = 1 [default = 0];
inline bool ResPlunder::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResPlunder::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResPlunder::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResPlunder::clear_m_id() {
  m_id_ = 0u;
  clear_has_m_id();
}
inline ::google::protobuf::uint32 ResPlunder::m_id() const {
  // @@protoc_insertion_point(field_get:MsgProto.ResPlunder.m_id)
  return m_id_;
}
inline void ResPlunder::set_m_id(::google::protobuf::uint32 value) {
  set_has_m_id();
  m_id_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.ResPlunder.m_id)
}

// optional uint32 m_sum = 2 [default = 0];
inline bool ResPlunder::has_m_sum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResPlunder::set_has_m_sum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResPlunder::clear_has_m_sum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResPlunder::clear_m_sum() {
  m_sum_ = 0u;
  clear_has_m_sum();
}
inline ::google::protobuf::uint32 ResPlunder::m_sum() const {
  // @@protoc_insertion_point(field_get:MsgProto.ResPlunder.m_sum)
  return m_sum_;
}
inline void ResPlunder::set_m_sum(::google::protobuf::uint32 value) {
  set_has_m_sum();
  m_sum_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.ResPlunder.m_sum)
}

// optional uint32 m_lost = 3 [default = 0];
inline bool ResPlunder::has_m_lost() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ResPlunder::set_has_m_lost() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ResPlunder::clear_has_m_lost() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ResPlunder::clear_m_lost() {
  m_lost_ = 0u;
  clear_has_m_lost();
}
inline ::google::protobuf::uint32 ResPlunder::m_lost() const {
  // @@protoc_insertion_point(field_get:MsgProto.ResPlunder.m_lost)
  return m_lost_;
}
inline void ResPlunder::set_m_lost(::google::protobuf::uint32 value) {
  set_has_m_lost();
  m_lost_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.ResPlunder.m_lost)
}

// optional uint32 m_get = 4 [default = 0];
inline bool ResPlunder::has_m_get() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ResPlunder::set_has_m_get() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ResPlunder::clear_has_m_get() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ResPlunder::clear_m_get() {
  m_get_ = 0u;
  clear_has_m_get();
}
inline ::google::protobuf::uint32 ResPlunder::m_get() const {
  // @@protoc_insertion_point(field_get:MsgProto.ResPlunder.m_get)
  return m_get_;
}
inline void ResPlunder::set_m_get(::google::protobuf::uint32 value) {
  set_has_m_get();
  m_get_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.ResPlunder.m_get)
}

// -------------------------------------------------------------------

// SoldierOverView

// optional uint32 m_power_sum = 1 [default = 0];
inline bool SoldierOverView::has_m_power_sum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SoldierOverView::set_has_m_power_sum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SoldierOverView::clear_has_m_power_sum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SoldierOverView::clear_m_power_sum() {
  m_power_sum_ = 0u;
  clear_has_m_power_sum();
}
inline ::google::protobuf::uint32 SoldierOverView::m_power_sum() const {
  // @@protoc_insertion_point(field_get:MsgProto.SoldierOverView.m_power_sum)
  return m_power_sum_;
}
inline void SoldierOverView::set_m_power_sum(::google::protobuf::uint32 value) {
  set_has_m_power_sum();
  m_power_sum_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.SoldierOverView.m_power_sum)
}

// optional uint32 m_power_army = 2 [default = 0];
inline bool SoldierOverView::has_m_power_army() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SoldierOverView::set_has_m_power_army() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SoldierOverView::clear_has_m_power_army() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SoldierOverView::clear_m_power_army() {
  m_power_army_ = 0u;
  clear_has_m_power_army();
}
inline ::google::protobuf::uint32 SoldierOverView::m_power_army() const {
  // @@protoc_insertion_point(field_get:MsgProto.SoldierOverView.m_power_army)
  return m_power_army_;
}
inline void SoldierOverView::set_m_power_army(::google::protobuf::uint32 value) {
  set_has_m_power_army();
  m_power_army_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.SoldierOverView.m_power_army)
}

// optional uint32 m_power_talent = 3 [default = 0];
inline bool SoldierOverView::has_m_power_talent() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SoldierOverView::set_has_m_power_talent() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SoldierOverView::clear_has_m_power_talent() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SoldierOverView::clear_m_power_talent() {
  m_power_talent_ = 0u;
  clear_has_m_power_talent();
}
inline ::google::protobuf::uint32 SoldierOverView::m_power_talent() const {
  // @@protoc_insertion_point(field_get:MsgProto.SoldierOverView.m_power_talent)
  return m_power_talent_;
}
inline void SoldierOverView::set_m_power_talent(::google::protobuf::uint32 value) {
  set_has_m_power_talent();
  m_power_talent_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.SoldierOverView.m_power_talent)
}

// optional uint32 m_power_equip = 4 [default = 0];
inline bool SoldierOverView::has_m_power_equip() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SoldierOverView::set_has_m_power_equip() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SoldierOverView::clear_has_m_power_equip() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SoldierOverView::clear_m_power_equip() {
  m_power_equip_ = 0u;
  clear_has_m_power_equip();
}
inline ::google::protobuf::uint32 SoldierOverView::m_power_equip() const {
  // @@protoc_insertion_point(field_get:MsgProto.SoldierOverView.m_power_equip)
  return m_power_equip_;
}
inline void SoldierOverView::set_m_power_equip(::google::protobuf::uint32 value) {
  set_has_m_power_equip();
  m_power_equip_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.SoldierOverView.m_power_equip)
}

// optional uint32 m_power_tech = 5 [default = 0];
inline bool SoldierOverView::has_m_power_tech() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SoldierOverView::set_has_m_power_tech() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SoldierOverView::clear_has_m_power_tech() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SoldierOverView::clear_m_power_tech() {
  m_power_tech_ = 0u;
  clear_has_m_power_tech();
}
inline ::google::protobuf::uint32 SoldierOverView::m_power_tech() const {
  // @@protoc_insertion_point(field_get:MsgProto.SoldierOverView.m_power_tech)
  return m_power_tech_;
}
inline void SoldierOverView::set_m_power_tech(::google::protobuf::uint32 value) {
  set_has_m_power_tech();
  m_power_tech_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.SoldierOverView.m_power_tech)
}

// optional uint32 m_power_tower = 6 [default = 0];
inline bool SoldierOverView::has_m_power_tower() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SoldierOverView::set_has_m_power_tower() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SoldierOverView::clear_has_m_power_tower() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SoldierOverView::clear_m_power_tower() {
  m_power_tower_ = 0u;
  clear_has_m_power_tower();
}
inline ::google::protobuf::uint32 SoldierOverView::m_power_tower() const {
  // @@protoc_insertion_point(field_get:MsgProto.SoldierOverView.m_power_tower)
  return m_power_tower_;
}
inline void SoldierOverView::set_m_power_tower(::google::protobuf::uint32 value) {
  set_has_m_power_tower();
  m_power_tower_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.SoldierOverView.m_power_tower)
}

// optional uint32 m_power_lose = 7 [default = 0];
inline bool SoldierOverView::has_m_power_lose() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SoldierOverView::set_has_m_power_lose() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SoldierOverView::clear_has_m_power_lose() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SoldierOverView::clear_m_power_lose() {
  m_power_lose_ = 0u;
  clear_has_m_power_lose();
}
inline ::google::protobuf::uint32 SoldierOverView::m_power_lose() const {
  // @@protoc_insertion_point(field_get:MsgProto.SoldierOverView.m_power_lose)
  return m_power_lose_;
}
inline void SoldierOverView::set_m_power_lose(::google::protobuf::uint32 value) {
  set_has_m_power_lose();
  m_power_lose_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.SoldierOverView.m_power_lose)
}

// optional uint32 m_soldier_sum = 8 [default = 0];
inline bool SoldierOverView::has_m_soldier_sum() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SoldierOverView::set_has_m_soldier_sum() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SoldierOverView::clear_has_m_soldier_sum() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SoldierOverView::clear_m_soldier_sum() {
  m_soldier_sum_ = 0u;
  clear_has_m_soldier_sum();
}
inline ::google::protobuf::uint32 SoldierOverView::m_soldier_sum() const {
  // @@protoc_insertion_point(field_get:MsgProto.SoldierOverView.m_soldier_sum)
  return m_soldier_sum_;
}
inline void SoldierOverView::set_m_soldier_sum(::google::protobuf::uint32 value) {
  set_has_m_soldier_sum();
  m_soldier_sum_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.SoldierOverView.m_soldier_sum)
}

// optional uint32 m_soldier_kill = 9 [default = 0];
inline bool SoldierOverView::has_m_soldier_kill() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SoldierOverView::set_has_m_soldier_kill() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SoldierOverView::clear_has_m_soldier_kill() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SoldierOverView::clear_m_soldier_kill() {
  m_soldier_kill_ = 0u;
  clear_has_m_soldier_kill();
}
inline ::google::protobuf::uint32 SoldierOverView::m_soldier_kill() const {
  // @@protoc_insertion_point(field_get:MsgProto.SoldierOverView.m_soldier_kill)
  return m_soldier_kill_;
}
inline void SoldierOverView::set_m_soldier_kill(::google::protobuf::uint32 value) {
  set_has_m_soldier_kill();
  m_soldier_kill_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.SoldierOverView.m_soldier_kill)
}

// repeated .MsgProto.SKeyValuePair m_kills = 10;
inline int SoldierOverView::m_kills_size() const {
  return m_kills_.size();
}
inline void SoldierOverView::clear_m_kills() {
  m_kills_.Clear();
}
inline const ::MsgProto::SKeyValuePair& SoldierOverView::m_kills(int index) const {
  // @@protoc_insertion_point(field_get:MsgProto.SoldierOverView.m_kills)
  return m_kills_.Get(index);
}
inline ::MsgProto::SKeyValuePair* SoldierOverView::mutable_m_kills(int index) {
  // @@protoc_insertion_point(field_mutable:MsgProto.SoldierOverView.m_kills)
  return m_kills_.Mutable(index);
}
inline ::MsgProto::SKeyValuePair* SoldierOverView::add_m_kills() {
  // @@protoc_insertion_point(field_add:MsgProto.SoldierOverView.m_kills)
  return m_kills_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgProto::SKeyValuePair >&
SoldierOverView::m_kills() const {
  // @@protoc_insertion_point(field_list:MsgProto.SoldierOverView.m_kills)
  return m_kills_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgProto::SKeyValuePair >*
SoldierOverView::mutable_m_kills() {
  // @@protoc_insertion_point(field_mutable_list:MsgProto.SoldierOverView.m_kills)
  return &m_kills_;
}

// optional uint32 m_soldier_die = 11 [default = 0];
inline bool SoldierOverView::has_m_soldier_die() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void SoldierOverView::set_has_m_soldier_die() {
  _has_bits_[0] |= 0x00000400u;
}
inline void SoldierOverView::clear_has_m_soldier_die() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void SoldierOverView::clear_m_soldier_die() {
  m_soldier_die_ = 0u;
  clear_has_m_soldier_die();
}
inline ::google::protobuf::uint32 SoldierOverView::m_soldier_die() const {
  // @@protoc_insertion_point(field_get:MsgProto.SoldierOverView.m_soldier_die)
  return m_soldier_die_;
}
inline void SoldierOverView::set_m_soldier_die(::google::protobuf::uint32 value) {
  set_has_m_soldier_die();
  m_soldier_die_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.SoldierOverView.m_soldier_die)
}

// repeated .MsgProto.SKeyValuePair m_dies = 12;
inline int SoldierOverView::m_dies_size() const {
  return m_dies_.size();
}
inline void SoldierOverView::clear_m_dies() {
  m_dies_.Clear();
}
inline const ::MsgProto::SKeyValuePair& SoldierOverView::m_dies(int index) const {
  // @@protoc_insertion_point(field_get:MsgProto.SoldierOverView.m_dies)
  return m_dies_.Get(index);
}
inline ::MsgProto::SKeyValuePair* SoldierOverView::mutable_m_dies(int index) {
  // @@protoc_insertion_point(field_mutable:MsgProto.SoldierOverView.m_dies)
  return m_dies_.Mutable(index);
}
inline ::MsgProto::SKeyValuePair* SoldierOverView::add_m_dies() {
  // @@protoc_insertion_point(field_add:MsgProto.SoldierOverView.m_dies)
  return m_dies_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgProto::SKeyValuePair >&
SoldierOverView::m_dies() const {
  // @@protoc_insertion_point(field_list:MsgProto.SoldierOverView.m_dies)
  return m_dies_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgProto::SKeyValuePair >*
SoldierOverView::mutable_m_dies() {
  // @@protoc_insertion_point(field_mutable_list:MsgProto.SoldierOverView.m_dies)
  return &m_dies_;
}

// optional uint32 m_soldier_hurt = 13 [default = 0];
inline bool SoldierOverView::has_m_soldier_hurt() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void SoldierOverView::set_has_m_soldier_hurt() {
  _has_bits_[0] |= 0x00001000u;
}
inline void SoldierOverView::clear_has_m_soldier_hurt() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void SoldierOverView::clear_m_soldier_hurt() {
  m_soldier_hurt_ = 0u;
  clear_has_m_soldier_hurt();
}
inline ::google::protobuf::uint32 SoldierOverView::m_soldier_hurt() const {
  // @@protoc_insertion_point(field_get:MsgProto.SoldierOverView.m_soldier_hurt)
  return m_soldier_hurt_;
}
inline void SoldierOverView::set_m_soldier_hurt(::google::protobuf::uint32 value) {
  set_has_m_soldier_hurt();
  m_soldier_hurt_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.SoldierOverView.m_soldier_hurt)
}

// repeated .MsgProto.SKeyValuePair m_hurts = 14;
inline int SoldierOverView::m_hurts_size() const {
  return m_hurts_.size();
}
inline void SoldierOverView::clear_m_hurts() {
  m_hurts_.Clear();
}
inline const ::MsgProto::SKeyValuePair& SoldierOverView::m_hurts(int index) const {
  // @@protoc_insertion_point(field_get:MsgProto.SoldierOverView.m_hurts)
  return m_hurts_.Get(index);
}
inline ::MsgProto::SKeyValuePair* SoldierOverView::mutable_m_hurts(int index) {
  // @@protoc_insertion_point(field_mutable:MsgProto.SoldierOverView.m_hurts)
  return m_hurts_.Mutable(index);
}
inline ::MsgProto::SKeyValuePair* SoldierOverView::add_m_hurts() {
  // @@protoc_insertion_point(field_add:MsgProto.SoldierOverView.m_hurts)
  return m_hurts_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgProto::SKeyValuePair >&
SoldierOverView::m_hurts() const {
  // @@protoc_insertion_point(field_list:MsgProto.SoldierOverView.m_hurts)
  return m_hurts_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgProto::SKeyValuePair >*
SoldierOverView::mutable_m_hurts() {
  // @@protoc_insertion_point(field_mutable_list:MsgProto.SoldierOverView.m_hurts)
  return &m_hurts_;
}

// optional uint32 m_soldier_live = 15 [default = 0];
inline bool SoldierOverView::has_m_soldier_live() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void SoldierOverView::set_has_m_soldier_live() {
  _has_bits_[0] |= 0x00004000u;
}
inline void SoldierOverView::clear_has_m_soldier_live() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void SoldierOverView::clear_m_soldier_live() {
  m_soldier_live_ = 0u;
  clear_has_m_soldier_live();
}
inline ::google::protobuf::uint32 SoldierOverView::m_soldier_live() const {
  // @@protoc_insertion_point(field_get:MsgProto.SoldierOverView.m_soldier_live)
  return m_soldier_live_;
}
inline void SoldierOverView::set_m_soldier_live(::google::protobuf::uint32 value) {
  set_has_m_soldier_live();
  m_soldier_live_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.SoldierOverView.m_soldier_live)
}

// repeated .MsgProto.SKeyValuePair m_lives = 16;
inline int SoldierOverView::m_lives_size() const {
  return m_lives_.size();
}
inline void SoldierOverView::clear_m_lives() {
  m_lives_.Clear();
}
inline const ::MsgProto::SKeyValuePair& SoldierOverView::m_lives(int index) const {
  // @@protoc_insertion_point(field_get:MsgProto.SoldierOverView.m_lives)
  return m_lives_.Get(index);
}
inline ::MsgProto::SKeyValuePair* SoldierOverView::mutable_m_lives(int index) {
  // @@protoc_insertion_point(field_mutable:MsgProto.SoldierOverView.m_lives)
  return m_lives_.Mutable(index);
}
inline ::MsgProto::SKeyValuePair* SoldierOverView::add_m_lives() {
  // @@protoc_insertion_point(field_add:MsgProto.SoldierOverView.m_lives)
  return m_lives_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgProto::SKeyValuePair >&
SoldierOverView::m_lives() const {
  // @@protoc_insertion_point(field_list:MsgProto.SoldierOverView.m_lives)
  return m_lives_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgProto::SKeyValuePair >*
SoldierOverView::mutable_m_lives() {
  // @@protoc_insertion_point(field_mutable_list:MsgProto.SoldierOverView.m_lives)
  return &m_lives_;
}

// -------------------------------------------------------------------

// SoldierDetail

// optional uint32 m_soldierid = 1 [default = 0];
inline bool SoldierDetail::has_m_soldierid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SoldierDetail::set_has_m_soldierid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SoldierDetail::clear_has_m_soldierid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SoldierDetail::clear_m_soldierid() {
  m_soldierid_ = 0u;
  clear_has_m_soldierid();
}
inline ::google::protobuf::uint32 SoldierDetail::m_soldierid() const {
  // @@protoc_insertion_point(field_get:MsgProto.SoldierDetail.m_soldierid)
  return m_soldierid_;
}
inline void SoldierDetail::set_m_soldierid(::google::protobuf::uint32 value) {
  set_has_m_soldierid();
  m_soldierid_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.SoldierDetail.m_soldierid)
}

// optional uint32 m_num = 2 [default = 0];
inline bool SoldierDetail::has_m_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SoldierDetail::set_has_m_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SoldierDetail::clear_has_m_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SoldierDetail::clear_m_num() {
  m_num_ = 0u;
  clear_has_m_num();
}
inline ::google::protobuf::uint32 SoldierDetail::m_num() const {
  // @@protoc_insertion_point(field_get:MsgProto.SoldierDetail.m_num)
  return m_num_;
}
inline void SoldierDetail::set_m_num(::google::protobuf::uint32 value) {
  set_has_m_num();
  m_num_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.SoldierDetail.m_num)
}

// optional uint32 m_die = 3 [default = 0];
inline bool SoldierDetail::has_m_die() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SoldierDetail::set_has_m_die() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SoldierDetail::clear_has_m_die() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SoldierDetail::clear_m_die() {
  m_die_ = 0u;
  clear_has_m_die();
}
inline ::google::protobuf::uint32 SoldierDetail::m_die() const {
  // @@protoc_insertion_point(field_get:MsgProto.SoldierDetail.m_die)
  return m_die_;
}
inline void SoldierDetail::set_m_die(::google::protobuf::uint32 value) {
  set_has_m_die();
  m_die_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.SoldierDetail.m_die)
}

// optional uint32 m_hurt = 4 [default = 0];
inline bool SoldierDetail::has_m_hurt() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SoldierDetail::set_has_m_hurt() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SoldierDetail::clear_has_m_hurt() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SoldierDetail::clear_m_hurt() {
  m_hurt_ = 0u;
  clear_has_m_hurt();
}
inline ::google::protobuf::uint32 SoldierDetail::m_hurt() const {
  // @@protoc_insertion_point(field_get:MsgProto.SoldierDetail.m_hurt)
  return m_hurt_;
}
inline void SoldierDetail::set_m_hurt(::google::protobuf::uint32 value) {
  set_has_m_hurt();
  m_hurt_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.SoldierDetail.m_hurt)
}

// optional uint32 m_live = 5 [default = 0];
inline bool SoldierDetail::has_m_live() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SoldierDetail::set_has_m_live() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SoldierDetail::clear_has_m_live() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SoldierDetail::clear_m_live() {
  m_live_ = 0u;
  clear_has_m_live();
}
inline ::google::protobuf::uint32 SoldierDetail::m_live() const {
  // @@protoc_insertion_point(field_get:MsgProto.SoldierDetail.m_live)
  return m_live_;
}
inline void SoldierDetail::set_m_live(::google::protobuf::uint32 value) {
  set_has_m_live();
  m_live_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.SoldierDetail.m_live)
}

// optional uint32 m_damage = 6 [default = 0];
inline bool SoldierDetail::has_m_damage() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SoldierDetail::set_has_m_damage() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SoldierDetail::clear_has_m_damage() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SoldierDetail::clear_m_damage() {
  m_damage_ = 0u;
  clear_has_m_damage();
}
inline ::google::protobuf::uint32 SoldierDetail::m_damage() const {
  // @@protoc_insertion_point(field_get:MsgProto.SoldierDetail.m_damage)
  return m_damage_;
}
inline void SoldierDetail::set_m_damage(::google::protobuf::uint32 value) {
  set_has_m_damage();
  m_damage_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.SoldierDetail.m_damage)
}

// optional uint32 m_attack_com = 7 [default = 0];
inline bool SoldierDetail::has_m_attack_com() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SoldierDetail::set_has_m_attack_com() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SoldierDetail::clear_has_m_attack_com() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SoldierDetail::clear_m_attack_com() {
  m_attack_com_ = 0u;
  clear_has_m_attack_com();
}
inline ::google::protobuf::uint32 SoldierDetail::m_attack_com() const {
  // @@protoc_insertion_point(field_get:MsgProto.SoldierDetail.m_attack_com)
  return m_attack_com_;
}
inline void SoldierDetail::set_m_attack_com(::google::protobuf::uint32 value) {
  set_has_m_attack_com();
  m_attack_com_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.SoldierDetail.m_attack_com)
}

// optional uint32 m_attack_skill = 8 [default = 0];
inline bool SoldierDetail::has_m_attack_skill() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SoldierDetail::set_has_m_attack_skill() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SoldierDetail::clear_has_m_attack_skill() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SoldierDetail::clear_m_attack_skill() {
  m_attack_skill_ = 0u;
  clear_has_m_attack_skill();
}
inline ::google::protobuf::uint32 SoldierDetail::m_attack_skill() const {
  // @@protoc_insertion_point(field_get:MsgProto.SoldierDetail.m_attack_skill)
  return m_attack_skill_;
}
inline void SoldierDetail::set_m_attack_skill(::google::protobuf::uint32 value) {
  set_has_m_attack_skill();
  m_attack_skill_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.SoldierDetail.m_attack_skill)
}

// optional uint32 m_damage_com = 9 [default = 0];
inline bool SoldierDetail::has_m_damage_com() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SoldierDetail::set_has_m_damage_com() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SoldierDetail::clear_has_m_damage_com() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SoldierDetail::clear_m_damage_com() {
  m_damage_com_ = 0u;
  clear_has_m_damage_com();
}
inline ::google::protobuf::uint32 SoldierDetail::m_damage_com() const {
  // @@protoc_insertion_point(field_get:MsgProto.SoldierDetail.m_damage_com)
  return m_damage_com_;
}
inline void SoldierDetail::set_m_damage_com(::google::protobuf::uint32 value) {
  set_has_m_damage_com();
  m_damage_com_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.SoldierDetail.m_damage_com)
}

// optional uint32 m_damage_skill = 10 [default = 0];
inline bool SoldierDetail::has_m_damage_skill() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SoldierDetail::set_has_m_damage_skill() {
  _has_bits_[0] |= 0x00000200u;
}
inline void SoldierDetail::clear_has_m_damage_skill() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void SoldierDetail::clear_m_damage_skill() {
  m_damage_skill_ = 0u;
  clear_has_m_damage_skill();
}
inline ::google::protobuf::uint32 SoldierDetail::m_damage_skill() const {
  // @@protoc_insertion_point(field_get:MsgProto.SoldierDetail.m_damage_skill)
  return m_damage_skill_;
}
inline void SoldierDetail::set_m_damage_skill(::google::protobuf::uint32 value) {
  set_has_m_damage_skill();
  m_damage_skill_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.SoldierDetail.m_damage_skill)
}

// repeated .MsgProto.SKeyValuePair m_damages = 11;
inline int SoldierDetail::m_damages_size() const {
  return m_damages_.size();
}
inline void SoldierDetail::clear_m_damages() {
  m_damages_.Clear();
}
inline const ::MsgProto::SKeyValuePair& SoldierDetail::m_damages(int index) const {
  // @@protoc_insertion_point(field_get:MsgProto.SoldierDetail.m_damages)
  return m_damages_.Get(index);
}
inline ::MsgProto::SKeyValuePair* SoldierDetail::mutable_m_damages(int index) {
  // @@protoc_insertion_point(field_mutable:MsgProto.SoldierDetail.m_damages)
  return m_damages_.Mutable(index);
}
inline ::MsgProto::SKeyValuePair* SoldierDetail::add_m_damages() {
  // @@protoc_insertion_point(field_add:MsgProto.SoldierDetail.m_damages)
  return m_damages_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgProto::SKeyValuePair >&
SoldierDetail::m_damages() const {
  // @@protoc_insertion_point(field_list:MsgProto.SoldierDetail.m_damages)
  return m_damages_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgProto::SKeyValuePair >*
SoldierDetail::mutable_m_damages() {
  // @@protoc_insertion_point(field_mutable_list:MsgProto.SoldierDetail.m_damages)
  return &m_damages_;
}

// repeated .MsgProto.SKeyValuePair m_kills = 12;
inline int SoldierDetail::m_kills_size() const {
  return m_kills_.size();
}
inline void SoldierDetail::clear_m_kills() {
  m_kills_.Clear();
}
inline const ::MsgProto::SKeyValuePair& SoldierDetail::m_kills(int index) const {
  // @@protoc_insertion_point(field_get:MsgProto.SoldierDetail.m_kills)
  return m_kills_.Get(index);
}
inline ::MsgProto::SKeyValuePair* SoldierDetail::mutable_m_kills(int index) {
  // @@protoc_insertion_point(field_mutable:MsgProto.SoldierDetail.m_kills)
  return m_kills_.Mutable(index);
}
inline ::MsgProto::SKeyValuePair* SoldierDetail::add_m_kills() {
  // @@protoc_insertion_point(field_add:MsgProto.SoldierDetail.m_kills)
  return m_kills_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgProto::SKeyValuePair >&
SoldierDetail::m_kills() const {
  // @@protoc_insertion_point(field_list:MsgProto.SoldierDetail.m_kills)
  return m_kills_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgProto::SKeyValuePair >*
SoldierDetail::mutable_m_kills() {
  // @@protoc_insertion_point(field_mutable_list:MsgProto.SoldierDetail.m_kills)
  return &m_kills_;
}

// -------------------------------------------------------------------

// ArmyFightDetail

// repeated .MsgProto.SoldierDetail m_soldiers = 1;
inline int ArmyFightDetail::m_soldiers_size() const {
  return m_soldiers_.size();
}
inline void ArmyFightDetail::clear_m_soldiers() {
  m_soldiers_.Clear();
}
inline const ::MsgProto::SoldierDetail& ArmyFightDetail::m_soldiers(int index) const {
  // @@protoc_insertion_point(field_get:MsgProto.ArmyFightDetail.m_soldiers)
  return m_soldiers_.Get(index);
}
inline ::MsgProto::SoldierDetail* ArmyFightDetail::mutable_m_soldiers(int index) {
  // @@protoc_insertion_point(field_mutable:MsgProto.ArmyFightDetail.m_soldiers)
  return m_soldiers_.Mutable(index);
}
inline ::MsgProto::SoldierDetail* ArmyFightDetail::add_m_soldiers() {
  // @@protoc_insertion_point(field_add:MsgProto.ArmyFightDetail.m_soldiers)
  return m_soldiers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgProto::SoldierDetail >&
ArmyFightDetail::m_soldiers() const {
  // @@protoc_insertion_point(field_list:MsgProto.ArmyFightDetail.m_soldiers)
  return m_soldiers_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgProto::SoldierDetail >*
ArmyFightDetail::mutable_m_soldiers() {
  // @@protoc_insertion_point(field_mutable_list:MsgProto.ArmyFightDetail.m_soldiers)
  return &m_soldiers_;
}

// -------------------------------------------------------------------

// FightReport

// optional .MsgProto.FightReport.EResult m_result = 1 [default = city_attack_win];
inline bool FightReport::has_m_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FightReport::set_has_m_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FightReport::clear_has_m_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FightReport::clear_m_result() {
  m_result_ = 1;
  clear_has_m_result();
}
inline ::MsgProto::FightReport_EResult FightReport::m_result() const {
  // @@protoc_insertion_point(field_get:MsgProto.FightReport.m_result)
  return static_cast< ::MsgProto::FightReport_EResult >(m_result_);
}
inline void FightReport::set_m_result(::MsgProto::FightReport_EResult value) {
  assert(::MsgProto::FightReport_EResult_IsValid(value));
  set_has_m_result();
  m_result_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.FightReport.m_result)
}

// optional .MsgProto.FightReport.EFightType m_type = 2 [default = eft_tcity];
inline bool FightReport::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FightReport::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FightReport::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FightReport::clear_m_type() {
  m_type_ = 1;
  clear_has_m_type();
}
inline ::MsgProto::FightReport_EFightType FightReport::m_type() const {
  // @@protoc_insertion_point(field_get:MsgProto.FightReport.m_type)
  return static_cast< ::MsgProto::FightReport_EFightType >(m_type_);
}
inline void FightReport::set_m_type(::MsgProto::FightReport_EFightType value) {
  assert(::MsgProto::FightReport_EFightType_IsValid(value));
  set_has_m_type();
  m_type_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.FightReport.m_type)
}

// optional .MsgProto.WorldPos m_pos_from = 3;
inline bool FightReport::has_m_pos_from() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FightReport::set_has_m_pos_from() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FightReport::clear_has_m_pos_from() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FightReport::clear_m_pos_from() {
  if (m_pos_from_ != NULL) m_pos_from_->::MsgProto::WorldPos::Clear();
  clear_has_m_pos_from();
}
inline const ::MsgProto::WorldPos& FightReport::m_pos_from() const {
  // @@protoc_insertion_point(field_get:MsgProto.FightReport.m_pos_from)
  return m_pos_from_ != NULL ? *m_pos_from_ : *default_instance_->m_pos_from_;
}
inline ::MsgProto::WorldPos* FightReport::mutable_m_pos_from() {
  set_has_m_pos_from();
  if (m_pos_from_ == NULL) m_pos_from_ = new ::MsgProto::WorldPos;
  // @@protoc_insertion_point(field_mutable:MsgProto.FightReport.m_pos_from)
  return m_pos_from_;
}
inline ::MsgProto::WorldPos* FightReport::release_m_pos_from() {
  clear_has_m_pos_from();
  ::MsgProto::WorldPos* temp = m_pos_from_;
  m_pos_from_ = NULL;
  return temp;
}
inline void FightReport::set_allocated_m_pos_from(::MsgProto::WorldPos* m_pos_from) {
  delete m_pos_from_;
  m_pos_from_ = m_pos_from;
  if (m_pos_from) {
    set_has_m_pos_from();
  } else {
    clear_has_m_pos_from();
  }
  // @@protoc_insertion_point(field_set_allocated:MsgProto.FightReport.m_pos_from)
}

// optional uint32 m_time = 4 [default = 0];
inline bool FightReport::has_m_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FightReport::set_has_m_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FightReport::clear_has_m_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FightReport::clear_m_time() {
  m_time_ = 0u;
  clear_has_m_time();
}
inline ::google::protobuf::uint32 FightReport::m_time() const {
  // @@protoc_insertion_point(field_get:MsgProto.FightReport.m_time)
  return m_time_;
}
inline void FightReport::set_m_time(::google::protobuf::uint32 value) {
  set_has_m_time();
  m_time_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.FightReport.m_time)
}

// optional uint32 m_round = 5 [default = 0];
inline bool FightReport::has_m_round() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FightReport::set_has_m_round() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FightReport::clear_has_m_round() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FightReport::clear_m_round() {
  m_round_ = 0u;
  clear_has_m_round();
}
inline ::google::protobuf::uint32 FightReport::m_round() const {
  // @@protoc_insertion_point(field_get:MsgProto.FightReport.m_round)
  return m_round_;
}
inline void FightReport::set_m_round(::google::protobuf::uint32 value) {
  set_has_m_round();
  m_round_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.FightReport.m_round)
}

// optional .MsgProto.RoleFightTitle m_attacker = 6;
inline bool FightReport::has_m_attacker() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FightReport::set_has_m_attacker() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FightReport::clear_has_m_attacker() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FightReport::clear_m_attacker() {
  if (m_attacker_ != NULL) m_attacker_->::MsgProto::RoleFightTitle::Clear();
  clear_has_m_attacker();
}
inline const ::MsgProto::RoleFightTitle& FightReport::m_attacker() const {
  // @@protoc_insertion_point(field_get:MsgProto.FightReport.m_attacker)
  return m_attacker_ != NULL ? *m_attacker_ : *default_instance_->m_attacker_;
}
inline ::MsgProto::RoleFightTitle* FightReport::mutable_m_attacker() {
  set_has_m_attacker();
  if (m_attacker_ == NULL) m_attacker_ = new ::MsgProto::RoleFightTitle;
  // @@protoc_insertion_point(field_mutable:MsgProto.FightReport.m_attacker)
  return m_attacker_;
}
inline ::MsgProto::RoleFightTitle* FightReport::release_m_attacker() {
  clear_has_m_attacker();
  ::MsgProto::RoleFightTitle* temp = m_attacker_;
  m_attacker_ = NULL;
  return temp;
}
inline void FightReport::set_allocated_m_attacker(::MsgProto::RoleFightTitle* m_attacker) {
  delete m_attacker_;
  m_attacker_ = m_attacker;
  if (m_attacker) {
    set_has_m_attacker();
  } else {
    clear_has_m_attacker();
  }
  // @@protoc_insertion_point(field_set_allocated:MsgProto.FightReport.m_attacker)
}

// optional .MsgProto.RoleFightTitle m_defer = 7;
inline bool FightReport::has_m_defer() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void FightReport::set_has_m_defer() {
  _has_bits_[0] |= 0x00000040u;
}
inline void FightReport::clear_has_m_defer() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void FightReport::clear_m_defer() {
  if (m_defer_ != NULL) m_defer_->::MsgProto::RoleFightTitle::Clear();
  clear_has_m_defer();
}
inline const ::MsgProto::RoleFightTitle& FightReport::m_defer() const {
  // @@protoc_insertion_point(field_get:MsgProto.FightReport.m_defer)
  return m_defer_ != NULL ? *m_defer_ : *default_instance_->m_defer_;
}
inline ::MsgProto::RoleFightTitle* FightReport::mutable_m_defer() {
  set_has_m_defer();
  if (m_defer_ == NULL) m_defer_ = new ::MsgProto::RoleFightTitle;
  // @@protoc_insertion_point(field_mutable:MsgProto.FightReport.m_defer)
  return m_defer_;
}
inline ::MsgProto::RoleFightTitle* FightReport::release_m_defer() {
  clear_has_m_defer();
  ::MsgProto::RoleFightTitle* temp = m_defer_;
  m_defer_ = NULL;
  return temp;
}
inline void FightReport::set_allocated_m_defer(::MsgProto::RoleFightTitle* m_defer) {
  delete m_defer_;
  m_defer_ = m_defer;
  if (m_defer) {
    set_has_m_defer();
  } else {
    clear_has_m_defer();
  }
  // @@protoc_insertion_point(field_set_allocated:MsgProto.FightReport.m_defer)
}

// repeated .MsgProto.ResPlunder m_plunder = 8;
inline int FightReport::m_plunder_size() const {
  return m_plunder_.size();
}
inline void FightReport::clear_m_plunder() {
  m_plunder_.Clear();
}
inline const ::MsgProto::ResPlunder& FightReport::m_plunder(int index) const {
  // @@protoc_insertion_point(field_get:MsgProto.FightReport.m_plunder)
  return m_plunder_.Get(index);
}
inline ::MsgProto::ResPlunder* FightReport::mutable_m_plunder(int index) {
  // @@protoc_insertion_point(field_mutable:MsgProto.FightReport.m_plunder)
  return m_plunder_.Mutable(index);
}
inline ::MsgProto::ResPlunder* FightReport::add_m_plunder() {
  // @@protoc_insertion_point(field_add:MsgProto.FightReport.m_plunder)
  return m_plunder_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgProto::ResPlunder >&
FightReport::m_plunder() const {
  // @@protoc_insertion_point(field_list:MsgProto.FightReport.m_plunder)
  return m_plunder_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgProto::ResPlunder >*
FightReport::mutable_m_plunder() {
  // @@protoc_insertion_point(field_mutable_list:MsgProto.FightReport.m_plunder)
  return &m_plunder_;
}

// optional .MsgProto.SoldierOverView m_att_view = 9;
inline bool FightReport::has_m_att_view() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void FightReport::set_has_m_att_view() {
  _has_bits_[0] |= 0x00000100u;
}
inline void FightReport::clear_has_m_att_view() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void FightReport::clear_m_att_view() {
  if (m_att_view_ != NULL) m_att_view_->::MsgProto::SoldierOverView::Clear();
  clear_has_m_att_view();
}
inline const ::MsgProto::SoldierOverView& FightReport::m_att_view() const {
  // @@protoc_insertion_point(field_get:MsgProto.FightReport.m_att_view)
  return m_att_view_ != NULL ? *m_att_view_ : *default_instance_->m_att_view_;
}
inline ::MsgProto::SoldierOverView* FightReport::mutable_m_att_view() {
  set_has_m_att_view();
  if (m_att_view_ == NULL) m_att_view_ = new ::MsgProto::SoldierOverView;
  // @@protoc_insertion_point(field_mutable:MsgProto.FightReport.m_att_view)
  return m_att_view_;
}
inline ::MsgProto::SoldierOverView* FightReport::release_m_att_view() {
  clear_has_m_att_view();
  ::MsgProto::SoldierOverView* temp = m_att_view_;
  m_att_view_ = NULL;
  return temp;
}
inline void FightReport::set_allocated_m_att_view(::MsgProto::SoldierOverView* m_att_view) {
  delete m_att_view_;
  m_att_view_ = m_att_view;
  if (m_att_view) {
    set_has_m_att_view();
  } else {
    clear_has_m_att_view();
  }
  // @@protoc_insertion_point(field_set_allocated:MsgProto.FightReport.m_att_view)
}

// optional .MsgProto.SoldierOverView m_def_view = 10;
inline bool FightReport::has_m_def_view() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void FightReport::set_has_m_def_view() {
  _has_bits_[0] |= 0x00000200u;
}
inline void FightReport::clear_has_m_def_view() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void FightReport::clear_m_def_view() {
  if (m_def_view_ != NULL) m_def_view_->::MsgProto::SoldierOverView::Clear();
  clear_has_m_def_view();
}
inline const ::MsgProto::SoldierOverView& FightReport::m_def_view() const {
  // @@protoc_insertion_point(field_get:MsgProto.FightReport.m_def_view)
  return m_def_view_ != NULL ? *m_def_view_ : *default_instance_->m_def_view_;
}
inline ::MsgProto::SoldierOverView* FightReport::mutable_m_def_view() {
  set_has_m_def_view();
  if (m_def_view_ == NULL) m_def_view_ = new ::MsgProto::SoldierOverView;
  // @@protoc_insertion_point(field_mutable:MsgProto.FightReport.m_def_view)
  return m_def_view_;
}
inline ::MsgProto::SoldierOverView* FightReport::release_m_def_view() {
  clear_has_m_def_view();
  ::MsgProto::SoldierOverView* temp = m_def_view_;
  m_def_view_ = NULL;
  return temp;
}
inline void FightReport::set_allocated_m_def_view(::MsgProto::SoldierOverView* m_def_view) {
  delete m_def_view_;
  m_def_view_ = m_def_view;
  if (m_def_view) {
    set_has_m_def_view();
  } else {
    clear_has_m_def_view();
  }
  // @@protoc_insertion_point(field_set_allocated:MsgProto.FightReport.m_def_view)
}

// repeated .MsgProto.ArmyFightDetail m_att_details = 11;
inline int FightReport::m_att_details_size() const {
  return m_att_details_.size();
}
inline void FightReport::clear_m_att_details() {
  m_att_details_.Clear();
}
inline const ::MsgProto::ArmyFightDetail& FightReport::m_att_details(int index) const {
  // @@protoc_insertion_point(field_get:MsgProto.FightReport.m_att_details)
  return m_att_details_.Get(index);
}
inline ::MsgProto::ArmyFightDetail* FightReport::mutable_m_att_details(int index) {
  // @@protoc_insertion_point(field_mutable:MsgProto.FightReport.m_att_details)
  return m_att_details_.Mutable(index);
}
inline ::MsgProto::ArmyFightDetail* FightReport::add_m_att_details() {
  // @@protoc_insertion_point(field_add:MsgProto.FightReport.m_att_details)
  return m_att_details_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgProto::ArmyFightDetail >&
FightReport::m_att_details() const {
  // @@protoc_insertion_point(field_list:MsgProto.FightReport.m_att_details)
  return m_att_details_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgProto::ArmyFightDetail >*
FightReport::mutable_m_att_details() {
  // @@protoc_insertion_point(field_mutable_list:MsgProto.FightReport.m_att_details)
  return &m_att_details_;
}

// repeated .MsgProto.ArmyFightDetail m_def_details = 12;
inline int FightReport::m_def_details_size() const {
  return m_def_details_.size();
}
inline void FightReport::clear_m_def_details() {
  m_def_details_.Clear();
}
inline const ::MsgProto::ArmyFightDetail& FightReport::m_def_details(int index) const {
  // @@protoc_insertion_point(field_get:MsgProto.FightReport.m_def_details)
  return m_def_details_.Get(index);
}
inline ::MsgProto::ArmyFightDetail* FightReport::mutable_m_def_details(int index) {
  // @@protoc_insertion_point(field_mutable:MsgProto.FightReport.m_def_details)
  return m_def_details_.Mutable(index);
}
inline ::MsgProto::ArmyFightDetail* FightReport::add_m_def_details() {
  // @@protoc_insertion_point(field_add:MsgProto.FightReport.m_def_details)
  return m_def_details_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgProto::ArmyFightDetail >&
FightReport::m_def_details() const {
  // @@protoc_insertion_point(field_list:MsgProto.FightReport.m_def_details)
  return m_def_details_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgProto::ArmyFightDetail >*
FightReport::mutable_m_def_details() {
  // @@protoc_insertion_point(field_mutable_list:MsgProto.FightReport.m_def_details)
  return &m_def_details_;
}

// -------------------------------------------------------------------

// ResReport

// optional uint32 m_tableid = 1;
inline bool ResReport::has_m_tableid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResReport::set_has_m_tableid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResReport::clear_has_m_tableid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResReport::clear_m_tableid() {
  m_tableid_ = 0u;
  clear_has_m_tableid();
}
inline ::google::protobuf::uint32 ResReport::m_tableid() const {
  // @@protoc_insertion_point(field_get:MsgProto.ResReport.m_tableid)
  return m_tableid_;
}
inline void ResReport::set_m_tableid(::google::protobuf::uint32 value) {
  set_has_m_tableid();
  m_tableid_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.ResReport.m_tableid)
}

// optional uint32 m_num = 2;
inline bool ResReport::has_m_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResReport::set_has_m_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResReport::clear_has_m_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResReport::clear_m_num() {
  m_num_ = 0u;
  clear_has_m_num();
}
inline ::google::protobuf::uint32 ResReport::m_num() const {
  // @@protoc_insertion_point(field_get:MsgProto.ResReport.m_num)
  return m_num_;
}
inline void ResReport::set_m_num(::google::protobuf::uint32 value) {
  set_has_m_num();
  m_num_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.ResReport.m_num)
}

// optional .MsgProto.WorldPos m_pos = 3;
inline bool ResReport::has_m_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ResReport::set_has_m_pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ResReport::clear_has_m_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ResReport::clear_m_pos() {
  if (m_pos_ != NULL) m_pos_->::MsgProto::WorldPos::Clear();
  clear_has_m_pos();
}
inline const ::MsgProto::WorldPos& ResReport::m_pos() const {
  // @@protoc_insertion_point(field_get:MsgProto.ResReport.m_pos)
  return m_pos_ != NULL ? *m_pos_ : *default_instance_->m_pos_;
}
inline ::MsgProto::WorldPos* ResReport::mutable_m_pos() {
  set_has_m_pos();
  if (m_pos_ == NULL) m_pos_ = new ::MsgProto::WorldPos;
  // @@protoc_insertion_point(field_mutable:MsgProto.ResReport.m_pos)
  return m_pos_;
}
inline ::MsgProto::WorldPos* ResReport::release_m_pos() {
  clear_has_m_pos();
  ::MsgProto::WorldPos* temp = m_pos_;
  m_pos_ = NULL;
  return temp;
}
inline void ResReport::set_allocated_m_pos(::MsgProto::WorldPos* m_pos) {
  delete m_pos_;
  m_pos_ = m_pos;
  if (m_pos) {
    set_has_m_pos();
  } else {
    clear_has_m_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:MsgProto.ResReport.m_pos)
}

// optional uint64 m_timestamp = 4 [default = 0];
inline bool ResReport::has_m_timestamp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ResReport::set_has_m_timestamp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ResReport::clear_has_m_timestamp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ResReport::clear_m_timestamp() {
  m_timestamp_ = GOOGLE_ULONGLONG(0);
  clear_has_m_timestamp();
}
inline ::google::protobuf::uint64 ResReport::m_timestamp() const {
  // @@protoc_insertion_point(field_get:MsgProto.ResReport.m_timestamp)
  return m_timestamp_;
}
inline void ResReport::set_m_timestamp(::google::protobuf::uint64 value) {
  set_has_m_timestamp();
  m_timestamp_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.ResReport.m_timestamp)
}

// -------------------------------------------------------------------

// FightReportMini

// optional uint32 m_id = 1 [default = 0];
inline bool FightReportMini::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FightReportMini::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FightReportMini::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FightReportMini::clear_m_id() {
  m_id_ = 0u;
  clear_has_m_id();
}
inline ::google::protobuf::uint32 FightReportMini::m_id() const {
  // @@protoc_insertion_point(field_get:MsgProto.FightReportMini.m_id)
  return m_id_;
}
inline void FightReportMini::set_m_id(::google::protobuf::uint32 value) {
  set_has_m_id();
  m_id_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.FightReportMini.m_id)
}

// optional .MsgProto.FightReportMini.EResult m_type = 2 [default = fight_ini];
inline bool FightReportMini::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FightReportMini::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FightReportMini::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FightReportMini::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::MsgProto::FightReportMini_EResult FightReportMini::m_type() const {
  // @@protoc_insertion_point(field_get:MsgProto.FightReportMini.m_type)
  return static_cast< ::MsgProto::FightReportMini_EResult >(m_type_);
}
inline void FightReportMini::set_m_type(::MsgProto::FightReportMini_EResult value) {
  assert(::MsgProto::FightReportMini_EResult_IsValid(value));
  set_has_m_type();
  m_type_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.FightReportMini.m_type)
}

// optional uint32 m_lose = 3 [default = 0];
inline bool FightReportMini::has_m_lose() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FightReportMini::set_has_m_lose() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FightReportMini::clear_has_m_lose() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FightReportMini::clear_m_lose() {
  m_lose_ = 0u;
  clear_has_m_lose();
}
inline ::google::protobuf::uint32 FightReportMini::m_lose() const {
  // @@protoc_insertion_point(field_get:MsgProto.FightReportMini.m_lose)
  return m_lose_;
}
inline void FightReportMini::set_m_lose(::google::protobuf::uint32 value) {
  set_has_m_lose();
  m_lose_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.FightReportMini.m_lose)
}

// optional uint32 m_kill = 4 [default = 0];
inline bool FightReportMini::has_m_kill() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FightReportMini::set_has_m_kill() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FightReportMini::clear_has_m_kill() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FightReportMini::clear_m_kill() {
  m_kill_ = 0u;
  clear_has_m_kill();
}
inline ::google::protobuf::uint32 FightReportMini::m_kill() const {
  // @@protoc_insertion_point(field_get:MsgProto.FightReportMini.m_kill)
  return m_kill_;
}
inline void FightReportMini::set_m_kill(::google::protobuf::uint32 value) {
  set_has_m_kill();
  m_kill_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.FightReportMini.m_kill)
}

// optional uint64 m_timestamp = 5 [default = 0];
inline bool FightReportMini::has_m_timestamp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FightReportMini::set_has_m_timestamp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FightReportMini::clear_has_m_timestamp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FightReportMini::clear_m_timestamp() {
  m_timestamp_ = GOOGLE_ULONGLONG(0);
  clear_has_m_timestamp();
}
inline ::google::protobuf::uint64 FightReportMini::m_timestamp() const {
  // @@protoc_insertion_point(field_get:MsgProto.FightReportMini.m_timestamp)
  return m_timestamp_;
}
inline void FightReportMini::set_m_timestamp(::google::protobuf::uint64 value) {
  set_has_m_timestamp();
  m_timestamp_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.FightReportMini.m_timestamp)
}

// optional uint32 m_res_sum = 6 [default = 0];
inline bool FightReportMini::has_m_res_sum() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FightReportMini::set_has_m_res_sum() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FightReportMini::clear_has_m_res_sum() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FightReportMini::clear_m_res_sum() {
  m_res_sum_ = 0u;
  clear_has_m_res_sum();
}
inline ::google::protobuf::uint32 FightReportMini::m_res_sum() const {
  // @@protoc_insertion_point(field_get:MsgProto.FightReportMini.m_res_sum)
  return m_res_sum_;
}
inline void FightReportMini::set_m_res_sum(::google::protobuf::uint32 value) {
  set_has_m_res_sum();
  m_res_sum_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.FightReportMini.m_res_sum)
}

// -------------------------------------------------------------------

// InvestReportMini

// optional bool m_is_succed = 1 [default = true];
inline bool InvestReportMini::has_m_is_succed() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InvestReportMini::set_has_m_is_succed() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InvestReportMini::clear_has_m_is_succed() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InvestReportMini::clear_m_is_succed() {
  m_is_succed_ = true;
  clear_has_m_is_succed();
}
inline bool InvestReportMini::m_is_succed() const {
  // @@protoc_insertion_point(field_get:MsgProto.InvestReportMini.m_is_succed)
  return m_is_succed_;
}
inline void InvestReportMini::set_m_is_succed(bool value) {
  set_has_m_is_succed();
  m_is_succed_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.InvestReportMini.m_is_succed)
}

// optional uint32 m_cityid = 2 [default = 0];
inline bool InvestReportMini::has_m_cityid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InvestReportMini::set_has_m_cityid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InvestReportMini::clear_has_m_cityid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InvestReportMini::clear_m_cityid() {
  m_cityid_ = 0u;
  clear_has_m_cityid();
}
inline ::google::protobuf::uint32 InvestReportMini::m_cityid() const {
  // @@protoc_insertion_point(field_get:MsgProto.InvestReportMini.m_cityid)
  return m_cityid_;
}
inline void InvestReportMini::set_m_cityid(::google::protobuf::uint32 value) {
  set_has_m_cityid();
  m_cityid_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.InvestReportMini.m_cityid)
}

// optional .MsgProto.WorldView m_view = 3;
inline bool InvestReportMini::has_m_view() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InvestReportMini::set_has_m_view() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InvestReportMini::clear_has_m_view() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InvestReportMini::clear_m_view() {
  if (m_view_ != NULL) m_view_->::MsgProto::WorldView::Clear();
  clear_has_m_view();
}
inline const ::MsgProto::WorldView& InvestReportMini::m_view() const {
  // @@protoc_insertion_point(field_get:MsgProto.InvestReportMini.m_view)
  return m_view_ != NULL ? *m_view_ : *default_instance_->m_view_;
}
inline ::MsgProto::WorldView* InvestReportMini::mutable_m_view() {
  set_has_m_view();
  if (m_view_ == NULL) m_view_ = new ::MsgProto::WorldView;
  // @@protoc_insertion_point(field_mutable:MsgProto.InvestReportMini.m_view)
  return m_view_;
}
inline ::MsgProto::WorldView* InvestReportMini::release_m_view() {
  clear_has_m_view();
  ::MsgProto::WorldView* temp = m_view_;
  m_view_ = NULL;
  return temp;
}
inline void InvestReportMini::set_allocated_m_view(::MsgProto::WorldView* m_view) {
  delete m_view_;
  m_view_ = m_view;
  if (m_view) {
    set_has_m_view();
  } else {
    clear_has_m_view();
  }
  // @@protoc_insertion_point(field_set_allocated:MsgProto.InvestReportMini.m_view)
}

// repeated .MsgProto.ResInvestReport m_res = 4;
inline int InvestReportMini::m_res_size() const {
  return m_res_.size();
}
inline void InvestReportMini::clear_m_res() {
  m_res_.Clear();
}
inline const ::MsgProto::ResInvestReport& InvestReportMini::m_res(int index) const {
  // @@protoc_insertion_point(field_get:MsgProto.InvestReportMini.m_res)
  return m_res_.Get(index);
}
inline ::MsgProto::ResInvestReport* InvestReportMini::mutable_m_res(int index) {
  // @@protoc_insertion_point(field_mutable:MsgProto.InvestReportMini.m_res)
  return m_res_.Mutable(index);
}
inline ::MsgProto::ResInvestReport* InvestReportMini::add_m_res() {
  // @@protoc_insertion_point(field_add:MsgProto.InvestReportMini.m_res)
  return m_res_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgProto::ResInvestReport >&
InvestReportMini::m_res() const {
  // @@protoc_insertion_point(field_list:MsgProto.InvestReportMini.m_res)
  return m_res_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgProto::ResInvestReport >*
InvestReportMini::mutable_m_res() {
  // @@protoc_insertion_point(field_mutable_list:MsgProto.InvestReportMini.m_res)
  return &m_res_;
}

// repeated .MsgProto.ArmyInvestReport m_armys = 5;
inline int InvestReportMini::m_armys_size() const {
  return m_armys_.size();
}
inline void InvestReportMini::clear_m_armys() {
  m_armys_.Clear();
}
inline const ::MsgProto::ArmyInvestReport& InvestReportMini::m_armys(int index) const {
  // @@protoc_insertion_point(field_get:MsgProto.InvestReportMini.m_armys)
  return m_armys_.Get(index);
}
inline ::MsgProto::ArmyInvestReport* InvestReportMini::mutable_m_armys(int index) {
  // @@protoc_insertion_point(field_mutable:MsgProto.InvestReportMini.m_armys)
  return m_armys_.Mutable(index);
}
inline ::MsgProto::ArmyInvestReport* InvestReportMini::add_m_armys() {
  // @@protoc_insertion_point(field_add:MsgProto.InvestReportMini.m_armys)
  return m_armys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgProto::ArmyInvestReport >&
InvestReportMini::m_armys() const {
  // @@protoc_insertion_point(field_list:MsgProto.InvestReportMini.m_armys)
  return m_armys_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgProto::ArmyInvestReport >*
InvestReportMini::mutable_m_armys() {
  // @@protoc_insertion_point(field_mutable_list:MsgProto.InvestReportMini.m_armys)
  return &m_armys_;
}

// optional uint32 m_dv_cur = 6 [default = 0];
inline bool InvestReportMini::has_m_dv_cur() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void InvestReportMini::set_has_m_dv_cur() {
  _has_bits_[0] |= 0x00000020u;
}
inline void InvestReportMini::clear_has_m_dv_cur() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void InvestReportMini::clear_m_dv_cur() {
  m_dv_cur_ = 0u;
  clear_has_m_dv_cur();
}
inline ::google::protobuf::uint32 InvestReportMini::m_dv_cur() const {
  // @@protoc_insertion_point(field_get:MsgProto.InvestReportMini.m_dv_cur)
  return m_dv_cur_;
}
inline void InvestReportMini::set_m_dv_cur(::google::protobuf::uint32 value) {
  set_has_m_dv_cur();
  m_dv_cur_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.InvestReportMini.m_dv_cur)
}

// optional uint32 m_dv_sum = 7 [default = 0];
inline bool InvestReportMini::has_m_dv_sum() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void InvestReportMini::set_has_m_dv_sum() {
  _has_bits_[0] |= 0x00000040u;
}
inline void InvestReportMini::clear_has_m_dv_sum() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void InvestReportMini::clear_m_dv_sum() {
  m_dv_sum_ = 0u;
  clear_has_m_dv_sum();
}
inline ::google::protobuf::uint32 InvestReportMini::m_dv_sum() const {
  // @@protoc_insertion_point(field_get:MsgProto.InvestReportMini.m_dv_sum)
  return m_dv_sum_;
}
inline void InvestReportMini::set_m_dv_sum(::google::protobuf::uint32 value) {
  set_has_m_dv_sum();
  m_dv_sum_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.InvestReportMini.m_dv_sum)
}

// -------------------------------------------------------------------

// ArmyInvestReport

// repeated .MsgProto.RoleSoldier m_soldiers = 1;
inline int ArmyInvestReport::m_soldiers_size() const {
  return m_soldiers_.size();
}
inline void ArmyInvestReport::clear_m_soldiers() {
  m_soldiers_.Clear();
}
inline const ::MsgProto::RoleSoldier& ArmyInvestReport::m_soldiers(int index) const {
  // @@protoc_insertion_point(field_get:MsgProto.ArmyInvestReport.m_soldiers)
  return m_soldiers_.Get(index);
}
inline ::MsgProto::RoleSoldier* ArmyInvestReport::mutable_m_soldiers(int index) {
  // @@protoc_insertion_point(field_mutable:MsgProto.ArmyInvestReport.m_soldiers)
  return m_soldiers_.Mutable(index);
}
inline ::MsgProto::RoleSoldier* ArmyInvestReport::add_m_soldiers() {
  // @@protoc_insertion_point(field_add:MsgProto.ArmyInvestReport.m_soldiers)
  return m_soldiers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgProto::RoleSoldier >&
ArmyInvestReport::m_soldiers() const {
  // @@protoc_insertion_point(field_list:MsgProto.ArmyInvestReport.m_soldiers)
  return m_soldiers_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgProto::RoleSoldier >*
ArmyInvestReport::mutable_m_soldiers() {
  // @@protoc_insertion_point(field_mutable_list:MsgProto.ArmyInvestReport.m_soldiers)
  return &m_soldiers_;
}

// -------------------------------------------------------------------

// ResInvestReport

// optional uint32 m_res_type = 1 [default = 0];
inline bool ResInvestReport::has_m_res_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResInvestReport::set_has_m_res_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResInvestReport::clear_has_m_res_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResInvestReport::clear_m_res_type() {
  m_res_type_ = 0u;
  clear_has_m_res_type();
}
inline ::google::protobuf::uint32 ResInvestReport::m_res_type() const {
  // @@protoc_insertion_point(field_get:MsgProto.ResInvestReport.m_res_type)
  return m_res_type_;
}
inline void ResInvestReport::set_m_res_type(::google::protobuf::uint32 value) {
  set_has_m_res_type();
  m_res_type_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.ResInvestReport.m_res_type)
}

// optional uint32 m_res_get = 2 [default = 0];
inline bool ResInvestReport::has_m_res_get() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResInvestReport::set_has_m_res_get() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResInvestReport::clear_has_m_res_get() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResInvestReport::clear_m_res_get() {
  m_res_get_ = 0u;
  clear_has_m_res_get();
}
inline ::google::protobuf::uint32 ResInvestReport::m_res_get() const {
  // @@protoc_insertion_point(field_get:MsgProto.ResInvestReport.m_res_get)
  return m_res_get_;
}
inline void ResInvestReport::set_m_res_get(::google::protobuf::uint32 value) {
  set_has_m_res_get();
  m_res_get_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.ResInvestReport.m_res_get)
}

// optional uint32 m_res_unget = 3 [default = 0];
inline bool ResInvestReport::has_m_res_unget() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ResInvestReport::set_has_m_res_unget() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ResInvestReport::clear_has_m_res_unget() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ResInvestReport::clear_m_res_unget() {
  m_res_unget_ = 0u;
  clear_has_m_res_unget();
}
inline ::google::protobuf::uint32 ResInvestReport::m_res_unget() const {
  // @@protoc_insertion_point(field_get:MsgProto.ResInvestReport.m_res_unget)
  return m_res_unget_;
}
inline void ResInvestReport::set_m_res_unget(::google::protobuf::uint32 value) {
  set_has_m_res_unget();
  m_res_unget_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.ResInvestReport.m_res_unget)
}

// -------------------------------------------------------------------

// InvestigationReport

// optional bool m_is_succed = 1 [default = true];
inline bool InvestigationReport::has_m_is_succed() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InvestigationReport::set_has_m_is_succed() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InvestigationReport::clear_has_m_is_succed() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InvestigationReport::clear_m_is_succed() {
  m_is_succed_ = true;
  clear_has_m_is_succed();
}
inline bool InvestigationReport::m_is_succed() const {
  // @@protoc_insertion_point(field_get:MsgProto.InvestigationReport.m_is_succed)
  return m_is_succed_;
}
inline void InvestigationReport::set_m_is_succed(bool value) {
  set_has_m_is_succed();
  m_is_succed_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.InvestigationReport.m_is_succed)
}

// optional uint32 m_cityid = 2 [default = 0];
inline bool InvestigationReport::has_m_cityid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InvestigationReport::set_has_m_cityid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InvestigationReport::clear_has_m_cityid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InvestigationReport::clear_m_cityid() {
  m_cityid_ = 0u;
  clear_has_m_cityid();
}
inline ::google::protobuf::uint32 InvestigationReport::m_cityid() const {
  // @@protoc_insertion_point(field_get:MsgProto.InvestigationReport.m_cityid)
  return m_cityid_;
}
inline void InvestigationReport::set_m_cityid(::google::protobuf::uint32 value) {
  set_has_m_cityid();
  m_cityid_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.InvestigationReport.m_cityid)
}

// optional .MsgProto.WorldView m_view = 3;
inline bool InvestigationReport::has_m_view() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InvestigationReport::set_has_m_view() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InvestigationReport::clear_has_m_view() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InvestigationReport::clear_m_view() {
  if (m_view_ != NULL) m_view_->::MsgProto::WorldView::Clear();
  clear_has_m_view();
}
inline const ::MsgProto::WorldView& InvestigationReport::m_view() const {
  // @@protoc_insertion_point(field_get:MsgProto.InvestigationReport.m_view)
  return m_view_ != NULL ? *m_view_ : *default_instance_->m_view_;
}
inline ::MsgProto::WorldView* InvestigationReport::mutable_m_view() {
  set_has_m_view();
  if (m_view_ == NULL) m_view_ = new ::MsgProto::WorldView;
  // @@protoc_insertion_point(field_mutable:MsgProto.InvestigationReport.m_view)
  return m_view_;
}
inline ::MsgProto::WorldView* InvestigationReport::release_m_view() {
  clear_has_m_view();
  ::MsgProto::WorldView* temp = m_view_;
  m_view_ = NULL;
  return temp;
}
inline void InvestigationReport::set_allocated_m_view(::MsgProto::WorldView* m_view) {
  delete m_view_;
  m_view_ = m_view;
  if (m_view) {
    set_has_m_view();
  } else {
    clear_has_m_view();
  }
  // @@protoc_insertion_point(field_set_allocated:MsgProto.InvestigationReport.m_view)
}

// repeated .MsgProto.ResInvestReport m_res = 4;
inline int InvestigationReport::m_res_size() const {
  return m_res_.size();
}
inline void InvestigationReport::clear_m_res() {
  m_res_.Clear();
}
inline const ::MsgProto::ResInvestReport& InvestigationReport::m_res(int index) const {
  // @@protoc_insertion_point(field_get:MsgProto.InvestigationReport.m_res)
  return m_res_.Get(index);
}
inline ::MsgProto::ResInvestReport* InvestigationReport::mutable_m_res(int index) {
  // @@protoc_insertion_point(field_mutable:MsgProto.InvestigationReport.m_res)
  return m_res_.Mutable(index);
}
inline ::MsgProto::ResInvestReport* InvestigationReport::add_m_res() {
  // @@protoc_insertion_point(field_add:MsgProto.InvestigationReport.m_res)
  return m_res_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgProto::ResInvestReport >&
InvestigationReport::m_res() const {
  // @@protoc_insertion_point(field_list:MsgProto.InvestigationReport.m_res)
  return m_res_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgProto::ResInvestReport >*
InvestigationReport::mutable_m_res() {
  // @@protoc_insertion_point(field_mutable_list:MsgProto.InvestigationReport.m_res)
  return &m_res_;
}

// repeated .MsgProto.ArmyInvestReport m_armys = 5;
inline int InvestigationReport::m_armys_size() const {
  return m_armys_.size();
}
inline void InvestigationReport::clear_m_armys() {
  m_armys_.Clear();
}
inline const ::MsgProto::ArmyInvestReport& InvestigationReport::m_armys(int index) const {
  // @@protoc_insertion_point(field_get:MsgProto.InvestigationReport.m_armys)
  return m_armys_.Get(index);
}
inline ::MsgProto::ArmyInvestReport* InvestigationReport::mutable_m_armys(int index) {
  // @@protoc_insertion_point(field_mutable:MsgProto.InvestigationReport.m_armys)
  return m_armys_.Mutable(index);
}
inline ::MsgProto::ArmyInvestReport* InvestigationReport::add_m_armys() {
  // @@protoc_insertion_point(field_add:MsgProto.InvestigationReport.m_armys)
  return m_armys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgProto::ArmyInvestReport >&
InvestigationReport::m_armys() const {
  // @@protoc_insertion_point(field_list:MsgProto.InvestigationReport.m_armys)
  return m_armys_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgProto::ArmyInvestReport >*
InvestigationReport::mutable_m_armys() {
  // @@protoc_insertion_point(field_mutable_list:MsgProto.InvestigationReport.m_armys)
  return &m_armys_;
}

// optional uint32 m_dv_cur = 6 [default = 0];
inline bool InvestigationReport::has_m_dv_cur() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void InvestigationReport::set_has_m_dv_cur() {
  _has_bits_[0] |= 0x00000020u;
}
inline void InvestigationReport::clear_has_m_dv_cur() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void InvestigationReport::clear_m_dv_cur() {
  m_dv_cur_ = 0u;
  clear_has_m_dv_cur();
}
inline ::google::protobuf::uint32 InvestigationReport::m_dv_cur() const {
  // @@protoc_insertion_point(field_get:MsgProto.InvestigationReport.m_dv_cur)
  return m_dv_cur_;
}
inline void InvestigationReport::set_m_dv_cur(::google::protobuf::uint32 value) {
  set_has_m_dv_cur();
  m_dv_cur_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.InvestigationReport.m_dv_cur)
}

// optional uint32 m_dv_sum = 7 [default = 0];
inline bool InvestigationReport::has_m_dv_sum() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void InvestigationReport::set_has_m_dv_sum() {
  _has_bits_[0] |= 0x00000040u;
}
inline void InvestigationReport::clear_has_m_dv_sum() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void InvestigationReport::clear_m_dv_sum() {
  m_dv_sum_ = 0u;
  clear_has_m_dv_sum();
}
inline ::google::protobuf::uint32 InvestigationReport::m_dv_sum() const {
  // @@protoc_insertion_point(field_get:MsgProto.InvestigationReport.m_dv_sum)
  return m_dv_sum_;
}
inline void InvestigationReport::set_m_dv_sum(::google::protobuf::uint32 value) {
  set_has_m_dv_sum();
  m_dv_sum_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.InvestigationReport.m_dv_sum)
}

// -------------------------------------------------------------------

// ReportDB

// optional uint32 m_roleid = 1 [default = 0];
inline bool ReportDB::has_m_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReportDB::set_has_m_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReportDB::clear_has_m_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReportDB::clear_m_roleid() {
  m_roleid_ = 0u;
  clear_has_m_roleid();
}
inline ::google::protobuf::uint32 ReportDB::m_roleid() const {
  // @@protoc_insertion_point(field_get:MsgProto.ReportDB.m_roleid)
  return m_roleid_;
}
inline void ReportDB::set_m_roleid(::google::protobuf::uint32 value) {
  set_has_m_roleid();
  m_roleid_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.ReportDB.m_roleid)
}

// optional uint64 m_time = 2 [default = 0];
inline bool ReportDB::has_m_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReportDB::set_has_m_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReportDB::clear_has_m_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReportDB::clear_m_time() {
  m_time_ = GOOGLE_ULONGLONG(0);
  clear_has_m_time();
}
inline ::google::protobuf::uint64 ReportDB::m_time() const {
  // @@protoc_insertion_point(field_get:MsgProto.ReportDB.m_time)
  return m_time_;
}
inline void ReportDB::set_m_time(::google::protobuf::uint64 value) {
  set_has_m_time();
  m_time_ = value;
  // @@protoc_insertion_point(field_set:MsgProto.ReportDB.m_time)
}

// optional .MsgProto.ResReport m_res = 3;
inline bool ReportDB::has_m_res() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReportDB::set_has_m_res() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReportDB::clear_has_m_res() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReportDB::clear_m_res() {
  if (m_res_ != NULL) m_res_->::MsgProto::ResReport::Clear();
  clear_has_m_res();
}
inline const ::MsgProto::ResReport& ReportDB::m_res() const {
  // @@protoc_insertion_point(field_get:MsgProto.ReportDB.m_res)
  return m_res_ != NULL ? *m_res_ : *default_instance_->m_res_;
}
inline ::MsgProto::ResReport* ReportDB::mutable_m_res() {
  set_has_m_res();
  if (m_res_ == NULL) m_res_ = new ::MsgProto::ResReport;
  // @@protoc_insertion_point(field_mutable:MsgProto.ReportDB.m_res)
  return m_res_;
}
inline ::MsgProto::ResReport* ReportDB::release_m_res() {
  clear_has_m_res();
  ::MsgProto::ResReport* temp = m_res_;
  m_res_ = NULL;
  return temp;
}
inline void ReportDB::set_allocated_m_res(::MsgProto::ResReport* m_res) {
  delete m_res_;
  m_res_ = m_res;
  if (m_res) {
    set_has_m_res();
  } else {
    clear_has_m_res();
  }
  // @@protoc_insertion_point(field_set_allocated:MsgProto.ReportDB.m_res)
}

// optional .MsgProto.FightReportMini m_fight_mini = 4;
inline bool ReportDB::has_m_fight_mini() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReportDB::set_has_m_fight_mini() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReportDB::clear_has_m_fight_mini() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReportDB::clear_m_fight_mini() {
  if (m_fight_mini_ != NULL) m_fight_mini_->::MsgProto::FightReportMini::Clear();
  clear_has_m_fight_mini();
}
inline const ::MsgProto::FightReportMini& ReportDB::m_fight_mini() const {
  // @@protoc_insertion_point(field_get:MsgProto.ReportDB.m_fight_mini)
  return m_fight_mini_ != NULL ? *m_fight_mini_ : *default_instance_->m_fight_mini_;
}
inline ::MsgProto::FightReportMini* ReportDB::mutable_m_fight_mini() {
  set_has_m_fight_mini();
  if (m_fight_mini_ == NULL) m_fight_mini_ = new ::MsgProto::FightReportMini;
  // @@protoc_insertion_point(field_mutable:MsgProto.ReportDB.m_fight_mini)
  return m_fight_mini_;
}
inline ::MsgProto::FightReportMini* ReportDB::release_m_fight_mini() {
  clear_has_m_fight_mini();
  ::MsgProto::FightReportMini* temp = m_fight_mini_;
  m_fight_mini_ = NULL;
  return temp;
}
inline void ReportDB::set_allocated_m_fight_mini(::MsgProto::FightReportMini* m_fight_mini) {
  delete m_fight_mini_;
  m_fight_mini_ = m_fight_mini;
  if (m_fight_mini) {
    set_has_m_fight_mini();
  } else {
    clear_has_m_fight_mini();
  }
  // @@protoc_insertion_point(field_set_allocated:MsgProto.ReportDB.m_fight_mini)
}

// optional .MsgProto.FightReport m_fight = 5;
inline bool ReportDB::has_m_fight() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ReportDB::set_has_m_fight() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ReportDB::clear_has_m_fight() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ReportDB::clear_m_fight() {
  if (m_fight_ != NULL) m_fight_->::MsgProto::FightReport::Clear();
  clear_has_m_fight();
}
inline const ::MsgProto::FightReport& ReportDB::m_fight() const {
  // @@protoc_insertion_point(field_get:MsgProto.ReportDB.m_fight)
  return m_fight_ != NULL ? *m_fight_ : *default_instance_->m_fight_;
}
inline ::MsgProto::FightReport* ReportDB::mutable_m_fight() {
  set_has_m_fight();
  if (m_fight_ == NULL) m_fight_ = new ::MsgProto::FightReport;
  // @@protoc_insertion_point(field_mutable:MsgProto.ReportDB.m_fight)
  return m_fight_;
}
inline ::MsgProto::FightReport* ReportDB::release_m_fight() {
  clear_has_m_fight();
  ::MsgProto::FightReport* temp = m_fight_;
  m_fight_ = NULL;
  return temp;
}
inline void ReportDB::set_allocated_m_fight(::MsgProto::FightReport* m_fight) {
  delete m_fight_;
  m_fight_ = m_fight;
  if (m_fight) {
    set_has_m_fight();
  } else {
    clear_has_m_fight();
  }
  // @@protoc_insertion_point(field_set_allocated:MsgProto.ReportDB.m_fight)
}

// optional .MsgProto.InvestigationReport m_invest = 6;
inline bool ReportDB::has_m_invest() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ReportDB::set_has_m_invest() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ReportDB::clear_has_m_invest() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ReportDB::clear_m_invest() {
  if (m_invest_ != NULL) m_invest_->::MsgProto::InvestigationReport::Clear();
  clear_has_m_invest();
}
inline const ::MsgProto::InvestigationReport& ReportDB::m_invest() const {
  // @@protoc_insertion_point(field_get:MsgProto.ReportDB.m_invest)
  return m_invest_ != NULL ? *m_invest_ : *default_instance_->m_invest_;
}
inline ::MsgProto::InvestigationReport* ReportDB::mutable_m_invest() {
  set_has_m_invest();
  if (m_invest_ == NULL) m_invest_ = new ::MsgProto::InvestigationReport;
  // @@protoc_insertion_point(field_mutable:MsgProto.ReportDB.m_invest)
  return m_invest_;
}
inline ::MsgProto::InvestigationReport* ReportDB::release_m_invest() {
  clear_has_m_invest();
  ::MsgProto::InvestigationReport* temp = m_invest_;
  m_invest_ = NULL;
  return temp;
}
inline void ReportDB::set_allocated_m_invest(::MsgProto::InvestigationReport* m_invest) {
  delete m_invest_;
  m_invest_ = m_invest;
  if (m_invest) {
    set_has_m_invest();
  } else {
    clear_has_m_invest();
  }
  // @@protoc_insertion_point(field_set_allocated:MsgProto.ReportDB.m_invest)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace MsgProto

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::MsgProto::WorldArmy_EState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgProto::WorldArmy_EState>() {
  return ::MsgProto::WorldArmy_EState_descriptor();
}
template <> struct is_proto_enum< ::MsgProto::WorldArmy_MoveType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgProto::WorldArmy_MoveType>() {
  return ::MsgProto::WorldArmy_MoveType_descriptor();
}
template <> struct is_proto_enum< ::MsgProto::WorldMine_EState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgProto::WorldMine_EState>() {
  return ::MsgProto::WorldMine_EState_descriptor();
}
template <> struct is_proto_enum< ::MsgProto::FightReport_EResult> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgProto::FightReport_EResult>() {
  return ::MsgProto::FightReport_EResult_descriptor();
}
template <> struct is_proto_enum< ::MsgProto::FightReport_EFightType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgProto::FightReport_EFightType>() {
  return ::MsgProto::FightReport_EFightType_descriptor();
}
template <> struct is_proto_enum< ::MsgProto::FightReportMini_EResult> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgProto::FightReportMini_EResult>() {
  return ::MsgProto::FightReportMini_EResult_descriptor();
}
template <> struct is_proto_enum< ::MsgProto::EProtoVersion> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgProto::EProtoVersion>() {
  return ::MsgProto::EProtoVersion_descriptor();
}
template <> struct is_proto_enum< ::MsgProto::EItemType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgProto::EItemType>() {
  return ::MsgProto::EItemType_descriptor();
}
template <> struct is_proto_enum< ::MsgProto::EAttrTypeDef> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgProto::EAttrTypeDef>() {
  return ::MsgProto::EAttrTypeDef_descriptor();
}
template <> struct is_proto_enum< ::MsgProto::EKeyType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgProto::EKeyType>() {
  return ::MsgProto::EKeyType_descriptor();
}
template <> struct is_proto_enum< ::MsgProto::EObjectType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgProto::EObjectType>() {
  return ::MsgProto::EObjectType_descriptor();
}
template <> struct is_proto_enum< ::MsgProto::EResOwner> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgProto::EResOwner>() {
  return ::MsgProto::EResOwner_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MsgStruct_2eproto__INCLUDED
