// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MsgDefine.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MsgDefine.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace MsgProto {

namespace {

const ::google::protobuf::Descriptor* MsgHead_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgHead_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgBeginLogin_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgBeginLogin_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgC2SReqRoleInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgC2SReqRoleInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgS2CAckRoleInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgS2CAckRoleInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgS2CUpdateRoleInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgS2CUpdateRoleInfo_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgS2CUpdateRoleInfo_EType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* MsgS2CNotifyError_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgS2CNotifyError_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgS2CNotifyError_ErrorType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* MsgEndLogin_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgEndLogin_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgBeginBigWorld_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgBeginBigWorld_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgC2SReqMarch_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgC2SReqMarch_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgS2CAckMarch_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgS2CAckMarch_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgS2CNewNode_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgS2CNewNode_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgS2CNewNode_ChgReson_descriptor_ = NULL;
const ::google::protobuf::Descriptor* MsgC2SReqDstView_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgC2SReqDstView_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgS2CAckDstView_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgS2CAckDstView_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgC2SReqMineDetail_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgC2SReqMineDetail_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgS2CAckMineDetail_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgS2CAckMineDetail_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgC2SReqLeaveWorld_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgC2SReqLeaveWorld_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgC2SReqInvestigate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgC2SReqInvestigate_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgC2SReqArmyBackHome_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgC2SReqArmyBackHome_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgEndBigWorld_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgEndBigWorld_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgBeginChat_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgBeginChat_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgC2SReqChat_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgC2SReqChat_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgS2CAckChat_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgS2CAckChat_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgS2CGMResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgS2CGMResult_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgS2CGMResult_GMType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* MsgEndChat_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgEndChat_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgBeginReport_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgBeginReport_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgC2SReqReport_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgC2SReqReport_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgC2SReqReport_EReportType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* MsgS2CAckReport_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgS2CAckReport_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgC2SReqFightReport_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgC2SReqFightReport_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgS2CAckFightReport_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgS2CAckFightReport_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgC2SReqInvestReport_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgC2SReqInvestReport_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgS2CAckInvestReport_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgS2CAckInvestReport_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgEndReport_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgEndReport_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgBeginBoss_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgBeginBoss_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgS2CNotifyBoss_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgS2CNotifyBoss_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgS2CNotifyBoss_BossState_descriptor_ = NULL;
const ::google::protobuf::Descriptor* MsgS2CNotifyTurret_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgS2CNotifyTurret_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgS2CTurretAttack_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgS2CTurretAttack_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgEndBoss_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgEndBoss_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_MsgDefine_2eproto() {
  protobuf_AddDesc_MsgDefine_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MsgDefine.proto");
  GOOGLE_CHECK(file != NULL);
  MsgHead_descriptor_ = file->message_type(0);
  static const int MsgHead_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHead, m_token_),
  };
  MsgHead_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgHead_descriptor_,
      MsgHead::default_instance_,
      MsgHead_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHead, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHead, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgHead));
  MsgBeginLogin_descriptor_ = file->message_type(1);
  static const int MsgBeginLogin_offsets_[1] = {
  };
  MsgBeginLogin_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgBeginLogin_descriptor_,
      MsgBeginLogin::default_instance_,
      MsgBeginLogin_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBeginLogin, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBeginLogin, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgBeginLogin));
  MsgC2SReqRoleInfo_descriptor_ = file->message_type(2);
  static const int MsgC2SReqRoleInfo_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgC2SReqRoleInfo, m_head_),
  };
  MsgC2SReqRoleInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgC2SReqRoleInfo_descriptor_,
      MsgC2SReqRoleInfo::default_instance_,
      MsgC2SReqRoleInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgC2SReqRoleInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgC2SReqRoleInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgC2SReqRoleInfo));
  MsgS2CAckRoleInfo_descriptor_ = file->message_type(3);
  static const int MsgS2CAckRoleInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CAckRoleInfo, m_role_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CAckRoleInfo, m_city_),
  };
  MsgS2CAckRoleInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgS2CAckRoleInfo_descriptor_,
      MsgS2CAckRoleInfo::default_instance_,
      MsgS2CAckRoleInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CAckRoleInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CAckRoleInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgS2CAckRoleInfo));
  MsgS2CUpdateRoleInfo_descriptor_ = file->message_type(4);
  static const int MsgS2CUpdateRoleInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CUpdateRoleInfo, m_types_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CUpdateRoleInfo, m_values_),
  };
  MsgS2CUpdateRoleInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgS2CUpdateRoleInfo_descriptor_,
      MsgS2CUpdateRoleInfo::default_instance_,
      MsgS2CUpdateRoleInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CUpdateRoleInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CUpdateRoleInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgS2CUpdateRoleInfo));
  MsgS2CUpdateRoleInfo_EType_descriptor_ = MsgS2CUpdateRoleInfo_descriptor_->enum_type(0);
  MsgS2CNotifyError_descriptor_ = file->message_type(5);
  static const int MsgS2CNotifyError_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CNotifyError, m_etype_),
  };
  MsgS2CNotifyError_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgS2CNotifyError_descriptor_,
      MsgS2CNotifyError::default_instance_,
      MsgS2CNotifyError_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CNotifyError, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CNotifyError, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgS2CNotifyError));
  MsgS2CNotifyError_ErrorType_descriptor_ = MsgS2CNotifyError_descriptor_->enum_type(0);
  MsgEndLogin_descriptor_ = file->message_type(6);
  static const int MsgEndLogin_offsets_[1] = {
  };
  MsgEndLogin_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgEndLogin_descriptor_,
      MsgEndLogin::default_instance_,
      MsgEndLogin_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgEndLogin, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgEndLogin, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgEndLogin));
  MsgBeginBigWorld_descriptor_ = file->message_type(7);
  static const int MsgBeginBigWorld_offsets_[1] = {
  };
  MsgBeginBigWorld_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgBeginBigWorld_descriptor_,
      MsgBeginBigWorld::default_instance_,
      MsgBeginBigWorld_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBeginBigWorld, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBeginBigWorld, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgBeginBigWorld));
  MsgC2SReqMarch_descriptor_ = file->message_type(8);
  static const int MsgC2SReqMarch_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgC2SReqMarch, m_pos_to_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgC2SReqMarch, m_soldier_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgC2SReqMarch, m_build_res_),
  };
  MsgC2SReqMarch_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgC2SReqMarch_descriptor_,
      MsgC2SReqMarch::default_instance_,
      MsgC2SReqMarch_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgC2SReqMarch, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgC2SReqMarch, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgC2SReqMarch));
  MsgS2CAckMarch_descriptor_ = file->message_type(9);
  static const int MsgS2CAckMarch_offsets_[1] = {
  };
  MsgS2CAckMarch_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgS2CAckMarch_descriptor_,
      MsgS2CAckMarch::default_instance_,
      MsgS2CAckMarch_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CAckMarch, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CAckMarch, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgS2CAckMarch));
  MsgS2CNewNode_descriptor_ = file->message_type(10);
  static const int MsgS2CNewNode_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CNewNode, m_reson_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CNewNode, m_army_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CNewNode, m_city_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CNewNode, m_mine_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CNewNode, m_tower_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CNewNode, m_boss_),
  };
  MsgS2CNewNode_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgS2CNewNode_descriptor_,
      MsgS2CNewNode::default_instance_,
      MsgS2CNewNode_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CNewNode, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CNewNode, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgS2CNewNode));
  MsgS2CNewNode_ChgReson_descriptor_ = MsgS2CNewNode_descriptor_->enum_type(0);
  MsgC2SReqDstView_descriptor_ = file->message_type(11);
  static const int MsgC2SReqDstView_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgC2SReqDstView, m_head_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgC2SReqDstView, m_src_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgC2SReqDstView, m_src_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgC2SReqDstView, m_dst_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgC2SReqDstView, m_dst_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgC2SReqDstView, m_w_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgC2SReqDstView, m_h_),
  };
  MsgC2SReqDstView_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgC2SReqDstView_descriptor_,
      MsgC2SReqDstView::default_instance_,
      MsgC2SReqDstView_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgC2SReqDstView, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgC2SReqDstView, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgC2SReqDstView));
  MsgS2CAckDstView_descriptor_ = file->message_type(12);
  static const int MsgS2CAckDstView_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CAckDstView, m_dst_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CAckDstView, m_dst_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CAckDstView, m_armys_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CAckDstView, m_mines_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CAckDstView, m_npcs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CAckDstView, m_citys_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CAckDstView, m_tower_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CAckDstView, m_boss_),
  };
  MsgS2CAckDstView_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgS2CAckDstView_descriptor_,
      MsgS2CAckDstView::default_instance_,
      MsgS2CAckDstView_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CAckDstView, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CAckDstView, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgS2CAckDstView));
  MsgC2SReqMineDetail_descriptor_ = file->message_type(13);
  static const int MsgC2SReqMineDetail_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgC2SReqMineDetail, m_id_),
  };
  MsgC2SReqMineDetail_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgC2SReqMineDetail_descriptor_,
      MsgC2SReqMineDetail::default_instance_,
      MsgC2SReqMineDetail_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgC2SReqMineDetail, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgC2SReqMineDetail, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgC2SReqMineDetail));
  MsgS2CAckMineDetail_descriptor_ = file->message_type(14);
  static const int MsgS2CAckMineDetail_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CAckMineDetail, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CAckMineDetail, m_armyid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CAckMineDetail, m_get_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CAckMineDetail, m_get_add_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CAckMineDetail, m_soldier_),
  };
  MsgS2CAckMineDetail_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgS2CAckMineDetail_descriptor_,
      MsgS2CAckMineDetail::default_instance_,
      MsgS2CAckMineDetail_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CAckMineDetail, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CAckMineDetail, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgS2CAckMineDetail));
  MsgC2SReqLeaveWorld_descriptor_ = file->message_type(15);
  static const int MsgC2SReqLeaveWorld_offsets_[1] = {
  };
  MsgC2SReqLeaveWorld_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgC2SReqLeaveWorld_descriptor_,
      MsgC2SReqLeaveWorld::default_instance_,
      MsgC2SReqLeaveWorld_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgC2SReqLeaveWorld, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgC2SReqLeaveWorld, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgC2SReqLeaveWorld));
  MsgC2SReqInvestigate_descriptor_ = file->message_type(16);
  static const int MsgC2SReqInvestigate_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgC2SReqInvestigate, m_pos_),
  };
  MsgC2SReqInvestigate_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgC2SReqInvestigate_descriptor_,
      MsgC2SReqInvestigate::default_instance_,
      MsgC2SReqInvestigate_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgC2SReqInvestigate, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgC2SReqInvestigate, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgC2SReqInvestigate));
  MsgC2SReqArmyBackHome_descriptor_ = file->message_type(17);
  static const int MsgC2SReqArmyBackHome_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgC2SReqArmyBackHome, m_armyid_),
  };
  MsgC2SReqArmyBackHome_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgC2SReqArmyBackHome_descriptor_,
      MsgC2SReqArmyBackHome::default_instance_,
      MsgC2SReqArmyBackHome_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgC2SReqArmyBackHome, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgC2SReqArmyBackHome, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgC2SReqArmyBackHome));
  MsgEndBigWorld_descriptor_ = file->message_type(18);
  static const int MsgEndBigWorld_offsets_[1] = {
  };
  MsgEndBigWorld_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgEndBigWorld_descriptor_,
      MsgEndBigWorld::default_instance_,
      MsgEndBigWorld_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgEndBigWorld, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgEndBigWorld, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgEndBigWorld));
  MsgBeginChat_descriptor_ = file->message_type(19);
  static const int MsgBeginChat_offsets_[1] = {
  };
  MsgBeginChat_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgBeginChat_descriptor_,
      MsgBeginChat::default_instance_,
      MsgBeginChat_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBeginChat, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBeginChat, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgBeginChat));
  MsgC2SReqChat_descriptor_ = file->message_type(20);
  static const int MsgC2SReqChat_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgC2SReqChat, m_values_),
  };
  MsgC2SReqChat_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgC2SReqChat_descriptor_,
      MsgC2SReqChat::default_instance_,
      MsgC2SReqChat_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgC2SReqChat, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgC2SReqChat, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgC2SReqChat));
  MsgS2CAckChat_descriptor_ = file->message_type(21);
  static const int MsgS2CAckChat_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CAckChat, m_values_),
  };
  MsgS2CAckChat_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgS2CAckChat_descriptor_,
      MsgS2CAckChat::default_instance_,
      MsgS2CAckChat_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CAckChat, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CAckChat, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgS2CAckChat));
  MsgS2CGMResult_descriptor_ = file->message_type(22);
  static const int MsgS2CGMResult_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CGMResult, m_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CGMResult, m_val_),
  };
  MsgS2CGMResult_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgS2CGMResult_descriptor_,
      MsgS2CGMResult::default_instance_,
      MsgS2CGMResult_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CGMResult, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CGMResult, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgS2CGMResult));
  MsgS2CGMResult_GMType_descriptor_ = MsgS2CGMResult_descriptor_->enum_type(0);
  MsgEndChat_descriptor_ = file->message_type(23);
  static const int MsgEndChat_offsets_[1] = {
  };
  MsgEndChat_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgEndChat_descriptor_,
      MsgEndChat::default_instance_,
      MsgEndChat_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgEndChat, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgEndChat, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgEndChat));
  MsgBeginReport_descriptor_ = file->message_type(24);
  static const int MsgBeginReport_offsets_[1] = {
  };
  MsgBeginReport_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgBeginReport_descriptor_,
      MsgBeginReport::default_instance_,
      MsgBeginReport_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBeginReport, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBeginReport, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgBeginReport));
  MsgC2SReqReport_descriptor_ = file->message_type(25);
  static const int MsgC2SReqReport_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgC2SReqReport, m_type_),
  };
  MsgC2SReqReport_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgC2SReqReport_descriptor_,
      MsgC2SReqReport::default_instance_,
      MsgC2SReqReport_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgC2SReqReport, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgC2SReqReport, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgC2SReqReport));
  MsgC2SReqReport_EReportType_descriptor_ = MsgC2SReqReport_descriptor_->enum_type(0);
  MsgS2CAckReport_descriptor_ = file->message_type(26);
  static const int MsgS2CAckReport_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CAckReport, m_res_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CAckReport, m_fight_mini_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CAckReport, m_invest_),
  };
  MsgS2CAckReport_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgS2CAckReport_descriptor_,
      MsgS2CAckReport::default_instance_,
      MsgS2CAckReport_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CAckReport, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CAckReport, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgS2CAckReport));
  MsgC2SReqFightReport_descriptor_ = file->message_type(27);
  static const int MsgC2SReqFightReport_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgC2SReqFightReport, m_id_),
  };
  MsgC2SReqFightReport_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgC2SReqFightReport_descriptor_,
      MsgC2SReqFightReport::default_instance_,
      MsgC2SReqFightReport_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgC2SReqFightReport, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgC2SReqFightReport, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgC2SReqFightReport));
  MsgS2CAckFightReport_descriptor_ = file->message_type(28);
  static const int MsgS2CAckFightReport_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CAckFightReport, m_report_),
  };
  MsgS2CAckFightReport_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgS2CAckFightReport_descriptor_,
      MsgS2CAckFightReport::default_instance_,
      MsgS2CAckFightReport_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CAckFightReport, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CAckFightReport, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgS2CAckFightReport));
  MsgC2SReqInvestReport_descriptor_ = file->message_type(29);
  static const int MsgC2SReqInvestReport_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgC2SReqInvestReport, m_id_),
  };
  MsgC2SReqInvestReport_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgC2SReqInvestReport_descriptor_,
      MsgC2SReqInvestReport::default_instance_,
      MsgC2SReqInvestReport_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgC2SReqInvestReport, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgC2SReqInvestReport, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgC2SReqInvestReport));
  MsgS2CAckInvestReport_descriptor_ = file->message_type(30);
  static const int MsgS2CAckInvestReport_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CAckInvestReport, m_report_),
  };
  MsgS2CAckInvestReport_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgS2CAckInvestReport_descriptor_,
      MsgS2CAckInvestReport::default_instance_,
      MsgS2CAckInvestReport_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CAckInvestReport, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CAckInvestReport, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgS2CAckInvestReport));
  MsgEndReport_descriptor_ = file->message_type(31);
  static const int MsgEndReport_offsets_[1] = {
  };
  MsgEndReport_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgEndReport_descriptor_,
      MsgEndReport::default_instance_,
      MsgEndReport_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgEndReport, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgEndReport, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgEndReport));
  MsgBeginBoss_descriptor_ = file->message_type(32);
  static const int MsgBeginBoss_offsets_[1] = {
  };
  MsgBeginBoss_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgBeginBoss_descriptor_,
      MsgBeginBoss::default_instance_,
      MsgBeginBoss_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBeginBoss, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBeginBoss, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgBeginBoss));
  MsgS2CNotifyBoss_descriptor_ = file->message_type(33);
  static const int MsgS2CNotifyBoss_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CNotifyBoss, m_state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CNotifyBoss, m_turret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CNotifyBoss, m_bossid_),
  };
  MsgS2CNotifyBoss_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgS2CNotifyBoss_descriptor_,
      MsgS2CNotifyBoss::default_instance_,
      MsgS2CNotifyBoss_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CNotifyBoss, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CNotifyBoss, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgS2CNotifyBoss));
  MsgS2CNotifyBoss_BossState_descriptor_ = MsgS2CNotifyBoss_descriptor_->enum_type(0);
  MsgS2CNotifyTurret_descriptor_ = file->message_type(34);
  static const int MsgS2CNotifyTurret_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CNotifyTurret, m_turret_),
  };
  MsgS2CNotifyTurret_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgS2CNotifyTurret_descriptor_,
      MsgS2CNotifyTurret::default_instance_,
      MsgS2CNotifyTurret_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CNotifyTurret, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CNotifyTurret, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgS2CNotifyTurret));
  MsgS2CTurretAttack_descriptor_ = file->message_type(35);
  static const int MsgS2CTurretAttack_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CTurretAttack, m_pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CTurretAttack, m_pos_boss_),
  };
  MsgS2CTurretAttack_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgS2CTurretAttack_descriptor_,
      MsgS2CTurretAttack::default_instance_,
      MsgS2CTurretAttack_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CTurretAttack, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CTurretAttack, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgS2CTurretAttack));
  MsgEndBoss_descriptor_ = file->message_type(36);
  static const int MsgEndBoss_offsets_[1] = {
  };
  MsgEndBoss_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgEndBoss_descriptor_,
      MsgEndBoss::default_instance_,
      MsgEndBoss_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgEndBoss, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgEndBoss, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgEndBoss));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MsgDefine_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgHead_descriptor_, &MsgHead::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgBeginLogin_descriptor_, &MsgBeginLogin::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgC2SReqRoleInfo_descriptor_, &MsgC2SReqRoleInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgS2CAckRoleInfo_descriptor_, &MsgS2CAckRoleInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgS2CUpdateRoleInfo_descriptor_, &MsgS2CUpdateRoleInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgS2CNotifyError_descriptor_, &MsgS2CNotifyError::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgEndLogin_descriptor_, &MsgEndLogin::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgBeginBigWorld_descriptor_, &MsgBeginBigWorld::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgC2SReqMarch_descriptor_, &MsgC2SReqMarch::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgS2CAckMarch_descriptor_, &MsgS2CAckMarch::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgS2CNewNode_descriptor_, &MsgS2CNewNode::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgC2SReqDstView_descriptor_, &MsgC2SReqDstView::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgS2CAckDstView_descriptor_, &MsgS2CAckDstView::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgC2SReqMineDetail_descriptor_, &MsgC2SReqMineDetail::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgS2CAckMineDetail_descriptor_, &MsgS2CAckMineDetail::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgC2SReqLeaveWorld_descriptor_, &MsgC2SReqLeaveWorld::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgC2SReqInvestigate_descriptor_, &MsgC2SReqInvestigate::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgC2SReqArmyBackHome_descriptor_, &MsgC2SReqArmyBackHome::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgEndBigWorld_descriptor_, &MsgEndBigWorld::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgBeginChat_descriptor_, &MsgBeginChat::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgC2SReqChat_descriptor_, &MsgC2SReqChat::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgS2CAckChat_descriptor_, &MsgS2CAckChat::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgS2CGMResult_descriptor_, &MsgS2CGMResult::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgEndChat_descriptor_, &MsgEndChat::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgBeginReport_descriptor_, &MsgBeginReport::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgC2SReqReport_descriptor_, &MsgC2SReqReport::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgS2CAckReport_descriptor_, &MsgS2CAckReport::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgC2SReqFightReport_descriptor_, &MsgC2SReqFightReport::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgS2CAckFightReport_descriptor_, &MsgS2CAckFightReport::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgC2SReqInvestReport_descriptor_, &MsgC2SReqInvestReport::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgS2CAckInvestReport_descriptor_, &MsgS2CAckInvestReport::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgEndReport_descriptor_, &MsgEndReport::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgBeginBoss_descriptor_, &MsgBeginBoss::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgS2CNotifyBoss_descriptor_, &MsgS2CNotifyBoss::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgS2CNotifyTurret_descriptor_, &MsgS2CNotifyTurret::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgS2CTurretAttack_descriptor_, &MsgS2CTurretAttack::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgEndBoss_descriptor_, &MsgEndBoss::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MsgDefine_2eproto() {
  delete MsgHead::default_instance_;
  delete MsgHead_reflection_;
  delete MsgBeginLogin::default_instance_;
  delete MsgBeginLogin_reflection_;
  delete MsgC2SReqRoleInfo::default_instance_;
  delete MsgC2SReqRoleInfo_reflection_;
  delete MsgS2CAckRoleInfo::default_instance_;
  delete MsgS2CAckRoleInfo_reflection_;
  delete MsgS2CUpdateRoleInfo::default_instance_;
  delete MsgS2CUpdateRoleInfo_reflection_;
  delete MsgS2CNotifyError::default_instance_;
  delete MsgS2CNotifyError_reflection_;
  delete MsgEndLogin::default_instance_;
  delete MsgEndLogin_reflection_;
  delete MsgBeginBigWorld::default_instance_;
  delete MsgBeginBigWorld_reflection_;
  delete MsgC2SReqMarch::default_instance_;
  delete MsgC2SReqMarch_reflection_;
  delete MsgS2CAckMarch::default_instance_;
  delete MsgS2CAckMarch_reflection_;
  delete MsgS2CNewNode::default_instance_;
  delete MsgS2CNewNode_reflection_;
  delete MsgC2SReqDstView::default_instance_;
  delete MsgC2SReqDstView_reflection_;
  delete MsgS2CAckDstView::default_instance_;
  delete MsgS2CAckDstView_reflection_;
  delete MsgC2SReqMineDetail::default_instance_;
  delete MsgC2SReqMineDetail_reflection_;
  delete MsgS2CAckMineDetail::default_instance_;
  delete MsgS2CAckMineDetail_reflection_;
  delete MsgC2SReqLeaveWorld::default_instance_;
  delete MsgC2SReqLeaveWorld_reflection_;
  delete MsgC2SReqInvestigate::default_instance_;
  delete MsgC2SReqInvestigate_reflection_;
  delete MsgC2SReqArmyBackHome::default_instance_;
  delete MsgC2SReqArmyBackHome_reflection_;
  delete MsgEndBigWorld::default_instance_;
  delete MsgEndBigWorld_reflection_;
  delete MsgBeginChat::default_instance_;
  delete MsgBeginChat_reflection_;
  delete MsgC2SReqChat::default_instance_;
  delete MsgC2SReqChat_reflection_;
  delete MsgS2CAckChat::default_instance_;
  delete MsgS2CAckChat_reflection_;
  delete MsgS2CGMResult::default_instance_;
  delete MsgS2CGMResult_reflection_;
  delete MsgEndChat::default_instance_;
  delete MsgEndChat_reflection_;
  delete MsgBeginReport::default_instance_;
  delete MsgBeginReport_reflection_;
  delete MsgC2SReqReport::default_instance_;
  delete MsgC2SReqReport_reflection_;
  delete MsgS2CAckReport::default_instance_;
  delete MsgS2CAckReport_reflection_;
  delete MsgC2SReqFightReport::default_instance_;
  delete MsgC2SReqFightReport_reflection_;
  delete MsgS2CAckFightReport::default_instance_;
  delete MsgS2CAckFightReport_reflection_;
  delete MsgC2SReqInvestReport::default_instance_;
  delete MsgC2SReqInvestReport_reflection_;
  delete MsgS2CAckInvestReport::default_instance_;
  delete MsgS2CAckInvestReport_reflection_;
  delete MsgEndReport::default_instance_;
  delete MsgEndReport_reflection_;
  delete MsgBeginBoss::default_instance_;
  delete MsgBeginBoss_reflection_;
  delete MsgS2CNotifyBoss::default_instance_;
  delete MsgS2CNotifyBoss_reflection_;
  delete MsgS2CNotifyTurret::default_instance_;
  delete MsgS2CNotifyTurret_reflection_;
  delete MsgS2CTurretAttack::default_instance_;
  delete MsgS2CTurretAttack_reflection_;
  delete MsgEndBoss::default_instance_;
  delete MsgEndBoss_reflection_;
}

void protobuf_AddDesc_MsgDefine_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::MsgProto::protobuf_AddDesc_MsgStruct_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017MsgDefine.proto\022\010MsgProto\032\017MsgStruct.p"
    "roto\"\032\n\007MsgHead\022\017\n\007m_token\030\001 \001(\014\"\017\n\rMsgB"
    "eginLogin\"6\n\021MsgC2SReqRoleInfo\022!\n\006m_head"
    "\030\001 \001(\0132\021.MsgProto.MsgHead\"[\n\021MsgS2CAckRo"
    "leInfo\022\"\n\006m_role\030\001 \001(\0132\022.MsgProto.RoleDa"
    "ta\022\"\n\006m_city\030\002 \001(\0132\022.MsgProto.RoleCity\"\317"
    "\001\n\024MsgS2CUpdateRoleInfo\0225\n\007m_types\030\001 \003(\016"
    "2$.MsgProto.MsgS2CUpdateRoleInfo.EType\022\020"
    "\n\010m_values\030\002 \003(\014\"n\n\005EType\022\021\n\rE_army_upda"
    "te\020\000\022\016\n\nE_army_del\020\001\022\n\n\006E_food\020\002\022\n\n\006E_Ir"
    "on\020\003\022\r\n\tE_Crystal\020\004\022\016\n\nE_Soldiers\020\005\022\013\n\007E"
    "_Power\020\006\"\204\002\n\021MsgS2CNotifyError\022>\n\007m_etyp"
    "e\030\001 \001(\0162%.MsgProto.MsgS2CNotifyError.Err"
    "orType:\006E_None\"\256\001\n\tErrorType\022\n\n\006E_None\020\000"
    "\022\014\n\010E_SysErr\020\001\022\r\n\tE_ReLogin\020\002\022\n\n\006E_Kick\020"
    "\003\022\030\n\024E_Move_DstPointError\020\004\022\025\n\021E_Move_So"
    "ldierNum\020\005\022\022\n\016E_Move_NewArmy\020\006\022\017\n\013E_Move"
    "_Boss\020\007\022\026\n\022E_Move_Tower_Owner\020\010\"\r\n\013MsgEn"
    "dLogin\"\022\n\020MsgBeginBigWorld\"x\n\016MsgC2SReqM"
    "arch\022$\n\010m_pos_to\030\001 \001(\0132\022.MsgProto.WorldP"
    "os\022(\n\tm_soldier\030\002 \003(\0132\025.MsgProto.RoleSol"
    "dier\022\026\n\013m_build_res\030\003 \001(\r:\0010\"\020\n\016MsgS2CAc"
    "kMarch\"\225\004\n\rMsgS2CNewNode\022>\n\007m_reson\030\001 \001("
    "\0162 .MsgProto.MsgS2CNewNode.ChgReson:\013cr_"
    "army_new\022#\n\006m_army\030\002 \001(\0132\023.MsgProto.Worl"
    "dArmy\022#\n\006m_city\030\003 \001(\0132\023.MsgProto.WorldCi"
    "ty\022#\n\006m_mine\030\004 \001(\0132\023.MsgProto.WorldMine\022"
    "%\n\007m_tower\030\005 \001(\0132\024.MsgProto.WorldTower\022#"
    "\n\006m_boss\030\006 \001(\0132\023.MsgProto.WorldBoss\"\210\002\n\010"
    "ChgReson\022\017\n\013cr_army_new\020\000\022\023\n\017cr_army_spe"
    "edup\020\001\022\017\n\013cr_army_del\020\002\022\017\n\013cr_army_chg\020\003"
    "\022\017\n\013cr_city_new\020\004\022\017\n\013cr_city_del\020\005\022\022\n\016cr"
    "_mine_update\020\006\022\017\n\013cr_mine_del\020\007\022\020\n\014cr_to"
    "wer_add\020\010\022\020\n\014cr_tower_del\020\t\022\023\n\017cr_tower_"
    "update\020\n\022\017\n\013cr_boss_add\020\013\022\017\n\013cr_boss_del"
    "\020\014\022\022\n\016cr_boss_update\020\r\"\245\001\n\020MsgC2SReqDstV"
    "iew\022!\n\006m_head\030\001 \001(\0132\021.MsgProto.MsgHead\022\022"
    "\n\007m_src_x\030\002 \001(\r:\0010\022\022\n\007m_src_y\030\003 \001(\r:\0010\022\022"
    "\n\007m_dst_x\030\004 \001(\r:\0010\022\022\n\007m_dst_y\030\005 \001(\r:\0010\022\016"
    "\n\003m_w\030\006 \001(\r:\0010\022\016\n\003m_h\030\007 \001(\r:\0010\"\234\002\n\020MsgS2"
    "CAckDstView\022\022\n\007m_dst_x\030\001 \001(\r:\0010\022\022\n\007m_dst"
    "_y\030\002 \001(\r:\0010\022$\n\007m_armys\030\003 \003(\0132\023.MsgProto."
    "WorldArmy\022$\n\007m_mines\030\004 \003(\0132\023.MsgProto.Wo"
    "rldMine\022\"\n\006m_npcs\030\005 \003(\0132\022.MsgProto.World"
    "Npc\022$\n\007m_citys\030\006 \003(\0132\023.MsgProto.WorldCit"
    "y\022%\n\007m_tower\030\007 \003(\0132\024.MsgProto.WorldTower"
    "\022#\n\006m_boss\030\010 \003(\0132\023.MsgProto.WorldBoss\"&\n"
    "\023MsgC2SReqMineDetail\022\017\n\004m_id\030\001 \001(\r:\0010\"\215\001"
    "\n\023MsgS2CAckMineDetail\022\017\n\004m_id\030\001 \001(\r:\0010\022\023"
    "\n\010m_armyid\030\002 \001(\r:\0010\022\020\n\005m_get\030\003 \001(\r:\0010\022\024\n"
    "\tm_get_add\030\004 \001(\r:\0010\022(\n\tm_soldier\030\005 \003(\0132\025"
    ".MsgProto.RoleSoldier\"\025\n\023MsgC2SReqLeaveW"
    "orld\"9\n\024MsgC2SReqInvestigate\022!\n\005m_pos\030\001 "
    "\001(\0132\022.MsgProto.WorldPos\",\n\025MsgC2SReqArmy"
    "BackHome\022\023\n\010m_armyid\030\001 \001(\r:\0010\"\020\n\016MsgEndB"
    "igWorld\"\016\n\014MsgBeginChat\"!\n\rMsgC2SReqChat"
    "\022\020\n\010m_values\030\001 \001(\014\"!\n\rMsgS2CAckChat\022\020\n\010m"
    "_values\030\001 \001(\014\"\207\001\n\016MsgS2CGMResult\022B\n\006m_ty"
    "pe\030\001 \001(\0162\037.MsgProto.MsgS2CGMResult.GMTyp"
    "e:\021E_add_soldier_max\022\020\n\005m_val\030\002 \001(\r:\0010\"\037"
    "\n\006GMType\022\025\n\021E_add_soldier_max\020\000\"\014\n\nMsgEn"
    "dChat\"\020\n\016MsgBeginReport\"\203\001\n\017MsgC2SReqRep"
    "ort\0225\n\006m_type\030\001 \001(\0162%.MsgProto.MsgC2SReq"
    "Report.EReportType\"9\n\013EReportType\022\013\n\007ert"
    "_res\020\001\022\r\n\tert_fight\020\002\022\016\n\nert_invest\020\003\"\224\001"
    "\n\017MsgS2CAckReport\022\"\n\005m_res\030\001 \003(\0132\023.MsgPr"
    "oto.ResReport\022/\n\014m_fight_mini\030\002 \003(\0132\031.Ms"
    "gProto.FightReportMini\022,\n\010m_invest\030\003 \003(\013"
    "2\032.MsgProto.InvestReportMini\"\'\n\024MsgC2SRe"
    "qFightReport\022\017\n\004m_id\030\001 \001(\r:\0010\"\?\n\024MsgS2CA"
    "ckFightReport\022\'\n\010m_report\030\001 \001(\0132\025.MsgPro"
    "to.FightReport\"(\n\025MsgC2SReqInvestReport\022"
    "\017\n\004m_id\030\001 \001(\r:\0010\"H\n\025MsgS2CAckInvestRepor"
    "t\022/\n\010m_report\030\001 \001(\0132\035.MsgProto.Investiga"
    "tionReport\"\016\n\014MsgEndReport\"\016\n\014MsgBeginBo"
    "ss\"\244\001\n\020MsgS2CNotifyBoss\022\?\n\007m_state\030\001 \001(\016"
    "2$.MsgProto.MsgS2CNotifyBoss.BossState:\010"
    "bs_begin\022\023\n\010m_turret\030\002 \001(\r:\0010\022\023\n\010m_bossi"
    "d\030\003 \001(\r:\0010\"%\n\tBossState\022\014\n\010bs_begin\020\000\022\n\n"
    "\006bs_end\020\001\")\n\022MsgS2CNotifyTurret\022\023\n\010m_tur"
    "ret\030\001 \001(\r:\0010\"_\n\022MsgS2CTurretAttack\022!\n\005m_"
    "pos\030\001 \001(\0132\022.MsgProto.WorldPos\022&\n\nm_pos_b"
    "oss\030\002 \001(\0132\022.MsgProto.WorldPos\"\014\n\nMsgEndB"
    "oss", 3323);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MsgDefine.proto", &protobuf_RegisterTypes);
  MsgHead::default_instance_ = new MsgHead();
  MsgBeginLogin::default_instance_ = new MsgBeginLogin();
  MsgC2SReqRoleInfo::default_instance_ = new MsgC2SReqRoleInfo();
  MsgS2CAckRoleInfo::default_instance_ = new MsgS2CAckRoleInfo();
  MsgS2CUpdateRoleInfo::default_instance_ = new MsgS2CUpdateRoleInfo();
  MsgS2CNotifyError::default_instance_ = new MsgS2CNotifyError();
  MsgEndLogin::default_instance_ = new MsgEndLogin();
  MsgBeginBigWorld::default_instance_ = new MsgBeginBigWorld();
  MsgC2SReqMarch::default_instance_ = new MsgC2SReqMarch();
  MsgS2CAckMarch::default_instance_ = new MsgS2CAckMarch();
  MsgS2CNewNode::default_instance_ = new MsgS2CNewNode();
  MsgC2SReqDstView::default_instance_ = new MsgC2SReqDstView();
  MsgS2CAckDstView::default_instance_ = new MsgS2CAckDstView();
  MsgC2SReqMineDetail::default_instance_ = new MsgC2SReqMineDetail();
  MsgS2CAckMineDetail::default_instance_ = new MsgS2CAckMineDetail();
  MsgC2SReqLeaveWorld::default_instance_ = new MsgC2SReqLeaveWorld();
  MsgC2SReqInvestigate::default_instance_ = new MsgC2SReqInvestigate();
  MsgC2SReqArmyBackHome::default_instance_ = new MsgC2SReqArmyBackHome();
  MsgEndBigWorld::default_instance_ = new MsgEndBigWorld();
  MsgBeginChat::default_instance_ = new MsgBeginChat();
  MsgC2SReqChat::default_instance_ = new MsgC2SReqChat();
  MsgS2CAckChat::default_instance_ = new MsgS2CAckChat();
  MsgS2CGMResult::default_instance_ = new MsgS2CGMResult();
  MsgEndChat::default_instance_ = new MsgEndChat();
  MsgBeginReport::default_instance_ = new MsgBeginReport();
  MsgC2SReqReport::default_instance_ = new MsgC2SReqReport();
  MsgS2CAckReport::default_instance_ = new MsgS2CAckReport();
  MsgC2SReqFightReport::default_instance_ = new MsgC2SReqFightReport();
  MsgS2CAckFightReport::default_instance_ = new MsgS2CAckFightReport();
  MsgC2SReqInvestReport::default_instance_ = new MsgC2SReqInvestReport();
  MsgS2CAckInvestReport::default_instance_ = new MsgS2CAckInvestReport();
  MsgEndReport::default_instance_ = new MsgEndReport();
  MsgBeginBoss::default_instance_ = new MsgBeginBoss();
  MsgS2CNotifyBoss::default_instance_ = new MsgS2CNotifyBoss();
  MsgS2CNotifyTurret::default_instance_ = new MsgS2CNotifyTurret();
  MsgS2CTurretAttack::default_instance_ = new MsgS2CTurretAttack();
  MsgEndBoss::default_instance_ = new MsgEndBoss();
  MsgHead::default_instance_->InitAsDefaultInstance();
  MsgBeginLogin::default_instance_->InitAsDefaultInstance();
  MsgC2SReqRoleInfo::default_instance_->InitAsDefaultInstance();
  MsgS2CAckRoleInfo::default_instance_->InitAsDefaultInstance();
  MsgS2CUpdateRoleInfo::default_instance_->InitAsDefaultInstance();
  MsgS2CNotifyError::default_instance_->InitAsDefaultInstance();
  MsgEndLogin::default_instance_->InitAsDefaultInstance();
  MsgBeginBigWorld::default_instance_->InitAsDefaultInstance();
  MsgC2SReqMarch::default_instance_->InitAsDefaultInstance();
  MsgS2CAckMarch::default_instance_->InitAsDefaultInstance();
  MsgS2CNewNode::default_instance_->InitAsDefaultInstance();
  MsgC2SReqDstView::default_instance_->InitAsDefaultInstance();
  MsgS2CAckDstView::default_instance_->InitAsDefaultInstance();
  MsgC2SReqMineDetail::default_instance_->InitAsDefaultInstance();
  MsgS2CAckMineDetail::default_instance_->InitAsDefaultInstance();
  MsgC2SReqLeaveWorld::default_instance_->InitAsDefaultInstance();
  MsgC2SReqInvestigate::default_instance_->InitAsDefaultInstance();
  MsgC2SReqArmyBackHome::default_instance_->InitAsDefaultInstance();
  MsgEndBigWorld::default_instance_->InitAsDefaultInstance();
  MsgBeginChat::default_instance_->InitAsDefaultInstance();
  MsgC2SReqChat::default_instance_->InitAsDefaultInstance();
  MsgS2CAckChat::default_instance_->InitAsDefaultInstance();
  MsgS2CGMResult::default_instance_->InitAsDefaultInstance();
  MsgEndChat::default_instance_->InitAsDefaultInstance();
  MsgBeginReport::default_instance_->InitAsDefaultInstance();
  MsgC2SReqReport::default_instance_->InitAsDefaultInstance();
  MsgS2CAckReport::default_instance_->InitAsDefaultInstance();
  MsgC2SReqFightReport::default_instance_->InitAsDefaultInstance();
  MsgS2CAckFightReport::default_instance_->InitAsDefaultInstance();
  MsgC2SReqInvestReport::default_instance_->InitAsDefaultInstance();
  MsgS2CAckInvestReport::default_instance_->InitAsDefaultInstance();
  MsgEndReport::default_instance_->InitAsDefaultInstance();
  MsgBeginBoss::default_instance_->InitAsDefaultInstance();
  MsgS2CNotifyBoss::default_instance_->InitAsDefaultInstance();
  MsgS2CNotifyTurret::default_instance_->InitAsDefaultInstance();
  MsgS2CTurretAttack::default_instance_->InitAsDefaultInstance();
  MsgEndBoss::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MsgDefine_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MsgDefine_2eproto {
  StaticDescriptorInitializer_MsgDefine_2eproto() {
    protobuf_AddDesc_MsgDefine_2eproto();
  }
} static_descriptor_initializer_MsgDefine_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int MsgHead::kMTokenFieldNumber;
#endif  // !_MSC_VER

MsgHead::MsgHead()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgProto.MsgHead)
}

void MsgHead::InitAsDefaultInstance() {
}

MsgHead::MsgHead(const MsgHead& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgProto.MsgHead)
}

void MsgHead::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  m_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgHead::~MsgHead() {
  // @@protoc_insertion_point(destructor:MsgProto.MsgHead)
  SharedDtor();
}

void MsgHead::SharedDtor() {
  if (m_token_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete m_token_;
  }
  if (this != default_instance_) {
  }
}

void MsgHead::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgHead::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgHead_descriptor_;
}

const MsgHead& MsgHead::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDefine_2eproto();
  return *default_instance_;
}

MsgHead* MsgHead::default_instance_ = NULL;

MsgHead* MsgHead::New() const {
  return new MsgHead;
}

void MsgHead::Clear() {
  if (has_m_token()) {
    if (m_token_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      m_token_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgHead::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgProto.MsgHead)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes m_token = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_m_token()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgProto.MsgHead)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgProto.MsgHead)
  return false;
#undef DO_
}

void MsgHead::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgProto.MsgHead)
  // optional bytes m_token = 1;
  if (has_m_token()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->m_token(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgProto.MsgHead)
}

::google::protobuf::uint8* MsgHead::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgProto.MsgHead)
  // optional bytes m_token = 1;
  if (has_m_token()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->m_token(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgProto.MsgHead)
  return target;
}

int MsgHead::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bytes m_token = 1;
    if (has_m_token()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->m_token());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgHead::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgHead* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgHead*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgHead::MergeFrom(const MsgHead& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_token()) {
      set_m_token(from.m_token());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgHead::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgHead::CopyFrom(const MsgHead& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgHead::IsInitialized() const {

  return true;
}

void MsgHead::Swap(MsgHead* other) {
  if (other != this) {
    std::swap(m_token_, other->m_token_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgHead::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgHead_descriptor_;
  metadata.reflection = MsgHead_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

MsgBeginLogin::MsgBeginLogin()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgProto.MsgBeginLogin)
}

void MsgBeginLogin::InitAsDefaultInstance() {
}

MsgBeginLogin::MsgBeginLogin(const MsgBeginLogin& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgProto.MsgBeginLogin)
}

void MsgBeginLogin::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgBeginLogin::~MsgBeginLogin() {
  // @@protoc_insertion_point(destructor:MsgProto.MsgBeginLogin)
  SharedDtor();
}

void MsgBeginLogin::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgBeginLogin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgBeginLogin::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgBeginLogin_descriptor_;
}

const MsgBeginLogin& MsgBeginLogin::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDefine_2eproto();
  return *default_instance_;
}

MsgBeginLogin* MsgBeginLogin::default_instance_ = NULL;

MsgBeginLogin* MsgBeginLogin::New() const {
  return new MsgBeginLogin;
}

void MsgBeginLogin::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgBeginLogin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgProto.MsgBeginLogin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:MsgProto.MsgBeginLogin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgProto.MsgBeginLogin)
  return false;
#undef DO_
}

void MsgBeginLogin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgProto.MsgBeginLogin)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgProto.MsgBeginLogin)
}

::google::protobuf::uint8* MsgBeginLogin::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgProto.MsgBeginLogin)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgProto.MsgBeginLogin)
  return target;
}

int MsgBeginLogin::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgBeginLogin::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgBeginLogin* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgBeginLogin*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgBeginLogin::MergeFrom(const MsgBeginLogin& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgBeginLogin::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgBeginLogin::CopyFrom(const MsgBeginLogin& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgBeginLogin::IsInitialized() const {

  return true;
}

void MsgBeginLogin::Swap(MsgBeginLogin* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgBeginLogin::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgBeginLogin_descriptor_;
  metadata.reflection = MsgBeginLogin_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgC2SReqRoleInfo::kMHeadFieldNumber;
#endif  // !_MSC_VER

MsgC2SReqRoleInfo::MsgC2SReqRoleInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgProto.MsgC2SReqRoleInfo)
}

void MsgC2SReqRoleInfo::InitAsDefaultInstance() {
  m_head_ = const_cast< ::MsgProto::MsgHead*>(&::MsgProto::MsgHead::default_instance());
}

MsgC2SReqRoleInfo::MsgC2SReqRoleInfo(const MsgC2SReqRoleInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgProto.MsgC2SReqRoleInfo)
}

void MsgC2SReqRoleInfo::SharedCtor() {
  _cached_size_ = 0;
  m_head_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgC2SReqRoleInfo::~MsgC2SReqRoleInfo() {
  // @@protoc_insertion_point(destructor:MsgProto.MsgC2SReqRoleInfo)
  SharedDtor();
}

void MsgC2SReqRoleInfo::SharedDtor() {
  if (this != default_instance_) {
    delete m_head_;
  }
}

void MsgC2SReqRoleInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgC2SReqRoleInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgC2SReqRoleInfo_descriptor_;
}

const MsgC2SReqRoleInfo& MsgC2SReqRoleInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDefine_2eproto();
  return *default_instance_;
}

MsgC2SReqRoleInfo* MsgC2SReqRoleInfo::default_instance_ = NULL;

MsgC2SReqRoleInfo* MsgC2SReqRoleInfo::New() const {
  return new MsgC2SReqRoleInfo;
}

void MsgC2SReqRoleInfo::Clear() {
  if (has_m_head()) {
    if (m_head_ != NULL) m_head_->::MsgProto::MsgHead::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgC2SReqRoleInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgProto.MsgC2SReqRoleInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgProto.MsgHead m_head = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_m_head()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgProto.MsgC2SReqRoleInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgProto.MsgC2SReqRoleInfo)
  return false;
#undef DO_
}

void MsgC2SReqRoleInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgProto.MsgC2SReqRoleInfo)
  // optional .MsgProto.MsgHead m_head = 1;
  if (has_m_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->m_head(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgProto.MsgC2SReqRoleInfo)
}

::google::protobuf::uint8* MsgC2SReqRoleInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgProto.MsgC2SReqRoleInfo)
  // optional .MsgProto.MsgHead m_head = 1;
  if (has_m_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->m_head(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgProto.MsgC2SReqRoleInfo)
  return target;
}

int MsgC2SReqRoleInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgProto.MsgHead m_head = 1;
    if (has_m_head()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->m_head());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgC2SReqRoleInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgC2SReqRoleInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgC2SReqRoleInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgC2SReqRoleInfo::MergeFrom(const MsgC2SReqRoleInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_head()) {
      mutable_m_head()->::MsgProto::MsgHead::MergeFrom(from.m_head());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgC2SReqRoleInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgC2SReqRoleInfo::CopyFrom(const MsgC2SReqRoleInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgC2SReqRoleInfo::IsInitialized() const {

  return true;
}

void MsgC2SReqRoleInfo::Swap(MsgC2SReqRoleInfo* other) {
  if (other != this) {
    std::swap(m_head_, other->m_head_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgC2SReqRoleInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgC2SReqRoleInfo_descriptor_;
  metadata.reflection = MsgC2SReqRoleInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgS2CAckRoleInfo::kMRoleFieldNumber;
const int MsgS2CAckRoleInfo::kMCityFieldNumber;
#endif  // !_MSC_VER

MsgS2CAckRoleInfo::MsgS2CAckRoleInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgProto.MsgS2CAckRoleInfo)
}

void MsgS2CAckRoleInfo::InitAsDefaultInstance() {
  m_role_ = const_cast< ::MsgProto::RoleData*>(&::MsgProto::RoleData::default_instance());
  m_city_ = const_cast< ::MsgProto::RoleCity*>(&::MsgProto::RoleCity::default_instance());
}

MsgS2CAckRoleInfo::MsgS2CAckRoleInfo(const MsgS2CAckRoleInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgProto.MsgS2CAckRoleInfo)
}

void MsgS2CAckRoleInfo::SharedCtor() {
  _cached_size_ = 0;
  m_role_ = NULL;
  m_city_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgS2CAckRoleInfo::~MsgS2CAckRoleInfo() {
  // @@protoc_insertion_point(destructor:MsgProto.MsgS2CAckRoleInfo)
  SharedDtor();
}

void MsgS2CAckRoleInfo::SharedDtor() {
  if (this != default_instance_) {
    delete m_role_;
    delete m_city_;
  }
}

void MsgS2CAckRoleInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgS2CAckRoleInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgS2CAckRoleInfo_descriptor_;
}

const MsgS2CAckRoleInfo& MsgS2CAckRoleInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDefine_2eproto();
  return *default_instance_;
}

MsgS2CAckRoleInfo* MsgS2CAckRoleInfo::default_instance_ = NULL;

MsgS2CAckRoleInfo* MsgS2CAckRoleInfo::New() const {
  return new MsgS2CAckRoleInfo;
}

void MsgS2CAckRoleInfo::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_m_role()) {
      if (m_role_ != NULL) m_role_->::MsgProto::RoleData::Clear();
    }
    if (has_m_city()) {
      if (m_city_ != NULL) m_city_->::MsgProto::RoleCity::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgS2CAckRoleInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgProto.MsgS2CAckRoleInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgProto.RoleData m_role = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_m_role()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_m_city;
        break;
      }

      // optional .MsgProto.RoleCity m_city = 2;
      case 2: {
        if (tag == 18) {
         parse_m_city:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_m_city()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgProto.MsgS2CAckRoleInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgProto.MsgS2CAckRoleInfo)
  return false;
#undef DO_
}

void MsgS2CAckRoleInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgProto.MsgS2CAckRoleInfo)
  // optional .MsgProto.RoleData m_role = 1;
  if (has_m_role()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->m_role(), output);
  }

  // optional .MsgProto.RoleCity m_city = 2;
  if (has_m_city()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->m_city(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgProto.MsgS2CAckRoleInfo)
}

::google::protobuf::uint8* MsgS2CAckRoleInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgProto.MsgS2CAckRoleInfo)
  // optional .MsgProto.RoleData m_role = 1;
  if (has_m_role()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->m_role(), target);
  }

  // optional .MsgProto.RoleCity m_city = 2;
  if (has_m_city()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->m_city(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgProto.MsgS2CAckRoleInfo)
  return target;
}

int MsgS2CAckRoleInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgProto.RoleData m_role = 1;
    if (has_m_role()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->m_role());
    }

    // optional .MsgProto.RoleCity m_city = 2;
    if (has_m_city()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->m_city());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgS2CAckRoleInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgS2CAckRoleInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgS2CAckRoleInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgS2CAckRoleInfo::MergeFrom(const MsgS2CAckRoleInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_role()) {
      mutable_m_role()->::MsgProto::RoleData::MergeFrom(from.m_role());
    }
    if (from.has_m_city()) {
      mutable_m_city()->::MsgProto::RoleCity::MergeFrom(from.m_city());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgS2CAckRoleInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgS2CAckRoleInfo::CopyFrom(const MsgS2CAckRoleInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgS2CAckRoleInfo::IsInitialized() const {

  return true;
}

void MsgS2CAckRoleInfo::Swap(MsgS2CAckRoleInfo* other) {
  if (other != this) {
    std::swap(m_role_, other->m_role_);
    std::swap(m_city_, other->m_city_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgS2CAckRoleInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgS2CAckRoleInfo_descriptor_;
  metadata.reflection = MsgS2CAckRoleInfo_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* MsgS2CUpdateRoleInfo_EType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgS2CUpdateRoleInfo_EType_descriptor_;
}
bool MsgS2CUpdateRoleInfo_EType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MsgS2CUpdateRoleInfo_EType MsgS2CUpdateRoleInfo::E_army_update;
const MsgS2CUpdateRoleInfo_EType MsgS2CUpdateRoleInfo::E_army_del;
const MsgS2CUpdateRoleInfo_EType MsgS2CUpdateRoleInfo::E_food;
const MsgS2CUpdateRoleInfo_EType MsgS2CUpdateRoleInfo::E_Iron;
const MsgS2CUpdateRoleInfo_EType MsgS2CUpdateRoleInfo::E_Crystal;
const MsgS2CUpdateRoleInfo_EType MsgS2CUpdateRoleInfo::E_Soldiers;
const MsgS2CUpdateRoleInfo_EType MsgS2CUpdateRoleInfo::E_Power;
const MsgS2CUpdateRoleInfo_EType MsgS2CUpdateRoleInfo::EType_MIN;
const MsgS2CUpdateRoleInfo_EType MsgS2CUpdateRoleInfo::EType_MAX;
const int MsgS2CUpdateRoleInfo::EType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int MsgS2CUpdateRoleInfo::kMTypesFieldNumber;
const int MsgS2CUpdateRoleInfo::kMValuesFieldNumber;
#endif  // !_MSC_VER

MsgS2CUpdateRoleInfo::MsgS2CUpdateRoleInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgProto.MsgS2CUpdateRoleInfo)
}

void MsgS2CUpdateRoleInfo::InitAsDefaultInstance() {
}

MsgS2CUpdateRoleInfo::MsgS2CUpdateRoleInfo(const MsgS2CUpdateRoleInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgProto.MsgS2CUpdateRoleInfo)
}

void MsgS2CUpdateRoleInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgS2CUpdateRoleInfo::~MsgS2CUpdateRoleInfo() {
  // @@protoc_insertion_point(destructor:MsgProto.MsgS2CUpdateRoleInfo)
  SharedDtor();
}

void MsgS2CUpdateRoleInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgS2CUpdateRoleInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgS2CUpdateRoleInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgS2CUpdateRoleInfo_descriptor_;
}

const MsgS2CUpdateRoleInfo& MsgS2CUpdateRoleInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDefine_2eproto();
  return *default_instance_;
}

MsgS2CUpdateRoleInfo* MsgS2CUpdateRoleInfo::default_instance_ = NULL;

MsgS2CUpdateRoleInfo* MsgS2CUpdateRoleInfo::New() const {
  return new MsgS2CUpdateRoleInfo;
}

void MsgS2CUpdateRoleInfo::Clear() {
  m_types_.Clear();
  m_values_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgS2CUpdateRoleInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgProto.MsgS2CUpdateRoleInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .MsgProto.MsgS2CUpdateRoleInfo.EType m_types = 1;
      case 1: {
        if (tag == 8) {
         parse_m_types:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgProto::MsgS2CUpdateRoleInfo_EType_IsValid(value)) {
            add_m_types(static_cast< ::MsgProto::MsgS2CUpdateRoleInfo_EType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedEnumNoInline(
                 input,
                 &::MsgProto::MsgS2CUpdateRoleInfo_EType_IsValid,
                 this->mutable_m_types())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_m_types;
        if (input->ExpectTag(18)) goto parse_m_values;
        break;
      }

      // repeated bytes m_values = 2;
      case 2: {
        if (tag == 18) {
         parse_m_values:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_m_values()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_m_values;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgProto.MsgS2CUpdateRoleInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgProto.MsgS2CUpdateRoleInfo)
  return false;
#undef DO_
}

void MsgS2CUpdateRoleInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgProto.MsgS2CUpdateRoleInfo)
  // repeated .MsgProto.MsgS2CUpdateRoleInfo.EType m_types = 1;
  for (int i = 0; i < this->m_types_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->m_types(i), output);
  }

  // repeated bytes m_values = 2;
  for (int i = 0; i < this->m_values_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->m_values(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgProto.MsgS2CUpdateRoleInfo)
}

::google::protobuf::uint8* MsgS2CUpdateRoleInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgProto.MsgS2CUpdateRoleInfo)
  // repeated .MsgProto.MsgS2CUpdateRoleInfo.EType m_types = 1;
  for (int i = 0; i < this->m_types_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->m_types(i), target);
  }

  // repeated bytes m_values = 2;
  for (int i = 0; i < this->m_values_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(2, this->m_values(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgProto.MsgS2CUpdateRoleInfo)
  return target;
}

int MsgS2CUpdateRoleInfo::ByteSize() const {
  int total_size = 0;

  // repeated .MsgProto.MsgS2CUpdateRoleInfo.EType m_types = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->m_types_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->m_types(i));
    }
    total_size += 1 * this->m_types_size() + data_size;
  }

  // repeated bytes m_values = 2;
  total_size += 1 * this->m_values_size();
  for (int i = 0; i < this->m_values_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->m_values(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgS2CUpdateRoleInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgS2CUpdateRoleInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgS2CUpdateRoleInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgS2CUpdateRoleInfo::MergeFrom(const MsgS2CUpdateRoleInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_types_.MergeFrom(from.m_types_);
  m_values_.MergeFrom(from.m_values_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgS2CUpdateRoleInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgS2CUpdateRoleInfo::CopyFrom(const MsgS2CUpdateRoleInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgS2CUpdateRoleInfo::IsInitialized() const {

  return true;
}

void MsgS2CUpdateRoleInfo::Swap(MsgS2CUpdateRoleInfo* other) {
  if (other != this) {
    m_types_.Swap(&other->m_types_);
    m_values_.Swap(&other->m_values_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgS2CUpdateRoleInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgS2CUpdateRoleInfo_descriptor_;
  metadata.reflection = MsgS2CUpdateRoleInfo_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* MsgS2CNotifyError_ErrorType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgS2CNotifyError_ErrorType_descriptor_;
}
bool MsgS2CNotifyError_ErrorType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MsgS2CNotifyError_ErrorType MsgS2CNotifyError::E_None;
const MsgS2CNotifyError_ErrorType MsgS2CNotifyError::E_SysErr;
const MsgS2CNotifyError_ErrorType MsgS2CNotifyError::E_ReLogin;
const MsgS2CNotifyError_ErrorType MsgS2CNotifyError::E_Kick;
const MsgS2CNotifyError_ErrorType MsgS2CNotifyError::E_Move_DstPointError;
const MsgS2CNotifyError_ErrorType MsgS2CNotifyError::E_Move_SoldierNum;
const MsgS2CNotifyError_ErrorType MsgS2CNotifyError::E_Move_NewArmy;
const MsgS2CNotifyError_ErrorType MsgS2CNotifyError::E_Move_Boss;
const MsgS2CNotifyError_ErrorType MsgS2CNotifyError::E_Move_Tower_Owner;
const MsgS2CNotifyError_ErrorType MsgS2CNotifyError::ErrorType_MIN;
const MsgS2CNotifyError_ErrorType MsgS2CNotifyError::ErrorType_MAX;
const int MsgS2CNotifyError::ErrorType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int MsgS2CNotifyError::kMEtypeFieldNumber;
#endif  // !_MSC_VER

MsgS2CNotifyError::MsgS2CNotifyError()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgProto.MsgS2CNotifyError)
}

void MsgS2CNotifyError::InitAsDefaultInstance() {
}

MsgS2CNotifyError::MsgS2CNotifyError(const MsgS2CNotifyError& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgProto.MsgS2CNotifyError)
}

void MsgS2CNotifyError::SharedCtor() {
  _cached_size_ = 0;
  m_etype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgS2CNotifyError::~MsgS2CNotifyError() {
  // @@protoc_insertion_point(destructor:MsgProto.MsgS2CNotifyError)
  SharedDtor();
}

void MsgS2CNotifyError::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgS2CNotifyError::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgS2CNotifyError::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgS2CNotifyError_descriptor_;
}

const MsgS2CNotifyError& MsgS2CNotifyError::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDefine_2eproto();
  return *default_instance_;
}

MsgS2CNotifyError* MsgS2CNotifyError::default_instance_ = NULL;

MsgS2CNotifyError* MsgS2CNotifyError::New() const {
  return new MsgS2CNotifyError;
}

void MsgS2CNotifyError::Clear() {
  m_etype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgS2CNotifyError::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgProto.MsgS2CNotifyError)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgProto.MsgS2CNotifyError.ErrorType m_etype = 1 [default = E_None];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgProto::MsgS2CNotifyError_ErrorType_IsValid(value)) {
            set_m_etype(static_cast< ::MsgProto::MsgS2CNotifyError_ErrorType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgProto.MsgS2CNotifyError)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgProto.MsgS2CNotifyError)
  return false;
#undef DO_
}

void MsgS2CNotifyError::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgProto.MsgS2CNotifyError)
  // optional .MsgProto.MsgS2CNotifyError.ErrorType m_etype = 1 [default = E_None];
  if (has_m_etype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->m_etype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgProto.MsgS2CNotifyError)
}

::google::protobuf::uint8* MsgS2CNotifyError::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgProto.MsgS2CNotifyError)
  // optional .MsgProto.MsgS2CNotifyError.ErrorType m_etype = 1 [default = E_None];
  if (has_m_etype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->m_etype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgProto.MsgS2CNotifyError)
  return target;
}

int MsgS2CNotifyError::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgProto.MsgS2CNotifyError.ErrorType m_etype = 1 [default = E_None];
    if (has_m_etype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->m_etype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgS2CNotifyError::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgS2CNotifyError* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgS2CNotifyError*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgS2CNotifyError::MergeFrom(const MsgS2CNotifyError& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_etype()) {
      set_m_etype(from.m_etype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgS2CNotifyError::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgS2CNotifyError::CopyFrom(const MsgS2CNotifyError& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgS2CNotifyError::IsInitialized() const {

  return true;
}

void MsgS2CNotifyError::Swap(MsgS2CNotifyError* other) {
  if (other != this) {
    std::swap(m_etype_, other->m_etype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgS2CNotifyError::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgS2CNotifyError_descriptor_;
  metadata.reflection = MsgS2CNotifyError_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

MsgEndLogin::MsgEndLogin()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgProto.MsgEndLogin)
}

void MsgEndLogin::InitAsDefaultInstance() {
}

MsgEndLogin::MsgEndLogin(const MsgEndLogin& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgProto.MsgEndLogin)
}

void MsgEndLogin::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgEndLogin::~MsgEndLogin() {
  // @@protoc_insertion_point(destructor:MsgProto.MsgEndLogin)
  SharedDtor();
}

void MsgEndLogin::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgEndLogin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgEndLogin::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgEndLogin_descriptor_;
}

const MsgEndLogin& MsgEndLogin::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDefine_2eproto();
  return *default_instance_;
}

MsgEndLogin* MsgEndLogin::default_instance_ = NULL;

MsgEndLogin* MsgEndLogin::New() const {
  return new MsgEndLogin;
}

void MsgEndLogin::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgEndLogin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgProto.MsgEndLogin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:MsgProto.MsgEndLogin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgProto.MsgEndLogin)
  return false;
#undef DO_
}

void MsgEndLogin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgProto.MsgEndLogin)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgProto.MsgEndLogin)
}

::google::protobuf::uint8* MsgEndLogin::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgProto.MsgEndLogin)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgProto.MsgEndLogin)
  return target;
}

int MsgEndLogin::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgEndLogin::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgEndLogin* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgEndLogin*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgEndLogin::MergeFrom(const MsgEndLogin& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgEndLogin::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgEndLogin::CopyFrom(const MsgEndLogin& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgEndLogin::IsInitialized() const {

  return true;
}

void MsgEndLogin::Swap(MsgEndLogin* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgEndLogin::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgEndLogin_descriptor_;
  metadata.reflection = MsgEndLogin_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

MsgBeginBigWorld::MsgBeginBigWorld()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgProto.MsgBeginBigWorld)
}

void MsgBeginBigWorld::InitAsDefaultInstance() {
}

MsgBeginBigWorld::MsgBeginBigWorld(const MsgBeginBigWorld& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgProto.MsgBeginBigWorld)
}

void MsgBeginBigWorld::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgBeginBigWorld::~MsgBeginBigWorld() {
  // @@protoc_insertion_point(destructor:MsgProto.MsgBeginBigWorld)
  SharedDtor();
}

void MsgBeginBigWorld::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgBeginBigWorld::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgBeginBigWorld::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgBeginBigWorld_descriptor_;
}

const MsgBeginBigWorld& MsgBeginBigWorld::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDefine_2eproto();
  return *default_instance_;
}

MsgBeginBigWorld* MsgBeginBigWorld::default_instance_ = NULL;

MsgBeginBigWorld* MsgBeginBigWorld::New() const {
  return new MsgBeginBigWorld;
}

void MsgBeginBigWorld::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgBeginBigWorld::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgProto.MsgBeginBigWorld)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:MsgProto.MsgBeginBigWorld)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgProto.MsgBeginBigWorld)
  return false;
#undef DO_
}

void MsgBeginBigWorld::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgProto.MsgBeginBigWorld)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgProto.MsgBeginBigWorld)
}

::google::protobuf::uint8* MsgBeginBigWorld::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgProto.MsgBeginBigWorld)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgProto.MsgBeginBigWorld)
  return target;
}

int MsgBeginBigWorld::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgBeginBigWorld::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgBeginBigWorld* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgBeginBigWorld*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgBeginBigWorld::MergeFrom(const MsgBeginBigWorld& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgBeginBigWorld::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgBeginBigWorld::CopyFrom(const MsgBeginBigWorld& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgBeginBigWorld::IsInitialized() const {

  return true;
}

void MsgBeginBigWorld::Swap(MsgBeginBigWorld* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgBeginBigWorld::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgBeginBigWorld_descriptor_;
  metadata.reflection = MsgBeginBigWorld_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgC2SReqMarch::kMPosToFieldNumber;
const int MsgC2SReqMarch::kMSoldierFieldNumber;
const int MsgC2SReqMarch::kMBuildResFieldNumber;
#endif  // !_MSC_VER

MsgC2SReqMarch::MsgC2SReqMarch()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgProto.MsgC2SReqMarch)
}

void MsgC2SReqMarch::InitAsDefaultInstance() {
  m_pos_to_ = const_cast< ::MsgProto::WorldPos*>(&::MsgProto::WorldPos::default_instance());
}

MsgC2SReqMarch::MsgC2SReqMarch(const MsgC2SReqMarch& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgProto.MsgC2SReqMarch)
}

void MsgC2SReqMarch::SharedCtor() {
  _cached_size_ = 0;
  m_pos_to_ = NULL;
  m_build_res_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgC2SReqMarch::~MsgC2SReqMarch() {
  // @@protoc_insertion_point(destructor:MsgProto.MsgC2SReqMarch)
  SharedDtor();
}

void MsgC2SReqMarch::SharedDtor() {
  if (this != default_instance_) {
    delete m_pos_to_;
  }
}

void MsgC2SReqMarch::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgC2SReqMarch::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgC2SReqMarch_descriptor_;
}

const MsgC2SReqMarch& MsgC2SReqMarch::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDefine_2eproto();
  return *default_instance_;
}

MsgC2SReqMarch* MsgC2SReqMarch::default_instance_ = NULL;

MsgC2SReqMarch* MsgC2SReqMarch::New() const {
  return new MsgC2SReqMarch;
}

void MsgC2SReqMarch::Clear() {
  if (_has_bits_[0 / 32] & 5) {
    if (has_m_pos_to()) {
      if (m_pos_to_ != NULL) m_pos_to_->::MsgProto::WorldPos::Clear();
    }
    m_build_res_ = 0u;
  }
  m_soldier_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgC2SReqMarch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgProto.MsgC2SReqMarch)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgProto.WorldPos m_pos_to = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_m_pos_to()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_m_soldier;
        break;
      }

      // repeated .MsgProto.RoleSoldier m_soldier = 2;
      case 2: {
        if (tag == 18) {
         parse_m_soldier:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_soldier()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_m_soldier;
        if (input->ExpectTag(24)) goto parse_m_build_res;
        break;
      }

      // optional uint32 m_build_res = 3 [default = 0];
      case 3: {
        if (tag == 24) {
         parse_m_build_res:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_build_res_)));
          set_has_m_build_res();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgProto.MsgC2SReqMarch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgProto.MsgC2SReqMarch)
  return false;
#undef DO_
}

void MsgC2SReqMarch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgProto.MsgC2SReqMarch)
  // optional .MsgProto.WorldPos m_pos_to = 1;
  if (has_m_pos_to()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->m_pos_to(), output);
  }

  // repeated .MsgProto.RoleSoldier m_soldier = 2;
  for (int i = 0; i < this->m_soldier_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->m_soldier(i), output);
  }

  // optional uint32 m_build_res = 3 [default = 0];
  if (has_m_build_res()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->m_build_res(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgProto.MsgC2SReqMarch)
}

::google::protobuf::uint8* MsgC2SReqMarch::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgProto.MsgC2SReqMarch)
  // optional .MsgProto.WorldPos m_pos_to = 1;
  if (has_m_pos_to()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->m_pos_to(), target);
  }

  // repeated .MsgProto.RoleSoldier m_soldier = 2;
  for (int i = 0; i < this->m_soldier_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->m_soldier(i), target);
  }

  // optional uint32 m_build_res = 3 [default = 0];
  if (has_m_build_res()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->m_build_res(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgProto.MsgC2SReqMarch)
  return target;
}

int MsgC2SReqMarch::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgProto.WorldPos m_pos_to = 1;
    if (has_m_pos_to()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->m_pos_to());
    }

    // optional uint32 m_build_res = 3 [default = 0];
    if (has_m_build_res()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_build_res());
    }

  }
  // repeated .MsgProto.RoleSoldier m_soldier = 2;
  total_size += 1 * this->m_soldier_size();
  for (int i = 0; i < this->m_soldier_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_soldier(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgC2SReqMarch::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgC2SReqMarch* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgC2SReqMarch*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgC2SReqMarch::MergeFrom(const MsgC2SReqMarch& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_soldier_.MergeFrom(from.m_soldier_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_pos_to()) {
      mutable_m_pos_to()->::MsgProto::WorldPos::MergeFrom(from.m_pos_to());
    }
    if (from.has_m_build_res()) {
      set_m_build_res(from.m_build_res());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgC2SReqMarch::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgC2SReqMarch::CopyFrom(const MsgC2SReqMarch& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgC2SReqMarch::IsInitialized() const {

  return true;
}

void MsgC2SReqMarch::Swap(MsgC2SReqMarch* other) {
  if (other != this) {
    std::swap(m_pos_to_, other->m_pos_to_);
    m_soldier_.Swap(&other->m_soldier_);
    std::swap(m_build_res_, other->m_build_res_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgC2SReqMarch::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgC2SReqMarch_descriptor_;
  metadata.reflection = MsgC2SReqMarch_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

MsgS2CAckMarch::MsgS2CAckMarch()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgProto.MsgS2CAckMarch)
}

void MsgS2CAckMarch::InitAsDefaultInstance() {
}

MsgS2CAckMarch::MsgS2CAckMarch(const MsgS2CAckMarch& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgProto.MsgS2CAckMarch)
}

void MsgS2CAckMarch::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgS2CAckMarch::~MsgS2CAckMarch() {
  // @@protoc_insertion_point(destructor:MsgProto.MsgS2CAckMarch)
  SharedDtor();
}

void MsgS2CAckMarch::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgS2CAckMarch::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgS2CAckMarch::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgS2CAckMarch_descriptor_;
}

const MsgS2CAckMarch& MsgS2CAckMarch::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDefine_2eproto();
  return *default_instance_;
}

MsgS2CAckMarch* MsgS2CAckMarch::default_instance_ = NULL;

MsgS2CAckMarch* MsgS2CAckMarch::New() const {
  return new MsgS2CAckMarch;
}

void MsgS2CAckMarch::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgS2CAckMarch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgProto.MsgS2CAckMarch)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:MsgProto.MsgS2CAckMarch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgProto.MsgS2CAckMarch)
  return false;
#undef DO_
}

void MsgS2CAckMarch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgProto.MsgS2CAckMarch)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgProto.MsgS2CAckMarch)
}

::google::protobuf::uint8* MsgS2CAckMarch::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgProto.MsgS2CAckMarch)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgProto.MsgS2CAckMarch)
  return target;
}

int MsgS2CAckMarch::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgS2CAckMarch::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgS2CAckMarch* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgS2CAckMarch*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgS2CAckMarch::MergeFrom(const MsgS2CAckMarch& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgS2CAckMarch::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgS2CAckMarch::CopyFrom(const MsgS2CAckMarch& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgS2CAckMarch::IsInitialized() const {

  return true;
}

void MsgS2CAckMarch::Swap(MsgS2CAckMarch* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgS2CAckMarch::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgS2CAckMarch_descriptor_;
  metadata.reflection = MsgS2CAckMarch_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* MsgS2CNewNode_ChgReson_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgS2CNewNode_ChgReson_descriptor_;
}
bool MsgS2CNewNode_ChgReson_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MsgS2CNewNode_ChgReson MsgS2CNewNode::cr_army_new;
const MsgS2CNewNode_ChgReson MsgS2CNewNode::cr_army_speedup;
const MsgS2CNewNode_ChgReson MsgS2CNewNode::cr_army_del;
const MsgS2CNewNode_ChgReson MsgS2CNewNode::cr_army_chg;
const MsgS2CNewNode_ChgReson MsgS2CNewNode::cr_city_new;
const MsgS2CNewNode_ChgReson MsgS2CNewNode::cr_city_del;
const MsgS2CNewNode_ChgReson MsgS2CNewNode::cr_mine_update;
const MsgS2CNewNode_ChgReson MsgS2CNewNode::cr_mine_del;
const MsgS2CNewNode_ChgReson MsgS2CNewNode::cr_tower_add;
const MsgS2CNewNode_ChgReson MsgS2CNewNode::cr_tower_del;
const MsgS2CNewNode_ChgReson MsgS2CNewNode::cr_tower_update;
const MsgS2CNewNode_ChgReson MsgS2CNewNode::cr_boss_add;
const MsgS2CNewNode_ChgReson MsgS2CNewNode::cr_boss_del;
const MsgS2CNewNode_ChgReson MsgS2CNewNode::cr_boss_update;
const MsgS2CNewNode_ChgReson MsgS2CNewNode::ChgReson_MIN;
const MsgS2CNewNode_ChgReson MsgS2CNewNode::ChgReson_MAX;
const int MsgS2CNewNode::ChgReson_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int MsgS2CNewNode::kMResonFieldNumber;
const int MsgS2CNewNode::kMArmyFieldNumber;
const int MsgS2CNewNode::kMCityFieldNumber;
const int MsgS2CNewNode::kMMineFieldNumber;
const int MsgS2CNewNode::kMTowerFieldNumber;
const int MsgS2CNewNode::kMBossFieldNumber;
#endif  // !_MSC_VER

MsgS2CNewNode::MsgS2CNewNode()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgProto.MsgS2CNewNode)
}

void MsgS2CNewNode::InitAsDefaultInstance() {
  m_army_ = const_cast< ::MsgProto::WorldArmy*>(&::MsgProto::WorldArmy::default_instance());
  m_city_ = const_cast< ::MsgProto::WorldCity*>(&::MsgProto::WorldCity::default_instance());
  m_mine_ = const_cast< ::MsgProto::WorldMine*>(&::MsgProto::WorldMine::default_instance());
  m_tower_ = const_cast< ::MsgProto::WorldTower*>(&::MsgProto::WorldTower::default_instance());
  m_boss_ = const_cast< ::MsgProto::WorldBoss*>(&::MsgProto::WorldBoss::default_instance());
}

MsgS2CNewNode::MsgS2CNewNode(const MsgS2CNewNode& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgProto.MsgS2CNewNode)
}

void MsgS2CNewNode::SharedCtor() {
  _cached_size_ = 0;
  m_reson_ = 0;
  m_army_ = NULL;
  m_city_ = NULL;
  m_mine_ = NULL;
  m_tower_ = NULL;
  m_boss_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgS2CNewNode::~MsgS2CNewNode() {
  // @@protoc_insertion_point(destructor:MsgProto.MsgS2CNewNode)
  SharedDtor();
}

void MsgS2CNewNode::SharedDtor() {
  if (this != default_instance_) {
    delete m_army_;
    delete m_city_;
    delete m_mine_;
    delete m_tower_;
    delete m_boss_;
  }
}

void MsgS2CNewNode::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgS2CNewNode::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgS2CNewNode_descriptor_;
}

const MsgS2CNewNode& MsgS2CNewNode::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDefine_2eproto();
  return *default_instance_;
}

MsgS2CNewNode* MsgS2CNewNode::default_instance_ = NULL;

MsgS2CNewNode* MsgS2CNewNode::New() const {
  return new MsgS2CNewNode;
}

void MsgS2CNewNode::Clear() {
  if (_has_bits_[0 / 32] & 63) {
    m_reson_ = 0;
    if (has_m_army()) {
      if (m_army_ != NULL) m_army_->::MsgProto::WorldArmy::Clear();
    }
    if (has_m_city()) {
      if (m_city_ != NULL) m_city_->::MsgProto::WorldCity::Clear();
    }
    if (has_m_mine()) {
      if (m_mine_ != NULL) m_mine_->::MsgProto::WorldMine::Clear();
    }
    if (has_m_tower()) {
      if (m_tower_ != NULL) m_tower_->::MsgProto::WorldTower::Clear();
    }
    if (has_m_boss()) {
      if (m_boss_ != NULL) m_boss_->::MsgProto::WorldBoss::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgS2CNewNode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgProto.MsgS2CNewNode)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgProto.MsgS2CNewNode.ChgReson m_reson = 1 [default = cr_army_new];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgProto::MsgS2CNewNode_ChgReson_IsValid(value)) {
            set_m_reson(static_cast< ::MsgProto::MsgS2CNewNode_ChgReson >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_m_army;
        break;
      }

      // optional .MsgProto.WorldArmy m_army = 2;
      case 2: {
        if (tag == 18) {
         parse_m_army:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_m_army()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_m_city;
        break;
      }

      // optional .MsgProto.WorldCity m_city = 3;
      case 3: {
        if (tag == 26) {
         parse_m_city:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_m_city()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_m_mine;
        break;
      }

      // optional .MsgProto.WorldMine m_mine = 4;
      case 4: {
        if (tag == 34) {
         parse_m_mine:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_m_mine()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_m_tower;
        break;
      }

      // optional .MsgProto.WorldTower m_tower = 5;
      case 5: {
        if (tag == 42) {
         parse_m_tower:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_m_tower()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_m_boss;
        break;
      }

      // optional .MsgProto.WorldBoss m_boss = 6;
      case 6: {
        if (tag == 50) {
         parse_m_boss:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_m_boss()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgProto.MsgS2CNewNode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgProto.MsgS2CNewNode)
  return false;
#undef DO_
}

void MsgS2CNewNode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgProto.MsgS2CNewNode)
  // optional .MsgProto.MsgS2CNewNode.ChgReson m_reson = 1 [default = cr_army_new];
  if (has_m_reson()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->m_reson(), output);
  }

  // optional .MsgProto.WorldArmy m_army = 2;
  if (has_m_army()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->m_army(), output);
  }

  // optional .MsgProto.WorldCity m_city = 3;
  if (has_m_city()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->m_city(), output);
  }

  // optional .MsgProto.WorldMine m_mine = 4;
  if (has_m_mine()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->m_mine(), output);
  }

  // optional .MsgProto.WorldTower m_tower = 5;
  if (has_m_tower()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->m_tower(), output);
  }

  // optional .MsgProto.WorldBoss m_boss = 6;
  if (has_m_boss()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->m_boss(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgProto.MsgS2CNewNode)
}

::google::protobuf::uint8* MsgS2CNewNode::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgProto.MsgS2CNewNode)
  // optional .MsgProto.MsgS2CNewNode.ChgReson m_reson = 1 [default = cr_army_new];
  if (has_m_reson()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->m_reson(), target);
  }

  // optional .MsgProto.WorldArmy m_army = 2;
  if (has_m_army()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->m_army(), target);
  }

  // optional .MsgProto.WorldCity m_city = 3;
  if (has_m_city()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->m_city(), target);
  }

  // optional .MsgProto.WorldMine m_mine = 4;
  if (has_m_mine()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->m_mine(), target);
  }

  // optional .MsgProto.WorldTower m_tower = 5;
  if (has_m_tower()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->m_tower(), target);
  }

  // optional .MsgProto.WorldBoss m_boss = 6;
  if (has_m_boss()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->m_boss(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgProto.MsgS2CNewNode)
  return target;
}

int MsgS2CNewNode::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgProto.MsgS2CNewNode.ChgReson m_reson = 1 [default = cr_army_new];
    if (has_m_reson()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->m_reson());
    }

    // optional .MsgProto.WorldArmy m_army = 2;
    if (has_m_army()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->m_army());
    }

    // optional .MsgProto.WorldCity m_city = 3;
    if (has_m_city()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->m_city());
    }

    // optional .MsgProto.WorldMine m_mine = 4;
    if (has_m_mine()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->m_mine());
    }

    // optional .MsgProto.WorldTower m_tower = 5;
    if (has_m_tower()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->m_tower());
    }

    // optional .MsgProto.WorldBoss m_boss = 6;
    if (has_m_boss()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->m_boss());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgS2CNewNode::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgS2CNewNode* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgS2CNewNode*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgS2CNewNode::MergeFrom(const MsgS2CNewNode& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_reson()) {
      set_m_reson(from.m_reson());
    }
    if (from.has_m_army()) {
      mutable_m_army()->::MsgProto::WorldArmy::MergeFrom(from.m_army());
    }
    if (from.has_m_city()) {
      mutable_m_city()->::MsgProto::WorldCity::MergeFrom(from.m_city());
    }
    if (from.has_m_mine()) {
      mutable_m_mine()->::MsgProto::WorldMine::MergeFrom(from.m_mine());
    }
    if (from.has_m_tower()) {
      mutable_m_tower()->::MsgProto::WorldTower::MergeFrom(from.m_tower());
    }
    if (from.has_m_boss()) {
      mutable_m_boss()->::MsgProto::WorldBoss::MergeFrom(from.m_boss());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgS2CNewNode::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgS2CNewNode::CopyFrom(const MsgS2CNewNode& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgS2CNewNode::IsInitialized() const {

  return true;
}

void MsgS2CNewNode::Swap(MsgS2CNewNode* other) {
  if (other != this) {
    std::swap(m_reson_, other->m_reson_);
    std::swap(m_army_, other->m_army_);
    std::swap(m_city_, other->m_city_);
    std::swap(m_mine_, other->m_mine_);
    std::swap(m_tower_, other->m_tower_);
    std::swap(m_boss_, other->m_boss_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgS2CNewNode::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgS2CNewNode_descriptor_;
  metadata.reflection = MsgS2CNewNode_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgC2SReqDstView::kMHeadFieldNumber;
const int MsgC2SReqDstView::kMSrcXFieldNumber;
const int MsgC2SReqDstView::kMSrcYFieldNumber;
const int MsgC2SReqDstView::kMDstXFieldNumber;
const int MsgC2SReqDstView::kMDstYFieldNumber;
const int MsgC2SReqDstView::kMWFieldNumber;
const int MsgC2SReqDstView::kMHFieldNumber;
#endif  // !_MSC_VER

MsgC2SReqDstView::MsgC2SReqDstView()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgProto.MsgC2SReqDstView)
}

void MsgC2SReqDstView::InitAsDefaultInstance() {
  m_head_ = const_cast< ::MsgProto::MsgHead*>(&::MsgProto::MsgHead::default_instance());
}

MsgC2SReqDstView::MsgC2SReqDstView(const MsgC2SReqDstView& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgProto.MsgC2SReqDstView)
}

void MsgC2SReqDstView::SharedCtor() {
  _cached_size_ = 0;
  m_head_ = NULL;
  m_src_x_ = 0u;
  m_src_y_ = 0u;
  m_dst_x_ = 0u;
  m_dst_y_ = 0u;
  m_w_ = 0u;
  m_h_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgC2SReqDstView::~MsgC2SReqDstView() {
  // @@protoc_insertion_point(destructor:MsgProto.MsgC2SReqDstView)
  SharedDtor();
}

void MsgC2SReqDstView::SharedDtor() {
  if (this != default_instance_) {
    delete m_head_;
  }
}

void MsgC2SReqDstView::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgC2SReqDstView::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgC2SReqDstView_descriptor_;
}

const MsgC2SReqDstView& MsgC2SReqDstView::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDefine_2eproto();
  return *default_instance_;
}

MsgC2SReqDstView* MsgC2SReqDstView::default_instance_ = NULL;

MsgC2SReqDstView* MsgC2SReqDstView::New() const {
  return new MsgC2SReqDstView;
}

void MsgC2SReqDstView::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgC2SReqDstView*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 127) {
    ZR_(m_src_x_, m_h_);
    if (has_m_head()) {
      if (m_head_ != NULL) m_head_->::MsgProto::MsgHead::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgC2SReqDstView::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgProto.MsgC2SReqDstView)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgProto.MsgHead m_head = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_m_head()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_m_src_x;
        break;
      }

      // optional uint32 m_src_x = 2 [default = 0];
      case 2: {
        if (tag == 16) {
         parse_m_src_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_src_x_)));
          set_has_m_src_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_m_src_y;
        break;
      }

      // optional uint32 m_src_y = 3 [default = 0];
      case 3: {
        if (tag == 24) {
         parse_m_src_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_src_y_)));
          set_has_m_src_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_m_dst_x;
        break;
      }

      // optional uint32 m_dst_x = 4 [default = 0];
      case 4: {
        if (tag == 32) {
         parse_m_dst_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_dst_x_)));
          set_has_m_dst_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_m_dst_y;
        break;
      }

      // optional uint32 m_dst_y = 5 [default = 0];
      case 5: {
        if (tag == 40) {
         parse_m_dst_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_dst_y_)));
          set_has_m_dst_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_m_w;
        break;
      }

      // optional uint32 m_w = 6 [default = 0];
      case 6: {
        if (tag == 48) {
         parse_m_w:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_w_)));
          set_has_m_w();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_m_h;
        break;
      }

      // optional uint32 m_h = 7 [default = 0];
      case 7: {
        if (tag == 56) {
         parse_m_h:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_h_)));
          set_has_m_h();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgProto.MsgC2SReqDstView)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgProto.MsgC2SReqDstView)
  return false;
#undef DO_
}

void MsgC2SReqDstView::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgProto.MsgC2SReqDstView)
  // optional .MsgProto.MsgHead m_head = 1;
  if (has_m_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->m_head(), output);
  }

  // optional uint32 m_src_x = 2 [default = 0];
  if (has_m_src_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->m_src_x(), output);
  }

  // optional uint32 m_src_y = 3 [default = 0];
  if (has_m_src_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->m_src_y(), output);
  }

  // optional uint32 m_dst_x = 4 [default = 0];
  if (has_m_dst_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->m_dst_x(), output);
  }

  // optional uint32 m_dst_y = 5 [default = 0];
  if (has_m_dst_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->m_dst_y(), output);
  }

  // optional uint32 m_w = 6 [default = 0];
  if (has_m_w()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->m_w(), output);
  }

  // optional uint32 m_h = 7 [default = 0];
  if (has_m_h()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->m_h(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgProto.MsgC2SReqDstView)
}

::google::protobuf::uint8* MsgC2SReqDstView::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgProto.MsgC2SReqDstView)
  // optional .MsgProto.MsgHead m_head = 1;
  if (has_m_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->m_head(), target);
  }

  // optional uint32 m_src_x = 2 [default = 0];
  if (has_m_src_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->m_src_x(), target);
  }

  // optional uint32 m_src_y = 3 [default = 0];
  if (has_m_src_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->m_src_y(), target);
  }

  // optional uint32 m_dst_x = 4 [default = 0];
  if (has_m_dst_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->m_dst_x(), target);
  }

  // optional uint32 m_dst_y = 5 [default = 0];
  if (has_m_dst_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->m_dst_y(), target);
  }

  // optional uint32 m_w = 6 [default = 0];
  if (has_m_w()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->m_w(), target);
  }

  // optional uint32 m_h = 7 [default = 0];
  if (has_m_h()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->m_h(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgProto.MsgC2SReqDstView)
  return target;
}

int MsgC2SReqDstView::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgProto.MsgHead m_head = 1;
    if (has_m_head()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->m_head());
    }

    // optional uint32 m_src_x = 2 [default = 0];
    if (has_m_src_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_src_x());
    }

    // optional uint32 m_src_y = 3 [default = 0];
    if (has_m_src_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_src_y());
    }

    // optional uint32 m_dst_x = 4 [default = 0];
    if (has_m_dst_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_dst_x());
    }

    // optional uint32 m_dst_y = 5 [default = 0];
    if (has_m_dst_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_dst_y());
    }

    // optional uint32 m_w = 6 [default = 0];
    if (has_m_w()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_w());
    }

    // optional uint32 m_h = 7 [default = 0];
    if (has_m_h()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_h());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgC2SReqDstView::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgC2SReqDstView* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgC2SReqDstView*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgC2SReqDstView::MergeFrom(const MsgC2SReqDstView& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_head()) {
      mutable_m_head()->::MsgProto::MsgHead::MergeFrom(from.m_head());
    }
    if (from.has_m_src_x()) {
      set_m_src_x(from.m_src_x());
    }
    if (from.has_m_src_y()) {
      set_m_src_y(from.m_src_y());
    }
    if (from.has_m_dst_x()) {
      set_m_dst_x(from.m_dst_x());
    }
    if (from.has_m_dst_y()) {
      set_m_dst_y(from.m_dst_y());
    }
    if (from.has_m_w()) {
      set_m_w(from.m_w());
    }
    if (from.has_m_h()) {
      set_m_h(from.m_h());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgC2SReqDstView::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgC2SReqDstView::CopyFrom(const MsgC2SReqDstView& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgC2SReqDstView::IsInitialized() const {

  return true;
}

void MsgC2SReqDstView::Swap(MsgC2SReqDstView* other) {
  if (other != this) {
    std::swap(m_head_, other->m_head_);
    std::swap(m_src_x_, other->m_src_x_);
    std::swap(m_src_y_, other->m_src_y_);
    std::swap(m_dst_x_, other->m_dst_x_);
    std::swap(m_dst_y_, other->m_dst_y_);
    std::swap(m_w_, other->m_w_);
    std::swap(m_h_, other->m_h_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgC2SReqDstView::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgC2SReqDstView_descriptor_;
  metadata.reflection = MsgC2SReqDstView_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgS2CAckDstView::kMDstXFieldNumber;
const int MsgS2CAckDstView::kMDstYFieldNumber;
const int MsgS2CAckDstView::kMArmysFieldNumber;
const int MsgS2CAckDstView::kMMinesFieldNumber;
const int MsgS2CAckDstView::kMNpcsFieldNumber;
const int MsgS2CAckDstView::kMCitysFieldNumber;
const int MsgS2CAckDstView::kMTowerFieldNumber;
const int MsgS2CAckDstView::kMBossFieldNumber;
#endif  // !_MSC_VER

MsgS2CAckDstView::MsgS2CAckDstView()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgProto.MsgS2CAckDstView)
}

void MsgS2CAckDstView::InitAsDefaultInstance() {
}

MsgS2CAckDstView::MsgS2CAckDstView(const MsgS2CAckDstView& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgProto.MsgS2CAckDstView)
}

void MsgS2CAckDstView::SharedCtor() {
  _cached_size_ = 0;
  m_dst_x_ = 0u;
  m_dst_y_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgS2CAckDstView::~MsgS2CAckDstView() {
  // @@protoc_insertion_point(destructor:MsgProto.MsgS2CAckDstView)
  SharedDtor();
}

void MsgS2CAckDstView::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgS2CAckDstView::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgS2CAckDstView::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgS2CAckDstView_descriptor_;
}

const MsgS2CAckDstView& MsgS2CAckDstView::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDefine_2eproto();
  return *default_instance_;
}

MsgS2CAckDstView* MsgS2CAckDstView::default_instance_ = NULL;

MsgS2CAckDstView* MsgS2CAckDstView::New() const {
  return new MsgS2CAckDstView;
}

void MsgS2CAckDstView::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgS2CAckDstView*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(m_dst_x_, m_dst_y_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  m_armys_.Clear();
  m_mines_.Clear();
  m_npcs_.Clear();
  m_citys_.Clear();
  m_tower_.Clear();
  m_boss_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgS2CAckDstView::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgProto.MsgS2CAckDstView)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 m_dst_x = 1 [default = 0];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_dst_x_)));
          set_has_m_dst_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_m_dst_y;
        break;
      }

      // optional uint32 m_dst_y = 2 [default = 0];
      case 2: {
        if (tag == 16) {
         parse_m_dst_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_dst_y_)));
          set_has_m_dst_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_m_armys;
        break;
      }

      // repeated .MsgProto.WorldArmy m_armys = 3;
      case 3: {
        if (tag == 26) {
         parse_m_armys:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_armys()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_m_armys;
        if (input->ExpectTag(34)) goto parse_m_mines;
        break;
      }

      // repeated .MsgProto.WorldMine m_mines = 4;
      case 4: {
        if (tag == 34) {
         parse_m_mines:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_mines()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_m_mines;
        if (input->ExpectTag(42)) goto parse_m_npcs;
        break;
      }

      // repeated .MsgProto.WorldNpc m_npcs = 5;
      case 5: {
        if (tag == 42) {
         parse_m_npcs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_npcs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_m_npcs;
        if (input->ExpectTag(50)) goto parse_m_citys;
        break;
      }

      // repeated .MsgProto.WorldCity m_citys = 6;
      case 6: {
        if (tag == 50) {
         parse_m_citys:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_citys()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_m_citys;
        if (input->ExpectTag(58)) goto parse_m_tower;
        break;
      }

      // repeated .MsgProto.WorldTower m_tower = 7;
      case 7: {
        if (tag == 58) {
         parse_m_tower:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_tower()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_m_tower;
        if (input->ExpectTag(66)) goto parse_m_boss;
        break;
      }

      // repeated .MsgProto.WorldBoss m_boss = 8;
      case 8: {
        if (tag == 66) {
         parse_m_boss:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_boss()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_m_boss;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgProto.MsgS2CAckDstView)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgProto.MsgS2CAckDstView)
  return false;
#undef DO_
}

void MsgS2CAckDstView::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgProto.MsgS2CAckDstView)
  // optional uint32 m_dst_x = 1 [default = 0];
  if (has_m_dst_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->m_dst_x(), output);
  }

  // optional uint32 m_dst_y = 2 [default = 0];
  if (has_m_dst_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->m_dst_y(), output);
  }

  // repeated .MsgProto.WorldArmy m_armys = 3;
  for (int i = 0; i < this->m_armys_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->m_armys(i), output);
  }

  // repeated .MsgProto.WorldMine m_mines = 4;
  for (int i = 0; i < this->m_mines_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->m_mines(i), output);
  }

  // repeated .MsgProto.WorldNpc m_npcs = 5;
  for (int i = 0; i < this->m_npcs_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->m_npcs(i), output);
  }

  // repeated .MsgProto.WorldCity m_citys = 6;
  for (int i = 0; i < this->m_citys_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->m_citys(i), output);
  }

  // repeated .MsgProto.WorldTower m_tower = 7;
  for (int i = 0; i < this->m_tower_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->m_tower(i), output);
  }

  // repeated .MsgProto.WorldBoss m_boss = 8;
  for (int i = 0; i < this->m_boss_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->m_boss(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgProto.MsgS2CAckDstView)
}

::google::protobuf::uint8* MsgS2CAckDstView::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgProto.MsgS2CAckDstView)
  // optional uint32 m_dst_x = 1 [default = 0];
  if (has_m_dst_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->m_dst_x(), target);
  }

  // optional uint32 m_dst_y = 2 [default = 0];
  if (has_m_dst_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->m_dst_y(), target);
  }

  // repeated .MsgProto.WorldArmy m_armys = 3;
  for (int i = 0; i < this->m_armys_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->m_armys(i), target);
  }

  // repeated .MsgProto.WorldMine m_mines = 4;
  for (int i = 0; i < this->m_mines_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->m_mines(i), target);
  }

  // repeated .MsgProto.WorldNpc m_npcs = 5;
  for (int i = 0; i < this->m_npcs_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->m_npcs(i), target);
  }

  // repeated .MsgProto.WorldCity m_citys = 6;
  for (int i = 0; i < this->m_citys_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->m_citys(i), target);
  }

  // repeated .MsgProto.WorldTower m_tower = 7;
  for (int i = 0; i < this->m_tower_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->m_tower(i), target);
  }

  // repeated .MsgProto.WorldBoss m_boss = 8;
  for (int i = 0; i < this->m_boss_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->m_boss(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgProto.MsgS2CAckDstView)
  return target;
}

int MsgS2CAckDstView::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 m_dst_x = 1 [default = 0];
    if (has_m_dst_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_dst_x());
    }

    // optional uint32 m_dst_y = 2 [default = 0];
    if (has_m_dst_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_dst_y());
    }

  }
  // repeated .MsgProto.WorldArmy m_armys = 3;
  total_size += 1 * this->m_armys_size();
  for (int i = 0; i < this->m_armys_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_armys(i));
  }

  // repeated .MsgProto.WorldMine m_mines = 4;
  total_size += 1 * this->m_mines_size();
  for (int i = 0; i < this->m_mines_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_mines(i));
  }

  // repeated .MsgProto.WorldNpc m_npcs = 5;
  total_size += 1 * this->m_npcs_size();
  for (int i = 0; i < this->m_npcs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_npcs(i));
  }

  // repeated .MsgProto.WorldCity m_citys = 6;
  total_size += 1 * this->m_citys_size();
  for (int i = 0; i < this->m_citys_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_citys(i));
  }

  // repeated .MsgProto.WorldTower m_tower = 7;
  total_size += 1 * this->m_tower_size();
  for (int i = 0; i < this->m_tower_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_tower(i));
  }

  // repeated .MsgProto.WorldBoss m_boss = 8;
  total_size += 1 * this->m_boss_size();
  for (int i = 0; i < this->m_boss_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_boss(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgS2CAckDstView::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgS2CAckDstView* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgS2CAckDstView*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgS2CAckDstView::MergeFrom(const MsgS2CAckDstView& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_armys_.MergeFrom(from.m_armys_);
  m_mines_.MergeFrom(from.m_mines_);
  m_npcs_.MergeFrom(from.m_npcs_);
  m_citys_.MergeFrom(from.m_citys_);
  m_tower_.MergeFrom(from.m_tower_);
  m_boss_.MergeFrom(from.m_boss_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_dst_x()) {
      set_m_dst_x(from.m_dst_x());
    }
    if (from.has_m_dst_y()) {
      set_m_dst_y(from.m_dst_y());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgS2CAckDstView::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgS2CAckDstView::CopyFrom(const MsgS2CAckDstView& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgS2CAckDstView::IsInitialized() const {

  return true;
}

void MsgS2CAckDstView::Swap(MsgS2CAckDstView* other) {
  if (other != this) {
    std::swap(m_dst_x_, other->m_dst_x_);
    std::swap(m_dst_y_, other->m_dst_y_);
    m_armys_.Swap(&other->m_armys_);
    m_mines_.Swap(&other->m_mines_);
    m_npcs_.Swap(&other->m_npcs_);
    m_citys_.Swap(&other->m_citys_);
    m_tower_.Swap(&other->m_tower_);
    m_boss_.Swap(&other->m_boss_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgS2CAckDstView::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgS2CAckDstView_descriptor_;
  metadata.reflection = MsgS2CAckDstView_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgC2SReqMineDetail::kMIdFieldNumber;
#endif  // !_MSC_VER

MsgC2SReqMineDetail::MsgC2SReqMineDetail()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgProto.MsgC2SReqMineDetail)
}

void MsgC2SReqMineDetail::InitAsDefaultInstance() {
}

MsgC2SReqMineDetail::MsgC2SReqMineDetail(const MsgC2SReqMineDetail& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgProto.MsgC2SReqMineDetail)
}

void MsgC2SReqMineDetail::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgC2SReqMineDetail::~MsgC2SReqMineDetail() {
  // @@protoc_insertion_point(destructor:MsgProto.MsgC2SReqMineDetail)
  SharedDtor();
}

void MsgC2SReqMineDetail::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgC2SReqMineDetail::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgC2SReqMineDetail::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgC2SReqMineDetail_descriptor_;
}

const MsgC2SReqMineDetail& MsgC2SReqMineDetail::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDefine_2eproto();
  return *default_instance_;
}

MsgC2SReqMineDetail* MsgC2SReqMineDetail::default_instance_ = NULL;

MsgC2SReqMineDetail* MsgC2SReqMineDetail::New() const {
  return new MsgC2SReqMineDetail;
}

void MsgC2SReqMineDetail::Clear() {
  m_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgC2SReqMineDetail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgProto.MsgC2SReqMineDetail)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 m_id = 1 [default = 0];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgProto.MsgC2SReqMineDetail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgProto.MsgC2SReqMineDetail)
  return false;
#undef DO_
}

void MsgC2SReqMineDetail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgProto.MsgC2SReqMineDetail)
  // optional uint32 m_id = 1 [default = 0];
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgProto.MsgC2SReqMineDetail)
}

::google::protobuf::uint8* MsgC2SReqMineDetail::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgProto.MsgC2SReqMineDetail)
  // optional uint32 m_id = 1 [default = 0];
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgProto.MsgC2SReqMineDetail)
  return target;
}

int MsgC2SReqMineDetail::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 m_id = 1 [default = 0];
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgC2SReqMineDetail::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgC2SReqMineDetail* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgC2SReqMineDetail*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgC2SReqMineDetail::MergeFrom(const MsgC2SReqMineDetail& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgC2SReqMineDetail::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgC2SReqMineDetail::CopyFrom(const MsgC2SReqMineDetail& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgC2SReqMineDetail::IsInitialized() const {

  return true;
}

void MsgC2SReqMineDetail::Swap(MsgC2SReqMineDetail* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgC2SReqMineDetail::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgC2SReqMineDetail_descriptor_;
  metadata.reflection = MsgC2SReqMineDetail_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgS2CAckMineDetail::kMIdFieldNumber;
const int MsgS2CAckMineDetail::kMArmyidFieldNumber;
const int MsgS2CAckMineDetail::kMGetFieldNumber;
const int MsgS2CAckMineDetail::kMGetAddFieldNumber;
const int MsgS2CAckMineDetail::kMSoldierFieldNumber;
#endif  // !_MSC_VER

MsgS2CAckMineDetail::MsgS2CAckMineDetail()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgProto.MsgS2CAckMineDetail)
}

void MsgS2CAckMineDetail::InitAsDefaultInstance() {
}

MsgS2CAckMineDetail::MsgS2CAckMineDetail(const MsgS2CAckMineDetail& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgProto.MsgS2CAckMineDetail)
}

void MsgS2CAckMineDetail::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0u;
  m_armyid_ = 0u;
  m_get_ = 0u;
  m_get_add_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgS2CAckMineDetail::~MsgS2CAckMineDetail() {
  // @@protoc_insertion_point(destructor:MsgProto.MsgS2CAckMineDetail)
  SharedDtor();
}

void MsgS2CAckMineDetail::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgS2CAckMineDetail::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgS2CAckMineDetail::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgS2CAckMineDetail_descriptor_;
}

const MsgS2CAckMineDetail& MsgS2CAckMineDetail::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDefine_2eproto();
  return *default_instance_;
}

MsgS2CAckMineDetail* MsgS2CAckMineDetail::default_instance_ = NULL;

MsgS2CAckMineDetail* MsgS2CAckMineDetail::New() const {
  return new MsgS2CAckMineDetail;
}

void MsgS2CAckMineDetail::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgS2CAckMineDetail*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(m_id_, m_get_add_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  m_soldier_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgS2CAckMineDetail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgProto.MsgS2CAckMineDetail)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 m_id = 1 [default = 0];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_m_armyid;
        break;
      }

      // optional uint32 m_armyid = 2 [default = 0];
      case 2: {
        if (tag == 16) {
         parse_m_armyid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_armyid_)));
          set_has_m_armyid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_m_get;
        break;
      }

      // optional uint32 m_get = 3 [default = 0];
      case 3: {
        if (tag == 24) {
         parse_m_get:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_get_)));
          set_has_m_get();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_m_get_add;
        break;
      }

      // optional uint32 m_get_add = 4 [default = 0];
      case 4: {
        if (tag == 32) {
         parse_m_get_add:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_get_add_)));
          set_has_m_get_add();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_m_soldier;
        break;
      }

      // repeated .MsgProto.RoleSoldier m_soldier = 5;
      case 5: {
        if (tag == 42) {
         parse_m_soldier:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_soldier()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_m_soldier;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgProto.MsgS2CAckMineDetail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgProto.MsgS2CAckMineDetail)
  return false;
#undef DO_
}

void MsgS2CAckMineDetail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgProto.MsgS2CAckMineDetail)
  // optional uint32 m_id = 1 [default = 0];
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->m_id(), output);
  }

  // optional uint32 m_armyid = 2 [default = 0];
  if (has_m_armyid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->m_armyid(), output);
  }

  // optional uint32 m_get = 3 [default = 0];
  if (has_m_get()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->m_get(), output);
  }

  // optional uint32 m_get_add = 4 [default = 0];
  if (has_m_get_add()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->m_get_add(), output);
  }

  // repeated .MsgProto.RoleSoldier m_soldier = 5;
  for (int i = 0; i < this->m_soldier_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->m_soldier(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgProto.MsgS2CAckMineDetail)
}

::google::protobuf::uint8* MsgS2CAckMineDetail::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgProto.MsgS2CAckMineDetail)
  // optional uint32 m_id = 1 [default = 0];
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->m_id(), target);
  }

  // optional uint32 m_armyid = 2 [default = 0];
  if (has_m_armyid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->m_armyid(), target);
  }

  // optional uint32 m_get = 3 [default = 0];
  if (has_m_get()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->m_get(), target);
  }

  // optional uint32 m_get_add = 4 [default = 0];
  if (has_m_get_add()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->m_get_add(), target);
  }

  // repeated .MsgProto.RoleSoldier m_soldier = 5;
  for (int i = 0; i < this->m_soldier_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->m_soldier(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgProto.MsgS2CAckMineDetail)
  return target;
}

int MsgS2CAckMineDetail::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 m_id = 1 [default = 0];
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_id());
    }

    // optional uint32 m_armyid = 2 [default = 0];
    if (has_m_armyid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_armyid());
    }

    // optional uint32 m_get = 3 [default = 0];
    if (has_m_get()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_get());
    }

    // optional uint32 m_get_add = 4 [default = 0];
    if (has_m_get_add()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_get_add());
    }

  }
  // repeated .MsgProto.RoleSoldier m_soldier = 5;
  total_size += 1 * this->m_soldier_size();
  for (int i = 0; i < this->m_soldier_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_soldier(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgS2CAckMineDetail::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgS2CAckMineDetail* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgS2CAckMineDetail*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgS2CAckMineDetail::MergeFrom(const MsgS2CAckMineDetail& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_soldier_.MergeFrom(from.m_soldier_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_armyid()) {
      set_m_armyid(from.m_armyid());
    }
    if (from.has_m_get()) {
      set_m_get(from.m_get());
    }
    if (from.has_m_get_add()) {
      set_m_get_add(from.m_get_add());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgS2CAckMineDetail::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgS2CAckMineDetail::CopyFrom(const MsgS2CAckMineDetail& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgS2CAckMineDetail::IsInitialized() const {

  return true;
}

void MsgS2CAckMineDetail::Swap(MsgS2CAckMineDetail* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_armyid_, other->m_armyid_);
    std::swap(m_get_, other->m_get_);
    std::swap(m_get_add_, other->m_get_add_);
    m_soldier_.Swap(&other->m_soldier_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgS2CAckMineDetail::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgS2CAckMineDetail_descriptor_;
  metadata.reflection = MsgS2CAckMineDetail_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

MsgC2SReqLeaveWorld::MsgC2SReqLeaveWorld()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgProto.MsgC2SReqLeaveWorld)
}

void MsgC2SReqLeaveWorld::InitAsDefaultInstance() {
}

MsgC2SReqLeaveWorld::MsgC2SReqLeaveWorld(const MsgC2SReqLeaveWorld& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgProto.MsgC2SReqLeaveWorld)
}

void MsgC2SReqLeaveWorld::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgC2SReqLeaveWorld::~MsgC2SReqLeaveWorld() {
  // @@protoc_insertion_point(destructor:MsgProto.MsgC2SReqLeaveWorld)
  SharedDtor();
}

void MsgC2SReqLeaveWorld::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgC2SReqLeaveWorld::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgC2SReqLeaveWorld::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgC2SReqLeaveWorld_descriptor_;
}

const MsgC2SReqLeaveWorld& MsgC2SReqLeaveWorld::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDefine_2eproto();
  return *default_instance_;
}

MsgC2SReqLeaveWorld* MsgC2SReqLeaveWorld::default_instance_ = NULL;

MsgC2SReqLeaveWorld* MsgC2SReqLeaveWorld::New() const {
  return new MsgC2SReqLeaveWorld;
}

void MsgC2SReqLeaveWorld::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgC2SReqLeaveWorld::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgProto.MsgC2SReqLeaveWorld)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:MsgProto.MsgC2SReqLeaveWorld)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgProto.MsgC2SReqLeaveWorld)
  return false;
#undef DO_
}

void MsgC2SReqLeaveWorld::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgProto.MsgC2SReqLeaveWorld)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgProto.MsgC2SReqLeaveWorld)
}

::google::protobuf::uint8* MsgC2SReqLeaveWorld::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgProto.MsgC2SReqLeaveWorld)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgProto.MsgC2SReqLeaveWorld)
  return target;
}

int MsgC2SReqLeaveWorld::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgC2SReqLeaveWorld::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgC2SReqLeaveWorld* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgC2SReqLeaveWorld*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgC2SReqLeaveWorld::MergeFrom(const MsgC2SReqLeaveWorld& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgC2SReqLeaveWorld::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgC2SReqLeaveWorld::CopyFrom(const MsgC2SReqLeaveWorld& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgC2SReqLeaveWorld::IsInitialized() const {

  return true;
}

void MsgC2SReqLeaveWorld::Swap(MsgC2SReqLeaveWorld* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgC2SReqLeaveWorld::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgC2SReqLeaveWorld_descriptor_;
  metadata.reflection = MsgC2SReqLeaveWorld_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgC2SReqInvestigate::kMPosFieldNumber;
#endif  // !_MSC_VER

MsgC2SReqInvestigate::MsgC2SReqInvestigate()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgProto.MsgC2SReqInvestigate)
}

void MsgC2SReqInvestigate::InitAsDefaultInstance() {
  m_pos_ = const_cast< ::MsgProto::WorldPos*>(&::MsgProto::WorldPos::default_instance());
}

MsgC2SReqInvestigate::MsgC2SReqInvestigate(const MsgC2SReqInvestigate& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgProto.MsgC2SReqInvestigate)
}

void MsgC2SReqInvestigate::SharedCtor() {
  _cached_size_ = 0;
  m_pos_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgC2SReqInvestigate::~MsgC2SReqInvestigate() {
  // @@protoc_insertion_point(destructor:MsgProto.MsgC2SReqInvestigate)
  SharedDtor();
}

void MsgC2SReqInvestigate::SharedDtor() {
  if (this != default_instance_) {
    delete m_pos_;
  }
}

void MsgC2SReqInvestigate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgC2SReqInvestigate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgC2SReqInvestigate_descriptor_;
}

const MsgC2SReqInvestigate& MsgC2SReqInvestigate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDefine_2eproto();
  return *default_instance_;
}

MsgC2SReqInvestigate* MsgC2SReqInvestigate::default_instance_ = NULL;

MsgC2SReqInvestigate* MsgC2SReqInvestigate::New() const {
  return new MsgC2SReqInvestigate;
}

void MsgC2SReqInvestigate::Clear() {
  if (has_m_pos()) {
    if (m_pos_ != NULL) m_pos_->::MsgProto::WorldPos::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgC2SReqInvestigate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgProto.MsgC2SReqInvestigate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgProto.WorldPos m_pos = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_m_pos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgProto.MsgC2SReqInvestigate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgProto.MsgC2SReqInvestigate)
  return false;
#undef DO_
}

void MsgC2SReqInvestigate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgProto.MsgC2SReqInvestigate)
  // optional .MsgProto.WorldPos m_pos = 1;
  if (has_m_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->m_pos(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgProto.MsgC2SReqInvestigate)
}

::google::protobuf::uint8* MsgC2SReqInvestigate::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgProto.MsgC2SReqInvestigate)
  // optional .MsgProto.WorldPos m_pos = 1;
  if (has_m_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->m_pos(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgProto.MsgC2SReqInvestigate)
  return target;
}

int MsgC2SReqInvestigate::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgProto.WorldPos m_pos = 1;
    if (has_m_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->m_pos());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgC2SReqInvestigate::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgC2SReqInvestigate* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgC2SReqInvestigate*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgC2SReqInvestigate::MergeFrom(const MsgC2SReqInvestigate& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_pos()) {
      mutable_m_pos()->::MsgProto::WorldPos::MergeFrom(from.m_pos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgC2SReqInvestigate::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgC2SReqInvestigate::CopyFrom(const MsgC2SReqInvestigate& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgC2SReqInvestigate::IsInitialized() const {

  return true;
}

void MsgC2SReqInvestigate::Swap(MsgC2SReqInvestigate* other) {
  if (other != this) {
    std::swap(m_pos_, other->m_pos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgC2SReqInvestigate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgC2SReqInvestigate_descriptor_;
  metadata.reflection = MsgC2SReqInvestigate_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgC2SReqArmyBackHome::kMArmyidFieldNumber;
#endif  // !_MSC_VER

MsgC2SReqArmyBackHome::MsgC2SReqArmyBackHome()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgProto.MsgC2SReqArmyBackHome)
}

void MsgC2SReqArmyBackHome::InitAsDefaultInstance() {
}

MsgC2SReqArmyBackHome::MsgC2SReqArmyBackHome(const MsgC2SReqArmyBackHome& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgProto.MsgC2SReqArmyBackHome)
}

void MsgC2SReqArmyBackHome::SharedCtor() {
  _cached_size_ = 0;
  m_armyid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgC2SReqArmyBackHome::~MsgC2SReqArmyBackHome() {
  // @@protoc_insertion_point(destructor:MsgProto.MsgC2SReqArmyBackHome)
  SharedDtor();
}

void MsgC2SReqArmyBackHome::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgC2SReqArmyBackHome::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgC2SReqArmyBackHome::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgC2SReqArmyBackHome_descriptor_;
}

const MsgC2SReqArmyBackHome& MsgC2SReqArmyBackHome::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDefine_2eproto();
  return *default_instance_;
}

MsgC2SReqArmyBackHome* MsgC2SReqArmyBackHome::default_instance_ = NULL;

MsgC2SReqArmyBackHome* MsgC2SReqArmyBackHome::New() const {
  return new MsgC2SReqArmyBackHome;
}

void MsgC2SReqArmyBackHome::Clear() {
  m_armyid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgC2SReqArmyBackHome::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgProto.MsgC2SReqArmyBackHome)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 m_armyid = 1 [default = 0];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_armyid_)));
          set_has_m_armyid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgProto.MsgC2SReqArmyBackHome)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgProto.MsgC2SReqArmyBackHome)
  return false;
#undef DO_
}

void MsgC2SReqArmyBackHome::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgProto.MsgC2SReqArmyBackHome)
  // optional uint32 m_armyid = 1 [default = 0];
  if (has_m_armyid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->m_armyid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgProto.MsgC2SReqArmyBackHome)
}

::google::protobuf::uint8* MsgC2SReqArmyBackHome::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgProto.MsgC2SReqArmyBackHome)
  // optional uint32 m_armyid = 1 [default = 0];
  if (has_m_armyid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->m_armyid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgProto.MsgC2SReqArmyBackHome)
  return target;
}

int MsgC2SReqArmyBackHome::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 m_armyid = 1 [default = 0];
    if (has_m_armyid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_armyid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgC2SReqArmyBackHome::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgC2SReqArmyBackHome* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgC2SReqArmyBackHome*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgC2SReqArmyBackHome::MergeFrom(const MsgC2SReqArmyBackHome& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_armyid()) {
      set_m_armyid(from.m_armyid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgC2SReqArmyBackHome::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgC2SReqArmyBackHome::CopyFrom(const MsgC2SReqArmyBackHome& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgC2SReqArmyBackHome::IsInitialized() const {

  return true;
}

void MsgC2SReqArmyBackHome::Swap(MsgC2SReqArmyBackHome* other) {
  if (other != this) {
    std::swap(m_armyid_, other->m_armyid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgC2SReqArmyBackHome::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgC2SReqArmyBackHome_descriptor_;
  metadata.reflection = MsgC2SReqArmyBackHome_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

MsgEndBigWorld::MsgEndBigWorld()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgProto.MsgEndBigWorld)
}

void MsgEndBigWorld::InitAsDefaultInstance() {
}

MsgEndBigWorld::MsgEndBigWorld(const MsgEndBigWorld& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgProto.MsgEndBigWorld)
}

void MsgEndBigWorld::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgEndBigWorld::~MsgEndBigWorld() {
  // @@protoc_insertion_point(destructor:MsgProto.MsgEndBigWorld)
  SharedDtor();
}

void MsgEndBigWorld::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgEndBigWorld::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgEndBigWorld::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgEndBigWorld_descriptor_;
}

const MsgEndBigWorld& MsgEndBigWorld::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDefine_2eproto();
  return *default_instance_;
}

MsgEndBigWorld* MsgEndBigWorld::default_instance_ = NULL;

MsgEndBigWorld* MsgEndBigWorld::New() const {
  return new MsgEndBigWorld;
}

void MsgEndBigWorld::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgEndBigWorld::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgProto.MsgEndBigWorld)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:MsgProto.MsgEndBigWorld)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgProto.MsgEndBigWorld)
  return false;
#undef DO_
}

void MsgEndBigWorld::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgProto.MsgEndBigWorld)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgProto.MsgEndBigWorld)
}

::google::protobuf::uint8* MsgEndBigWorld::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgProto.MsgEndBigWorld)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgProto.MsgEndBigWorld)
  return target;
}

int MsgEndBigWorld::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgEndBigWorld::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgEndBigWorld* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgEndBigWorld*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgEndBigWorld::MergeFrom(const MsgEndBigWorld& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgEndBigWorld::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgEndBigWorld::CopyFrom(const MsgEndBigWorld& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgEndBigWorld::IsInitialized() const {

  return true;
}

void MsgEndBigWorld::Swap(MsgEndBigWorld* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgEndBigWorld::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgEndBigWorld_descriptor_;
  metadata.reflection = MsgEndBigWorld_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

MsgBeginChat::MsgBeginChat()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgProto.MsgBeginChat)
}

void MsgBeginChat::InitAsDefaultInstance() {
}

MsgBeginChat::MsgBeginChat(const MsgBeginChat& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgProto.MsgBeginChat)
}

void MsgBeginChat::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgBeginChat::~MsgBeginChat() {
  // @@protoc_insertion_point(destructor:MsgProto.MsgBeginChat)
  SharedDtor();
}

void MsgBeginChat::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgBeginChat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgBeginChat::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgBeginChat_descriptor_;
}

const MsgBeginChat& MsgBeginChat::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDefine_2eproto();
  return *default_instance_;
}

MsgBeginChat* MsgBeginChat::default_instance_ = NULL;

MsgBeginChat* MsgBeginChat::New() const {
  return new MsgBeginChat;
}

void MsgBeginChat::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgBeginChat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgProto.MsgBeginChat)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:MsgProto.MsgBeginChat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgProto.MsgBeginChat)
  return false;
#undef DO_
}

void MsgBeginChat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgProto.MsgBeginChat)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgProto.MsgBeginChat)
}

::google::protobuf::uint8* MsgBeginChat::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgProto.MsgBeginChat)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgProto.MsgBeginChat)
  return target;
}

int MsgBeginChat::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgBeginChat::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgBeginChat* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgBeginChat*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgBeginChat::MergeFrom(const MsgBeginChat& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgBeginChat::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgBeginChat::CopyFrom(const MsgBeginChat& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgBeginChat::IsInitialized() const {

  return true;
}

void MsgBeginChat::Swap(MsgBeginChat* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgBeginChat::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgBeginChat_descriptor_;
  metadata.reflection = MsgBeginChat_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgC2SReqChat::kMValuesFieldNumber;
#endif  // !_MSC_VER

MsgC2SReqChat::MsgC2SReqChat()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgProto.MsgC2SReqChat)
}

void MsgC2SReqChat::InitAsDefaultInstance() {
}

MsgC2SReqChat::MsgC2SReqChat(const MsgC2SReqChat& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgProto.MsgC2SReqChat)
}

void MsgC2SReqChat::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  m_values_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgC2SReqChat::~MsgC2SReqChat() {
  // @@protoc_insertion_point(destructor:MsgProto.MsgC2SReqChat)
  SharedDtor();
}

void MsgC2SReqChat::SharedDtor() {
  if (m_values_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete m_values_;
  }
  if (this != default_instance_) {
  }
}

void MsgC2SReqChat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgC2SReqChat::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgC2SReqChat_descriptor_;
}

const MsgC2SReqChat& MsgC2SReqChat::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDefine_2eproto();
  return *default_instance_;
}

MsgC2SReqChat* MsgC2SReqChat::default_instance_ = NULL;

MsgC2SReqChat* MsgC2SReqChat::New() const {
  return new MsgC2SReqChat;
}

void MsgC2SReqChat::Clear() {
  if (has_m_values()) {
    if (m_values_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      m_values_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgC2SReqChat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgProto.MsgC2SReqChat)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes m_values = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_m_values()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgProto.MsgC2SReqChat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgProto.MsgC2SReqChat)
  return false;
#undef DO_
}

void MsgC2SReqChat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgProto.MsgC2SReqChat)
  // optional bytes m_values = 1;
  if (has_m_values()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->m_values(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgProto.MsgC2SReqChat)
}

::google::protobuf::uint8* MsgC2SReqChat::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgProto.MsgC2SReqChat)
  // optional bytes m_values = 1;
  if (has_m_values()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->m_values(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgProto.MsgC2SReqChat)
  return target;
}

int MsgC2SReqChat::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bytes m_values = 1;
    if (has_m_values()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->m_values());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgC2SReqChat::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgC2SReqChat* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgC2SReqChat*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgC2SReqChat::MergeFrom(const MsgC2SReqChat& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_values()) {
      set_m_values(from.m_values());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgC2SReqChat::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgC2SReqChat::CopyFrom(const MsgC2SReqChat& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgC2SReqChat::IsInitialized() const {

  return true;
}

void MsgC2SReqChat::Swap(MsgC2SReqChat* other) {
  if (other != this) {
    std::swap(m_values_, other->m_values_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgC2SReqChat::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgC2SReqChat_descriptor_;
  metadata.reflection = MsgC2SReqChat_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgS2CAckChat::kMValuesFieldNumber;
#endif  // !_MSC_VER

MsgS2CAckChat::MsgS2CAckChat()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgProto.MsgS2CAckChat)
}

void MsgS2CAckChat::InitAsDefaultInstance() {
}

MsgS2CAckChat::MsgS2CAckChat(const MsgS2CAckChat& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgProto.MsgS2CAckChat)
}

void MsgS2CAckChat::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  m_values_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgS2CAckChat::~MsgS2CAckChat() {
  // @@protoc_insertion_point(destructor:MsgProto.MsgS2CAckChat)
  SharedDtor();
}

void MsgS2CAckChat::SharedDtor() {
  if (m_values_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete m_values_;
  }
  if (this != default_instance_) {
  }
}

void MsgS2CAckChat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgS2CAckChat::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgS2CAckChat_descriptor_;
}

const MsgS2CAckChat& MsgS2CAckChat::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDefine_2eproto();
  return *default_instance_;
}

MsgS2CAckChat* MsgS2CAckChat::default_instance_ = NULL;

MsgS2CAckChat* MsgS2CAckChat::New() const {
  return new MsgS2CAckChat;
}

void MsgS2CAckChat::Clear() {
  if (has_m_values()) {
    if (m_values_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      m_values_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgS2CAckChat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgProto.MsgS2CAckChat)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes m_values = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_m_values()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgProto.MsgS2CAckChat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgProto.MsgS2CAckChat)
  return false;
#undef DO_
}

void MsgS2CAckChat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgProto.MsgS2CAckChat)
  // optional bytes m_values = 1;
  if (has_m_values()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->m_values(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgProto.MsgS2CAckChat)
}

::google::protobuf::uint8* MsgS2CAckChat::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgProto.MsgS2CAckChat)
  // optional bytes m_values = 1;
  if (has_m_values()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->m_values(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgProto.MsgS2CAckChat)
  return target;
}

int MsgS2CAckChat::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bytes m_values = 1;
    if (has_m_values()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->m_values());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgS2CAckChat::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgS2CAckChat* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgS2CAckChat*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgS2CAckChat::MergeFrom(const MsgS2CAckChat& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_values()) {
      set_m_values(from.m_values());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgS2CAckChat::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgS2CAckChat::CopyFrom(const MsgS2CAckChat& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgS2CAckChat::IsInitialized() const {

  return true;
}

void MsgS2CAckChat::Swap(MsgS2CAckChat* other) {
  if (other != this) {
    std::swap(m_values_, other->m_values_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgS2CAckChat::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgS2CAckChat_descriptor_;
  metadata.reflection = MsgS2CAckChat_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* MsgS2CGMResult_GMType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgS2CGMResult_GMType_descriptor_;
}
bool MsgS2CGMResult_GMType_IsValid(int value) {
  switch(value) {
    case 0:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MsgS2CGMResult_GMType MsgS2CGMResult::E_add_soldier_max;
const MsgS2CGMResult_GMType MsgS2CGMResult::GMType_MIN;
const MsgS2CGMResult_GMType MsgS2CGMResult::GMType_MAX;
const int MsgS2CGMResult::GMType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int MsgS2CGMResult::kMTypeFieldNumber;
const int MsgS2CGMResult::kMValFieldNumber;
#endif  // !_MSC_VER

MsgS2CGMResult::MsgS2CGMResult()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgProto.MsgS2CGMResult)
}

void MsgS2CGMResult::InitAsDefaultInstance() {
}

MsgS2CGMResult::MsgS2CGMResult(const MsgS2CGMResult& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgProto.MsgS2CGMResult)
}

void MsgS2CGMResult::SharedCtor() {
  _cached_size_ = 0;
  m_type_ = 0;
  m_val_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgS2CGMResult::~MsgS2CGMResult() {
  // @@protoc_insertion_point(destructor:MsgProto.MsgS2CGMResult)
  SharedDtor();
}

void MsgS2CGMResult::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgS2CGMResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgS2CGMResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgS2CGMResult_descriptor_;
}

const MsgS2CGMResult& MsgS2CGMResult::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDefine_2eproto();
  return *default_instance_;
}

MsgS2CGMResult* MsgS2CGMResult::default_instance_ = NULL;

MsgS2CGMResult* MsgS2CGMResult::New() const {
  return new MsgS2CGMResult;
}

void MsgS2CGMResult::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgS2CGMResult*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(m_type_, m_val_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgS2CGMResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgProto.MsgS2CGMResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgProto.MsgS2CGMResult.GMType m_type = 1 [default = E_add_soldier_max];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgProto::MsgS2CGMResult_GMType_IsValid(value)) {
            set_m_type(static_cast< ::MsgProto::MsgS2CGMResult_GMType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_m_val;
        break;
      }

      // optional uint32 m_val = 2 [default = 0];
      case 2: {
        if (tag == 16) {
         parse_m_val:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_val_)));
          set_has_m_val();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgProto.MsgS2CGMResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgProto.MsgS2CGMResult)
  return false;
#undef DO_
}

void MsgS2CGMResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgProto.MsgS2CGMResult)
  // optional .MsgProto.MsgS2CGMResult.GMType m_type = 1 [default = E_add_soldier_max];
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->m_type(), output);
  }

  // optional uint32 m_val = 2 [default = 0];
  if (has_m_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->m_val(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgProto.MsgS2CGMResult)
}

::google::protobuf::uint8* MsgS2CGMResult::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgProto.MsgS2CGMResult)
  // optional .MsgProto.MsgS2CGMResult.GMType m_type = 1 [default = E_add_soldier_max];
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->m_type(), target);
  }

  // optional uint32 m_val = 2 [default = 0];
  if (has_m_val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->m_val(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgProto.MsgS2CGMResult)
  return target;
}

int MsgS2CGMResult::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgProto.MsgS2CGMResult.GMType m_type = 1 [default = E_add_soldier_max];
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->m_type());
    }

    // optional uint32 m_val = 2 [default = 0];
    if (has_m_val()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_val());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgS2CGMResult::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgS2CGMResult* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgS2CGMResult*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgS2CGMResult::MergeFrom(const MsgS2CGMResult& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
    if (from.has_m_val()) {
      set_m_val(from.m_val());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgS2CGMResult::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgS2CGMResult::CopyFrom(const MsgS2CGMResult& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgS2CGMResult::IsInitialized() const {

  return true;
}

void MsgS2CGMResult::Swap(MsgS2CGMResult* other) {
  if (other != this) {
    std::swap(m_type_, other->m_type_);
    std::swap(m_val_, other->m_val_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgS2CGMResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgS2CGMResult_descriptor_;
  metadata.reflection = MsgS2CGMResult_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

MsgEndChat::MsgEndChat()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgProto.MsgEndChat)
}

void MsgEndChat::InitAsDefaultInstance() {
}

MsgEndChat::MsgEndChat(const MsgEndChat& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgProto.MsgEndChat)
}

void MsgEndChat::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgEndChat::~MsgEndChat() {
  // @@protoc_insertion_point(destructor:MsgProto.MsgEndChat)
  SharedDtor();
}

void MsgEndChat::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgEndChat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgEndChat::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgEndChat_descriptor_;
}

const MsgEndChat& MsgEndChat::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDefine_2eproto();
  return *default_instance_;
}

MsgEndChat* MsgEndChat::default_instance_ = NULL;

MsgEndChat* MsgEndChat::New() const {
  return new MsgEndChat;
}

void MsgEndChat::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgEndChat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgProto.MsgEndChat)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:MsgProto.MsgEndChat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgProto.MsgEndChat)
  return false;
#undef DO_
}

void MsgEndChat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgProto.MsgEndChat)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgProto.MsgEndChat)
}

::google::protobuf::uint8* MsgEndChat::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgProto.MsgEndChat)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgProto.MsgEndChat)
  return target;
}

int MsgEndChat::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgEndChat::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgEndChat* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgEndChat*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgEndChat::MergeFrom(const MsgEndChat& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgEndChat::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgEndChat::CopyFrom(const MsgEndChat& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgEndChat::IsInitialized() const {

  return true;
}

void MsgEndChat::Swap(MsgEndChat* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgEndChat::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgEndChat_descriptor_;
  metadata.reflection = MsgEndChat_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

MsgBeginReport::MsgBeginReport()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgProto.MsgBeginReport)
}

void MsgBeginReport::InitAsDefaultInstance() {
}

MsgBeginReport::MsgBeginReport(const MsgBeginReport& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgProto.MsgBeginReport)
}

void MsgBeginReport::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgBeginReport::~MsgBeginReport() {
  // @@protoc_insertion_point(destructor:MsgProto.MsgBeginReport)
  SharedDtor();
}

void MsgBeginReport::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgBeginReport::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgBeginReport::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgBeginReport_descriptor_;
}

const MsgBeginReport& MsgBeginReport::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDefine_2eproto();
  return *default_instance_;
}

MsgBeginReport* MsgBeginReport::default_instance_ = NULL;

MsgBeginReport* MsgBeginReport::New() const {
  return new MsgBeginReport;
}

void MsgBeginReport::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgBeginReport::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgProto.MsgBeginReport)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:MsgProto.MsgBeginReport)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgProto.MsgBeginReport)
  return false;
#undef DO_
}

void MsgBeginReport::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgProto.MsgBeginReport)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgProto.MsgBeginReport)
}

::google::protobuf::uint8* MsgBeginReport::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgProto.MsgBeginReport)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgProto.MsgBeginReport)
  return target;
}

int MsgBeginReport::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgBeginReport::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgBeginReport* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgBeginReport*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgBeginReport::MergeFrom(const MsgBeginReport& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgBeginReport::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgBeginReport::CopyFrom(const MsgBeginReport& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgBeginReport::IsInitialized() const {

  return true;
}

void MsgBeginReport::Swap(MsgBeginReport* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgBeginReport::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgBeginReport_descriptor_;
  metadata.reflection = MsgBeginReport_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* MsgC2SReqReport_EReportType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgC2SReqReport_EReportType_descriptor_;
}
bool MsgC2SReqReport_EReportType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MsgC2SReqReport_EReportType MsgC2SReqReport::ert_res;
const MsgC2SReqReport_EReportType MsgC2SReqReport::ert_fight;
const MsgC2SReqReport_EReportType MsgC2SReqReport::ert_invest;
const MsgC2SReqReport_EReportType MsgC2SReqReport::EReportType_MIN;
const MsgC2SReqReport_EReportType MsgC2SReqReport::EReportType_MAX;
const int MsgC2SReqReport::EReportType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int MsgC2SReqReport::kMTypeFieldNumber;
#endif  // !_MSC_VER

MsgC2SReqReport::MsgC2SReqReport()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgProto.MsgC2SReqReport)
}

void MsgC2SReqReport::InitAsDefaultInstance() {
}

MsgC2SReqReport::MsgC2SReqReport(const MsgC2SReqReport& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgProto.MsgC2SReqReport)
}

void MsgC2SReqReport::SharedCtor() {
  _cached_size_ = 0;
  m_type_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgC2SReqReport::~MsgC2SReqReport() {
  // @@protoc_insertion_point(destructor:MsgProto.MsgC2SReqReport)
  SharedDtor();
}

void MsgC2SReqReport::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgC2SReqReport::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgC2SReqReport::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgC2SReqReport_descriptor_;
}

const MsgC2SReqReport& MsgC2SReqReport::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDefine_2eproto();
  return *default_instance_;
}

MsgC2SReqReport* MsgC2SReqReport::default_instance_ = NULL;

MsgC2SReqReport* MsgC2SReqReport::New() const {
  return new MsgC2SReqReport;
}

void MsgC2SReqReport::Clear() {
  m_type_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgC2SReqReport::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgProto.MsgC2SReqReport)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgProto.MsgC2SReqReport.EReportType m_type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgProto::MsgC2SReqReport_EReportType_IsValid(value)) {
            set_m_type(static_cast< ::MsgProto::MsgC2SReqReport_EReportType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgProto.MsgC2SReqReport)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgProto.MsgC2SReqReport)
  return false;
#undef DO_
}

void MsgC2SReqReport::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgProto.MsgC2SReqReport)
  // optional .MsgProto.MsgC2SReqReport.EReportType m_type = 1;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgProto.MsgC2SReqReport)
}

::google::protobuf::uint8* MsgC2SReqReport::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgProto.MsgC2SReqReport)
  // optional .MsgProto.MsgC2SReqReport.EReportType m_type = 1;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgProto.MsgC2SReqReport)
  return target;
}

int MsgC2SReqReport::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgProto.MsgC2SReqReport.EReportType m_type = 1;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgC2SReqReport::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgC2SReqReport* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgC2SReqReport*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgC2SReqReport::MergeFrom(const MsgC2SReqReport& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgC2SReqReport::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgC2SReqReport::CopyFrom(const MsgC2SReqReport& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgC2SReqReport::IsInitialized() const {

  return true;
}

void MsgC2SReqReport::Swap(MsgC2SReqReport* other) {
  if (other != this) {
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgC2SReqReport::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgC2SReqReport_descriptor_;
  metadata.reflection = MsgC2SReqReport_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgS2CAckReport::kMResFieldNumber;
const int MsgS2CAckReport::kMFightMiniFieldNumber;
const int MsgS2CAckReport::kMInvestFieldNumber;
#endif  // !_MSC_VER

MsgS2CAckReport::MsgS2CAckReport()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgProto.MsgS2CAckReport)
}

void MsgS2CAckReport::InitAsDefaultInstance() {
}

MsgS2CAckReport::MsgS2CAckReport(const MsgS2CAckReport& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgProto.MsgS2CAckReport)
}

void MsgS2CAckReport::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgS2CAckReport::~MsgS2CAckReport() {
  // @@protoc_insertion_point(destructor:MsgProto.MsgS2CAckReport)
  SharedDtor();
}

void MsgS2CAckReport::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgS2CAckReport::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgS2CAckReport::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgS2CAckReport_descriptor_;
}

const MsgS2CAckReport& MsgS2CAckReport::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDefine_2eproto();
  return *default_instance_;
}

MsgS2CAckReport* MsgS2CAckReport::default_instance_ = NULL;

MsgS2CAckReport* MsgS2CAckReport::New() const {
  return new MsgS2CAckReport;
}

void MsgS2CAckReport::Clear() {
  m_res_.Clear();
  m_fight_mini_.Clear();
  m_invest_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgS2CAckReport::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgProto.MsgS2CAckReport)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .MsgProto.ResReport m_res = 1;
      case 1: {
        if (tag == 10) {
         parse_m_res:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_res()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_m_res;
        if (input->ExpectTag(18)) goto parse_m_fight_mini;
        break;
      }

      // repeated .MsgProto.FightReportMini m_fight_mini = 2;
      case 2: {
        if (tag == 18) {
         parse_m_fight_mini:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_fight_mini()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_m_fight_mini;
        if (input->ExpectTag(26)) goto parse_m_invest;
        break;
      }

      // repeated .MsgProto.InvestReportMini m_invest = 3;
      case 3: {
        if (tag == 26) {
         parse_m_invest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_invest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_m_invest;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgProto.MsgS2CAckReport)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgProto.MsgS2CAckReport)
  return false;
#undef DO_
}

void MsgS2CAckReport::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgProto.MsgS2CAckReport)
  // repeated .MsgProto.ResReport m_res = 1;
  for (int i = 0; i < this->m_res_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->m_res(i), output);
  }

  // repeated .MsgProto.FightReportMini m_fight_mini = 2;
  for (int i = 0; i < this->m_fight_mini_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->m_fight_mini(i), output);
  }

  // repeated .MsgProto.InvestReportMini m_invest = 3;
  for (int i = 0; i < this->m_invest_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->m_invest(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgProto.MsgS2CAckReport)
}

::google::protobuf::uint8* MsgS2CAckReport::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgProto.MsgS2CAckReport)
  // repeated .MsgProto.ResReport m_res = 1;
  for (int i = 0; i < this->m_res_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->m_res(i), target);
  }

  // repeated .MsgProto.FightReportMini m_fight_mini = 2;
  for (int i = 0; i < this->m_fight_mini_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->m_fight_mini(i), target);
  }

  // repeated .MsgProto.InvestReportMini m_invest = 3;
  for (int i = 0; i < this->m_invest_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->m_invest(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgProto.MsgS2CAckReport)
  return target;
}

int MsgS2CAckReport::ByteSize() const {
  int total_size = 0;

  // repeated .MsgProto.ResReport m_res = 1;
  total_size += 1 * this->m_res_size();
  for (int i = 0; i < this->m_res_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_res(i));
  }

  // repeated .MsgProto.FightReportMini m_fight_mini = 2;
  total_size += 1 * this->m_fight_mini_size();
  for (int i = 0; i < this->m_fight_mini_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_fight_mini(i));
  }

  // repeated .MsgProto.InvestReportMini m_invest = 3;
  total_size += 1 * this->m_invest_size();
  for (int i = 0; i < this->m_invest_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_invest(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgS2CAckReport::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgS2CAckReport* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgS2CAckReport*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgS2CAckReport::MergeFrom(const MsgS2CAckReport& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_res_.MergeFrom(from.m_res_);
  m_fight_mini_.MergeFrom(from.m_fight_mini_);
  m_invest_.MergeFrom(from.m_invest_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgS2CAckReport::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgS2CAckReport::CopyFrom(const MsgS2CAckReport& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgS2CAckReport::IsInitialized() const {

  return true;
}

void MsgS2CAckReport::Swap(MsgS2CAckReport* other) {
  if (other != this) {
    m_res_.Swap(&other->m_res_);
    m_fight_mini_.Swap(&other->m_fight_mini_);
    m_invest_.Swap(&other->m_invest_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgS2CAckReport::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgS2CAckReport_descriptor_;
  metadata.reflection = MsgS2CAckReport_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgC2SReqFightReport::kMIdFieldNumber;
#endif  // !_MSC_VER

MsgC2SReqFightReport::MsgC2SReqFightReport()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgProto.MsgC2SReqFightReport)
}

void MsgC2SReqFightReport::InitAsDefaultInstance() {
}

MsgC2SReqFightReport::MsgC2SReqFightReport(const MsgC2SReqFightReport& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgProto.MsgC2SReqFightReport)
}

void MsgC2SReqFightReport::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgC2SReqFightReport::~MsgC2SReqFightReport() {
  // @@protoc_insertion_point(destructor:MsgProto.MsgC2SReqFightReport)
  SharedDtor();
}

void MsgC2SReqFightReport::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgC2SReqFightReport::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgC2SReqFightReport::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgC2SReqFightReport_descriptor_;
}

const MsgC2SReqFightReport& MsgC2SReqFightReport::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDefine_2eproto();
  return *default_instance_;
}

MsgC2SReqFightReport* MsgC2SReqFightReport::default_instance_ = NULL;

MsgC2SReqFightReport* MsgC2SReqFightReport::New() const {
  return new MsgC2SReqFightReport;
}

void MsgC2SReqFightReport::Clear() {
  m_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgC2SReqFightReport::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgProto.MsgC2SReqFightReport)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 m_id = 1 [default = 0];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgProto.MsgC2SReqFightReport)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgProto.MsgC2SReqFightReport)
  return false;
#undef DO_
}

void MsgC2SReqFightReport::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgProto.MsgC2SReqFightReport)
  // optional uint32 m_id = 1 [default = 0];
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgProto.MsgC2SReqFightReport)
}

::google::protobuf::uint8* MsgC2SReqFightReport::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgProto.MsgC2SReqFightReport)
  // optional uint32 m_id = 1 [default = 0];
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgProto.MsgC2SReqFightReport)
  return target;
}

int MsgC2SReqFightReport::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 m_id = 1 [default = 0];
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgC2SReqFightReport::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgC2SReqFightReport* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgC2SReqFightReport*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgC2SReqFightReport::MergeFrom(const MsgC2SReqFightReport& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgC2SReqFightReport::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgC2SReqFightReport::CopyFrom(const MsgC2SReqFightReport& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgC2SReqFightReport::IsInitialized() const {

  return true;
}

void MsgC2SReqFightReport::Swap(MsgC2SReqFightReport* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgC2SReqFightReport::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgC2SReqFightReport_descriptor_;
  metadata.reflection = MsgC2SReqFightReport_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgS2CAckFightReport::kMReportFieldNumber;
#endif  // !_MSC_VER

MsgS2CAckFightReport::MsgS2CAckFightReport()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgProto.MsgS2CAckFightReport)
}

void MsgS2CAckFightReport::InitAsDefaultInstance() {
  m_report_ = const_cast< ::MsgProto::FightReport*>(&::MsgProto::FightReport::default_instance());
}

MsgS2CAckFightReport::MsgS2CAckFightReport(const MsgS2CAckFightReport& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgProto.MsgS2CAckFightReport)
}

void MsgS2CAckFightReport::SharedCtor() {
  _cached_size_ = 0;
  m_report_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgS2CAckFightReport::~MsgS2CAckFightReport() {
  // @@protoc_insertion_point(destructor:MsgProto.MsgS2CAckFightReport)
  SharedDtor();
}

void MsgS2CAckFightReport::SharedDtor() {
  if (this != default_instance_) {
    delete m_report_;
  }
}

void MsgS2CAckFightReport::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgS2CAckFightReport::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgS2CAckFightReport_descriptor_;
}

const MsgS2CAckFightReport& MsgS2CAckFightReport::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDefine_2eproto();
  return *default_instance_;
}

MsgS2CAckFightReport* MsgS2CAckFightReport::default_instance_ = NULL;

MsgS2CAckFightReport* MsgS2CAckFightReport::New() const {
  return new MsgS2CAckFightReport;
}

void MsgS2CAckFightReport::Clear() {
  if (has_m_report()) {
    if (m_report_ != NULL) m_report_->::MsgProto::FightReport::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgS2CAckFightReport::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgProto.MsgS2CAckFightReport)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgProto.FightReport m_report = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_m_report()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgProto.MsgS2CAckFightReport)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgProto.MsgS2CAckFightReport)
  return false;
#undef DO_
}

void MsgS2CAckFightReport::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgProto.MsgS2CAckFightReport)
  // optional .MsgProto.FightReport m_report = 1;
  if (has_m_report()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->m_report(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgProto.MsgS2CAckFightReport)
}

::google::protobuf::uint8* MsgS2CAckFightReport::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgProto.MsgS2CAckFightReport)
  // optional .MsgProto.FightReport m_report = 1;
  if (has_m_report()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->m_report(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgProto.MsgS2CAckFightReport)
  return target;
}

int MsgS2CAckFightReport::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgProto.FightReport m_report = 1;
    if (has_m_report()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->m_report());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgS2CAckFightReport::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgS2CAckFightReport* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgS2CAckFightReport*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgS2CAckFightReport::MergeFrom(const MsgS2CAckFightReport& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_report()) {
      mutable_m_report()->::MsgProto::FightReport::MergeFrom(from.m_report());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgS2CAckFightReport::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgS2CAckFightReport::CopyFrom(const MsgS2CAckFightReport& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgS2CAckFightReport::IsInitialized() const {

  return true;
}

void MsgS2CAckFightReport::Swap(MsgS2CAckFightReport* other) {
  if (other != this) {
    std::swap(m_report_, other->m_report_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgS2CAckFightReport::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgS2CAckFightReport_descriptor_;
  metadata.reflection = MsgS2CAckFightReport_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgC2SReqInvestReport::kMIdFieldNumber;
#endif  // !_MSC_VER

MsgC2SReqInvestReport::MsgC2SReqInvestReport()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgProto.MsgC2SReqInvestReport)
}

void MsgC2SReqInvestReport::InitAsDefaultInstance() {
}

MsgC2SReqInvestReport::MsgC2SReqInvestReport(const MsgC2SReqInvestReport& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgProto.MsgC2SReqInvestReport)
}

void MsgC2SReqInvestReport::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgC2SReqInvestReport::~MsgC2SReqInvestReport() {
  // @@protoc_insertion_point(destructor:MsgProto.MsgC2SReqInvestReport)
  SharedDtor();
}

void MsgC2SReqInvestReport::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgC2SReqInvestReport::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgC2SReqInvestReport::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgC2SReqInvestReport_descriptor_;
}

const MsgC2SReqInvestReport& MsgC2SReqInvestReport::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDefine_2eproto();
  return *default_instance_;
}

MsgC2SReqInvestReport* MsgC2SReqInvestReport::default_instance_ = NULL;

MsgC2SReqInvestReport* MsgC2SReqInvestReport::New() const {
  return new MsgC2SReqInvestReport;
}

void MsgC2SReqInvestReport::Clear() {
  m_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgC2SReqInvestReport::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgProto.MsgC2SReqInvestReport)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 m_id = 1 [default = 0];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgProto.MsgC2SReqInvestReport)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgProto.MsgC2SReqInvestReport)
  return false;
#undef DO_
}

void MsgC2SReqInvestReport::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgProto.MsgC2SReqInvestReport)
  // optional uint32 m_id = 1 [default = 0];
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgProto.MsgC2SReqInvestReport)
}

::google::protobuf::uint8* MsgC2SReqInvestReport::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgProto.MsgC2SReqInvestReport)
  // optional uint32 m_id = 1 [default = 0];
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgProto.MsgC2SReqInvestReport)
  return target;
}

int MsgC2SReqInvestReport::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 m_id = 1 [default = 0];
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgC2SReqInvestReport::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgC2SReqInvestReport* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgC2SReqInvestReport*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgC2SReqInvestReport::MergeFrom(const MsgC2SReqInvestReport& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgC2SReqInvestReport::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgC2SReqInvestReport::CopyFrom(const MsgC2SReqInvestReport& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgC2SReqInvestReport::IsInitialized() const {

  return true;
}

void MsgC2SReqInvestReport::Swap(MsgC2SReqInvestReport* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgC2SReqInvestReport::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgC2SReqInvestReport_descriptor_;
  metadata.reflection = MsgC2SReqInvestReport_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgS2CAckInvestReport::kMReportFieldNumber;
#endif  // !_MSC_VER

MsgS2CAckInvestReport::MsgS2CAckInvestReport()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgProto.MsgS2CAckInvestReport)
}

void MsgS2CAckInvestReport::InitAsDefaultInstance() {
  m_report_ = const_cast< ::MsgProto::InvestigationReport*>(&::MsgProto::InvestigationReport::default_instance());
}

MsgS2CAckInvestReport::MsgS2CAckInvestReport(const MsgS2CAckInvestReport& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgProto.MsgS2CAckInvestReport)
}

void MsgS2CAckInvestReport::SharedCtor() {
  _cached_size_ = 0;
  m_report_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgS2CAckInvestReport::~MsgS2CAckInvestReport() {
  // @@protoc_insertion_point(destructor:MsgProto.MsgS2CAckInvestReport)
  SharedDtor();
}

void MsgS2CAckInvestReport::SharedDtor() {
  if (this != default_instance_) {
    delete m_report_;
  }
}

void MsgS2CAckInvestReport::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgS2CAckInvestReport::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgS2CAckInvestReport_descriptor_;
}

const MsgS2CAckInvestReport& MsgS2CAckInvestReport::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDefine_2eproto();
  return *default_instance_;
}

MsgS2CAckInvestReport* MsgS2CAckInvestReport::default_instance_ = NULL;

MsgS2CAckInvestReport* MsgS2CAckInvestReport::New() const {
  return new MsgS2CAckInvestReport;
}

void MsgS2CAckInvestReport::Clear() {
  if (has_m_report()) {
    if (m_report_ != NULL) m_report_->::MsgProto::InvestigationReport::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgS2CAckInvestReport::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgProto.MsgS2CAckInvestReport)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgProto.InvestigationReport m_report = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_m_report()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgProto.MsgS2CAckInvestReport)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgProto.MsgS2CAckInvestReport)
  return false;
#undef DO_
}

void MsgS2CAckInvestReport::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgProto.MsgS2CAckInvestReport)
  // optional .MsgProto.InvestigationReport m_report = 1;
  if (has_m_report()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->m_report(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgProto.MsgS2CAckInvestReport)
}

::google::protobuf::uint8* MsgS2CAckInvestReport::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgProto.MsgS2CAckInvestReport)
  // optional .MsgProto.InvestigationReport m_report = 1;
  if (has_m_report()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->m_report(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgProto.MsgS2CAckInvestReport)
  return target;
}

int MsgS2CAckInvestReport::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgProto.InvestigationReport m_report = 1;
    if (has_m_report()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->m_report());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgS2CAckInvestReport::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgS2CAckInvestReport* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgS2CAckInvestReport*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgS2CAckInvestReport::MergeFrom(const MsgS2CAckInvestReport& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_report()) {
      mutable_m_report()->::MsgProto::InvestigationReport::MergeFrom(from.m_report());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgS2CAckInvestReport::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgS2CAckInvestReport::CopyFrom(const MsgS2CAckInvestReport& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgS2CAckInvestReport::IsInitialized() const {

  return true;
}

void MsgS2CAckInvestReport::Swap(MsgS2CAckInvestReport* other) {
  if (other != this) {
    std::swap(m_report_, other->m_report_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgS2CAckInvestReport::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgS2CAckInvestReport_descriptor_;
  metadata.reflection = MsgS2CAckInvestReport_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

MsgEndReport::MsgEndReport()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgProto.MsgEndReport)
}

void MsgEndReport::InitAsDefaultInstance() {
}

MsgEndReport::MsgEndReport(const MsgEndReport& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgProto.MsgEndReport)
}

void MsgEndReport::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgEndReport::~MsgEndReport() {
  // @@protoc_insertion_point(destructor:MsgProto.MsgEndReport)
  SharedDtor();
}

void MsgEndReport::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgEndReport::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgEndReport::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgEndReport_descriptor_;
}

const MsgEndReport& MsgEndReport::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDefine_2eproto();
  return *default_instance_;
}

MsgEndReport* MsgEndReport::default_instance_ = NULL;

MsgEndReport* MsgEndReport::New() const {
  return new MsgEndReport;
}

void MsgEndReport::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgEndReport::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgProto.MsgEndReport)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:MsgProto.MsgEndReport)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgProto.MsgEndReport)
  return false;
#undef DO_
}

void MsgEndReport::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgProto.MsgEndReport)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgProto.MsgEndReport)
}

::google::protobuf::uint8* MsgEndReport::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgProto.MsgEndReport)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgProto.MsgEndReport)
  return target;
}

int MsgEndReport::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgEndReport::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgEndReport* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgEndReport*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgEndReport::MergeFrom(const MsgEndReport& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgEndReport::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgEndReport::CopyFrom(const MsgEndReport& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgEndReport::IsInitialized() const {

  return true;
}

void MsgEndReport::Swap(MsgEndReport* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgEndReport::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgEndReport_descriptor_;
  metadata.reflection = MsgEndReport_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

MsgBeginBoss::MsgBeginBoss()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgProto.MsgBeginBoss)
}

void MsgBeginBoss::InitAsDefaultInstance() {
}

MsgBeginBoss::MsgBeginBoss(const MsgBeginBoss& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgProto.MsgBeginBoss)
}

void MsgBeginBoss::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgBeginBoss::~MsgBeginBoss() {
  // @@protoc_insertion_point(destructor:MsgProto.MsgBeginBoss)
  SharedDtor();
}

void MsgBeginBoss::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgBeginBoss::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgBeginBoss::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgBeginBoss_descriptor_;
}

const MsgBeginBoss& MsgBeginBoss::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDefine_2eproto();
  return *default_instance_;
}

MsgBeginBoss* MsgBeginBoss::default_instance_ = NULL;

MsgBeginBoss* MsgBeginBoss::New() const {
  return new MsgBeginBoss;
}

void MsgBeginBoss::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgBeginBoss::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgProto.MsgBeginBoss)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:MsgProto.MsgBeginBoss)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgProto.MsgBeginBoss)
  return false;
#undef DO_
}

void MsgBeginBoss::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgProto.MsgBeginBoss)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgProto.MsgBeginBoss)
}

::google::protobuf::uint8* MsgBeginBoss::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgProto.MsgBeginBoss)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgProto.MsgBeginBoss)
  return target;
}

int MsgBeginBoss::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgBeginBoss::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgBeginBoss* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgBeginBoss*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgBeginBoss::MergeFrom(const MsgBeginBoss& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgBeginBoss::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgBeginBoss::CopyFrom(const MsgBeginBoss& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgBeginBoss::IsInitialized() const {

  return true;
}

void MsgBeginBoss::Swap(MsgBeginBoss* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgBeginBoss::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgBeginBoss_descriptor_;
  metadata.reflection = MsgBeginBoss_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* MsgS2CNotifyBoss_BossState_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgS2CNotifyBoss_BossState_descriptor_;
}
bool MsgS2CNotifyBoss_BossState_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MsgS2CNotifyBoss_BossState MsgS2CNotifyBoss::bs_begin;
const MsgS2CNotifyBoss_BossState MsgS2CNotifyBoss::bs_end;
const MsgS2CNotifyBoss_BossState MsgS2CNotifyBoss::BossState_MIN;
const MsgS2CNotifyBoss_BossState MsgS2CNotifyBoss::BossState_MAX;
const int MsgS2CNotifyBoss::BossState_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int MsgS2CNotifyBoss::kMStateFieldNumber;
const int MsgS2CNotifyBoss::kMTurretFieldNumber;
const int MsgS2CNotifyBoss::kMBossidFieldNumber;
#endif  // !_MSC_VER

MsgS2CNotifyBoss::MsgS2CNotifyBoss()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgProto.MsgS2CNotifyBoss)
}

void MsgS2CNotifyBoss::InitAsDefaultInstance() {
}

MsgS2CNotifyBoss::MsgS2CNotifyBoss(const MsgS2CNotifyBoss& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgProto.MsgS2CNotifyBoss)
}

void MsgS2CNotifyBoss::SharedCtor() {
  _cached_size_ = 0;
  m_state_ = 0;
  m_turret_ = 0u;
  m_bossid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgS2CNotifyBoss::~MsgS2CNotifyBoss() {
  // @@protoc_insertion_point(destructor:MsgProto.MsgS2CNotifyBoss)
  SharedDtor();
}

void MsgS2CNotifyBoss::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgS2CNotifyBoss::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgS2CNotifyBoss::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgS2CNotifyBoss_descriptor_;
}

const MsgS2CNotifyBoss& MsgS2CNotifyBoss::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDefine_2eproto();
  return *default_instance_;
}

MsgS2CNotifyBoss* MsgS2CNotifyBoss::default_instance_ = NULL;

MsgS2CNotifyBoss* MsgS2CNotifyBoss::New() const {
  return new MsgS2CNotifyBoss;
}

void MsgS2CNotifyBoss::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgS2CNotifyBoss*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(m_state_, m_bossid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgS2CNotifyBoss::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgProto.MsgS2CNotifyBoss)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgProto.MsgS2CNotifyBoss.BossState m_state = 1 [default = bs_begin];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgProto::MsgS2CNotifyBoss_BossState_IsValid(value)) {
            set_m_state(static_cast< ::MsgProto::MsgS2CNotifyBoss_BossState >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_m_turret;
        break;
      }

      // optional uint32 m_turret = 2 [default = 0];
      case 2: {
        if (tag == 16) {
         parse_m_turret:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_turret_)));
          set_has_m_turret();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_m_bossid;
        break;
      }

      // optional uint32 m_bossid = 3 [default = 0];
      case 3: {
        if (tag == 24) {
         parse_m_bossid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_bossid_)));
          set_has_m_bossid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgProto.MsgS2CNotifyBoss)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgProto.MsgS2CNotifyBoss)
  return false;
#undef DO_
}

void MsgS2CNotifyBoss::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgProto.MsgS2CNotifyBoss)
  // optional .MsgProto.MsgS2CNotifyBoss.BossState m_state = 1 [default = bs_begin];
  if (has_m_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->m_state(), output);
  }

  // optional uint32 m_turret = 2 [default = 0];
  if (has_m_turret()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->m_turret(), output);
  }

  // optional uint32 m_bossid = 3 [default = 0];
  if (has_m_bossid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->m_bossid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgProto.MsgS2CNotifyBoss)
}

::google::protobuf::uint8* MsgS2CNotifyBoss::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgProto.MsgS2CNotifyBoss)
  // optional .MsgProto.MsgS2CNotifyBoss.BossState m_state = 1 [default = bs_begin];
  if (has_m_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->m_state(), target);
  }

  // optional uint32 m_turret = 2 [default = 0];
  if (has_m_turret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->m_turret(), target);
  }

  // optional uint32 m_bossid = 3 [default = 0];
  if (has_m_bossid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->m_bossid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgProto.MsgS2CNotifyBoss)
  return target;
}

int MsgS2CNotifyBoss::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgProto.MsgS2CNotifyBoss.BossState m_state = 1 [default = bs_begin];
    if (has_m_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->m_state());
    }

    // optional uint32 m_turret = 2 [default = 0];
    if (has_m_turret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_turret());
    }

    // optional uint32 m_bossid = 3 [default = 0];
    if (has_m_bossid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_bossid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgS2CNotifyBoss::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgS2CNotifyBoss* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgS2CNotifyBoss*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgS2CNotifyBoss::MergeFrom(const MsgS2CNotifyBoss& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_state()) {
      set_m_state(from.m_state());
    }
    if (from.has_m_turret()) {
      set_m_turret(from.m_turret());
    }
    if (from.has_m_bossid()) {
      set_m_bossid(from.m_bossid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgS2CNotifyBoss::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgS2CNotifyBoss::CopyFrom(const MsgS2CNotifyBoss& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgS2CNotifyBoss::IsInitialized() const {

  return true;
}

void MsgS2CNotifyBoss::Swap(MsgS2CNotifyBoss* other) {
  if (other != this) {
    std::swap(m_state_, other->m_state_);
    std::swap(m_turret_, other->m_turret_);
    std::swap(m_bossid_, other->m_bossid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgS2CNotifyBoss::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgS2CNotifyBoss_descriptor_;
  metadata.reflection = MsgS2CNotifyBoss_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgS2CNotifyTurret::kMTurretFieldNumber;
#endif  // !_MSC_VER

MsgS2CNotifyTurret::MsgS2CNotifyTurret()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgProto.MsgS2CNotifyTurret)
}

void MsgS2CNotifyTurret::InitAsDefaultInstance() {
}

MsgS2CNotifyTurret::MsgS2CNotifyTurret(const MsgS2CNotifyTurret& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgProto.MsgS2CNotifyTurret)
}

void MsgS2CNotifyTurret::SharedCtor() {
  _cached_size_ = 0;
  m_turret_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgS2CNotifyTurret::~MsgS2CNotifyTurret() {
  // @@protoc_insertion_point(destructor:MsgProto.MsgS2CNotifyTurret)
  SharedDtor();
}

void MsgS2CNotifyTurret::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgS2CNotifyTurret::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgS2CNotifyTurret::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgS2CNotifyTurret_descriptor_;
}

const MsgS2CNotifyTurret& MsgS2CNotifyTurret::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDefine_2eproto();
  return *default_instance_;
}

MsgS2CNotifyTurret* MsgS2CNotifyTurret::default_instance_ = NULL;

MsgS2CNotifyTurret* MsgS2CNotifyTurret::New() const {
  return new MsgS2CNotifyTurret;
}

void MsgS2CNotifyTurret::Clear() {
  m_turret_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgS2CNotifyTurret::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgProto.MsgS2CNotifyTurret)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 m_turret = 1 [default = 0];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_turret_)));
          set_has_m_turret();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgProto.MsgS2CNotifyTurret)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgProto.MsgS2CNotifyTurret)
  return false;
#undef DO_
}

void MsgS2CNotifyTurret::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgProto.MsgS2CNotifyTurret)
  // optional uint32 m_turret = 1 [default = 0];
  if (has_m_turret()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->m_turret(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgProto.MsgS2CNotifyTurret)
}

::google::protobuf::uint8* MsgS2CNotifyTurret::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgProto.MsgS2CNotifyTurret)
  // optional uint32 m_turret = 1 [default = 0];
  if (has_m_turret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->m_turret(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgProto.MsgS2CNotifyTurret)
  return target;
}

int MsgS2CNotifyTurret::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 m_turret = 1 [default = 0];
    if (has_m_turret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_turret());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgS2CNotifyTurret::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgS2CNotifyTurret* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgS2CNotifyTurret*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgS2CNotifyTurret::MergeFrom(const MsgS2CNotifyTurret& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_turret()) {
      set_m_turret(from.m_turret());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgS2CNotifyTurret::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgS2CNotifyTurret::CopyFrom(const MsgS2CNotifyTurret& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgS2CNotifyTurret::IsInitialized() const {

  return true;
}

void MsgS2CNotifyTurret::Swap(MsgS2CNotifyTurret* other) {
  if (other != this) {
    std::swap(m_turret_, other->m_turret_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgS2CNotifyTurret::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgS2CNotifyTurret_descriptor_;
  metadata.reflection = MsgS2CNotifyTurret_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgS2CTurretAttack::kMPosFieldNumber;
const int MsgS2CTurretAttack::kMPosBossFieldNumber;
#endif  // !_MSC_VER

MsgS2CTurretAttack::MsgS2CTurretAttack()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgProto.MsgS2CTurretAttack)
}

void MsgS2CTurretAttack::InitAsDefaultInstance() {
  m_pos_ = const_cast< ::MsgProto::WorldPos*>(&::MsgProto::WorldPos::default_instance());
  m_pos_boss_ = const_cast< ::MsgProto::WorldPos*>(&::MsgProto::WorldPos::default_instance());
}

MsgS2CTurretAttack::MsgS2CTurretAttack(const MsgS2CTurretAttack& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgProto.MsgS2CTurretAttack)
}

void MsgS2CTurretAttack::SharedCtor() {
  _cached_size_ = 0;
  m_pos_ = NULL;
  m_pos_boss_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgS2CTurretAttack::~MsgS2CTurretAttack() {
  // @@protoc_insertion_point(destructor:MsgProto.MsgS2CTurretAttack)
  SharedDtor();
}

void MsgS2CTurretAttack::SharedDtor() {
  if (this != default_instance_) {
    delete m_pos_;
    delete m_pos_boss_;
  }
}

void MsgS2CTurretAttack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgS2CTurretAttack::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgS2CTurretAttack_descriptor_;
}

const MsgS2CTurretAttack& MsgS2CTurretAttack::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDefine_2eproto();
  return *default_instance_;
}

MsgS2CTurretAttack* MsgS2CTurretAttack::default_instance_ = NULL;

MsgS2CTurretAttack* MsgS2CTurretAttack::New() const {
  return new MsgS2CTurretAttack;
}

void MsgS2CTurretAttack::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_m_pos()) {
      if (m_pos_ != NULL) m_pos_->::MsgProto::WorldPos::Clear();
    }
    if (has_m_pos_boss()) {
      if (m_pos_boss_ != NULL) m_pos_boss_->::MsgProto::WorldPos::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgS2CTurretAttack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgProto.MsgS2CTurretAttack)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgProto.WorldPos m_pos = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_m_pos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_m_pos_boss;
        break;
      }

      // optional .MsgProto.WorldPos m_pos_boss = 2;
      case 2: {
        if (tag == 18) {
         parse_m_pos_boss:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_m_pos_boss()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgProto.MsgS2CTurretAttack)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgProto.MsgS2CTurretAttack)
  return false;
#undef DO_
}

void MsgS2CTurretAttack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgProto.MsgS2CTurretAttack)
  // optional .MsgProto.WorldPos m_pos = 1;
  if (has_m_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->m_pos(), output);
  }

  // optional .MsgProto.WorldPos m_pos_boss = 2;
  if (has_m_pos_boss()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->m_pos_boss(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgProto.MsgS2CTurretAttack)
}

::google::protobuf::uint8* MsgS2CTurretAttack::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgProto.MsgS2CTurretAttack)
  // optional .MsgProto.WorldPos m_pos = 1;
  if (has_m_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->m_pos(), target);
  }

  // optional .MsgProto.WorldPos m_pos_boss = 2;
  if (has_m_pos_boss()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->m_pos_boss(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgProto.MsgS2CTurretAttack)
  return target;
}

int MsgS2CTurretAttack::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgProto.WorldPos m_pos = 1;
    if (has_m_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->m_pos());
    }

    // optional .MsgProto.WorldPos m_pos_boss = 2;
    if (has_m_pos_boss()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->m_pos_boss());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgS2CTurretAttack::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgS2CTurretAttack* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgS2CTurretAttack*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgS2CTurretAttack::MergeFrom(const MsgS2CTurretAttack& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_pos()) {
      mutable_m_pos()->::MsgProto::WorldPos::MergeFrom(from.m_pos());
    }
    if (from.has_m_pos_boss()) {
      mutable_m_pos_boss()->::MsgProto::WorldPos::MergeFrom(from.m_pos_boss());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgS2CTurretAttack::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgS2CTurretAttack::CopyFrom(const MsgS2CTurretAttack& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgS2CTurretAttack::IsInitialized() const {

  return true;
}

void MsgS2CTurretAttack::Swap(MsgS2CTurretAttack* other) {
  if (other != this) {
    std::swap(m_pos_, other->m_pos_);
    std::swap(m_pos_boss_, other->m_pos_boss_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgS2CTurretAttack::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgS2CTurretAttack_descriptor_;
  metadata.reflection = MsgS2CTurretAttack_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

MsgEndBoss::MsgEndBoss()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgProto.MsgEndBoss)
}

void MsgEndBoss::InitAsDefaultInstance() {
}

MsgEndBoss::MsgEndBoss(const MsgEndBoss& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgProto.MsgEndBoss)
}

void MsgEndBoss::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgEndBoss::~MsgEndBoss() {
  // @@protoc_insertion_point(destructor:MsgProto.MsgEndBoss)
  SharedDtor();
}

void MsgEndBoss::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgEndBoss::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgEndBoss::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgEndBoss_descriptor_;
}

const MsgEndBoss& MsgEndBoss::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDefine_2eproto();
  return *default_instance_;
}

MsgEndBoss* MsgEndBoss::default_instance_ = NULL;

MsgEndBoss* MsgEndBoss::New() const {
  return new MsgEndBoss;
}

void MsgEndBoss::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgEndBoss::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgProto.MsgEndBoss)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:MsgProto.MsgEndBoss)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgProto.MsgEndBoss)
  return false;
#undef DO_
}

void MsgEndBoss::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgProto.MsgEndBoss)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgProto.MsgEndBoss)
}

::google::protobuf::uint8* MsgEndBoss::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgProto.MsgEndBoss)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgProto.MsgEndBoss)
  return target;
}

int MsgEndBoss::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgEndBoss::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgEndBoss* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgEndBoss*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgEndBoss::MergeFrom(const MsgEndBoss& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgEndBoss::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgEndBoss::CopyFrom(const MsgEndBoss& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgEndBoss::IsInitialized() const {

  return true;
}

void MsgEndBoss::Swap(MsgEndBoss* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgEndBoss::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgEndBoss_descriptor_;
  metadata.reflection = MsgEndBoss_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace MsgProto

// @@protoc_insertion_point(global_scope)
